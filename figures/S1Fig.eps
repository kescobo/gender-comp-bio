%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Figures.pdf
%%Creator: (Adobe Acrobat 17.9.0)
%%For: ksb
%%CreationDate: 4/13/17, 11:51 AM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 831 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2017-04-13T11:47:04-04:00"
   xmp:CreateDate="2017-04-13T11:47:04-04:00"
   xmp:MetadataDate="2017-04-13T11:47:04-04:00"
   xmp:CreatorTool="Acrobat Pro DC 17.9.20044"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:9c83a175-6b68-3d4f-8cd3-d0d10d1ef2f2"
   xmpMM:InstanceID="uuid:ff9a9f85-f0f9-014d-9563-47f87e30492d"
   pdf:Producer="Acrobat Pro DC 17.9.20044"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 4 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: LDAAAA+Georgia-Bold-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (LDAAAA+Georgia-Bold)%%Title: (LDAAAA+Georgia-Bold Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /LDAAAA+Georgia-Bold def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-549 -303 2069 1100} def/FontInfo 4 dict dup begin/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 1134 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 7 dict dup begin/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 8 dict defct_GlyphDirProcs beginGlyphDirectory+0 <001C60D8A8C9B5EE310300EE23D0BA079325E1D5F86AF2FE7A7EE2F631B34F7BA2033FD0FF> |54 <001C60D8A8C9B67CE7CEBDA222EFB0DFA9BC6A81E7FF41CD45B99D5B3D277D73E183047DA7A5297F310C1273BA2B6B13A3198EEA38F82CF31E051BE22094793E13456C43FD2CBD6301D0E98132278506FD7B0E038D8314141C8C45190E7E58B529818C8E73EE8CC3A2DB03F2CCD56C6444F04A579E6B1B63E0F7BDFDCC07003271DD4969618B176679CC202F4431347CE73B86CD209D4716E0A368EDFF06D47B3FB15E111BA8DAD1DE4016B37EE2313EF7C665502B1EF1AB506BFBF0051567AF8854581D81D3ADC6826B7E709274D536B34BD2936B8AC3948D120CB89CD7C49895B15E1FAF73AFC7549015C676224C74F99411264008272BC1283C450EC55A7A081F9F4B8F7E7EC2724A8E44ED29005A24714878DB9E4203618408B1F9596C18CA> |20 <001C60D8A8C9B751D50784E8C881F42830C5322EB9AE3F6BE4498EFB91B7A9CB941012253218D424CD84C8F507B96D9C0A2EACEA972C4DFA9B66924807275919807385801783C63C5D45F574C86602C16CFA0FA7FC8A49D61AB1F80B13A06593FD9260CBA0253560BF9F32593AB0AD6BEF61FBD6D6D5FAA9C211F2075E44A7293F9F4188A3> |3 <001C60D8A8C9B86C358F> |41 <001C60D8A8C9B6520192FF36FAC6138CD977255E489152B46BB731D865EF09BC6787D3FF5CA5C8522AFD03CC17FE6AEE933403B28AE1704445F89329846C4B1D9A2A5ABCBD6BAD8F1F6D73D3185619622E77AC922996B70030B6F5925A74FB6938850951E4CF6D260FD8B2246C6ABAC1E14463BAED446DA89B8598FDC4413A6A9FF890EF3F71F233E36B4BBAFC5C20F67D8C03449AF55040E22B97EA79B9F0EACD05B2A44748A3779F40485E2E73BE32077AD153AB57FB3B9F1876C5E996CCC2D7B3097D9FAC57EE8CC51EFF6DF7B95A0DACA203FE607F5E9066078AC6> |76 <001C60D8A8C9B80898F37D8E1494302AE288D821EB30394AB5CC36A0D2280718DC23B87E82324F763DFF1DF747A8637EA63169B602D849DC4B0C4AC47817D535E4F6BE12D4A416988B0FE0630DC675B3F65CEB55D687B4882CF4D38461B61350F1F9FE7BAF269D64A32F8EFD3A1C04DA3B8FE45652AD0D770E992BA9EE7FC3B9B450907D4B9E8E3B511126FF9E7707885DB57CDBA03CA36A91D1E95796A66A542BBF747B72839571CC3D0642F04840C6E5DA0DD0> |74 <001C60D8A8C9B7FA1378C662276530DD40D02DDF7F0D64E1EEB677798AC9CB37F6133C6FC26C038F4A0BC8529573E048B34B95917B02BD3EDAF642A71484AFB85B03F6101ADEC32BC5161DE11943D0862CFFFE202A32A6E66CC4151DFA1B36A5C8AB727E190D8F52D4B4F0CD8FED402C024A4AEEDAB66823DF351DFBF817CF41946B6D25D0DF5DF1B2219FED69B9EC08947EA240A7ABE480B2C9B04B6BB61BD751661A81355D4038FDFC9A99FD71D6AE57AA5B53ED759C341884C779257F81E3FB2E01AEF47F71C82AF4B6ADB844040235C9DB75F8334A6BA56B230F15736621D40FCAC672E1BDC12407006840ACA05F45EDC0FFAA29AB977A4CEB3AEC4642D86A196878DAAD110F767BE0634544C9C74FA8EA7D9FA7AEA92614364209878E43E5B8E4ED39525319D36276523509F8B564B863BDF4CFBB56395AFDD6049A0F98434CF7176B493C4851E8D603AE07BA864710267E5BED2B324180B0D26468FC133D25EEB368ACA119539C2191FBE346403A116B3282A8441FF0F4C3842BADAC53C31C53A87CE7EB17C3E68CC8546DE265D5E8CEC5C7CDEFAE480C564F961646D0EF3464825EC275678937FF22A53055A49B2B955D0957F70A9F552CCE> |17 <001C60D8A8C9B82281D0D6CB56D22C93600445EDD803AB16B0CB755D817EC878DDBAC3038AAAAB7823E49A32156D1EB48CC8F275B93D4B45458237F6FA9D2E7D765676DA34CDCFB9> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /LDAAAA+Georgia-Bold-Identity-H /Identity-H 0 [/LDAAAA+Georgia-Bold] ct_ComposeFont pop end end
%ADOEndSubsetFont
/UUMMKB+Georgia-Bold /LDAAAA+Georgia-Bold-Identity-H findfont ct_VMDictPutUUMMKB+Georgia-Bold [9.963 0 0 -9.963 0 0 ]msf74.212 670.254 mo(\0006\000\024\000\003\000\)\000L\000J\000\021\000\003)[6.46601 4.88192 4.08015 6.68523 3.52694 5.74861 3.2679 0 ]xsh%ADOBeginSubsetFont: AIAAAA+SFRM1000 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /AIAAAA+SFRM1000 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 37 /percent putdup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 49 /one putdup 53 /five putdup 57 /nine putdup 58 /colon putdup 65 /A putdup 66 /B putdup 67 /C putdup 69 /E putdup 70 /F putdup 71 /G putdup 72 /H putdup 77 /M putdup 78 /N putdup 83 /S putdup 91 /bracketleft putdup 93 /bracketright putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 106 /j putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 120 /x putdup 121 /y putdup 170 /quotedblleft putdup 186 /quotedblright putdef/FontBBox {-189 -321 1456 937} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 1 431 449 667 668 681 707] def/OtherBlues [-193 -193] def/BlueScale 0.03963 def/StdHW [100] def/StdVW [50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings47 dict dup begin/percent <1C60D8A8C9B08A940B8629E094A9AD5DC4D61502672634F88E3FC7D99C2A63DD82095B5E882991FBEE22BBC029214F07DC813AE0C93CDEAB504C71AF61030A2A75761FB7D15F7F2F14702766BAA52647BA35A01A9793A4D6588A1FB4F31702F3169A72C52B7F77646701D76ACC798E1C1FB97CF84F44EAB1524272F7DEF1B38823F416FDFA6D83259063C4B2F9108E00E1BB407D72846321CC48BF11EC00E2D7FA78D4B7C97829E80DDAD7BFF637827592ACBB09F0EF6ADC7BF7A5BBF4C6F4EACB9C870E755EBE040EBF29C468D1A203D937A3A85A2E6DFBE3B76151A53D773FAB4702AC7635B0790BCF970C772C1BF071D9779D09DBAA3B68FD30648A37B6886BB8AA729931573254ACC45DEA53ADD536B4B1D02B5328FBECDE46A8525B01A4049054FA07D93B208207BE1A40FF79A1393697A2CF3A60A80BEB25F47391D787C6664E7B14B5F8661DD1489CC5C1CB97777205E5CB1B79D474895323E461DCFBC8C9467C4C2EDB07EBA330DF59A56EE2FC86726388DDE5DDD6BA1078225F47B155E1E1DB806FD92C50CF65198BCBDC85119CF8D02E50118AEF077EC49DF573999767190B24B68CF16DF1EAFD4F7816CCB57B28F61C095467736ED6855213263EAB04D2> |-/parenleft <1C60D8A8C9B08A958B17598B0C7B24FC452583A3E73272C9922F9470264283F7201CB3B4B4FAB50D67A9B475AB49AE070D75A14C83EBC7EDC335FDE76933E64D635D02659C09BD0A1392FBE88C3A52DCC065369A33EF61079059718E71C064A2D6D967D4C450114C648F2954CE8069C4FBE3EE717D40D1FD7865C40878B7E284F106AD613ED07936F7005163B4701EAE4EAF> |-/parenright <1C60D8A8C9B08A958B17598B0C7B26624FCA03B7553641D21584A8DAA6D267F67A2FDB2C676B88347A12DF0DED04F6532E5F21FC2881738576206685500496F36D0F3AAE8AE9322DD29C8FAFE8595A12EDE46799955529D968CC18E837DEB9E6B07B08F38AE0DF05B589BB32B1631125BF1E681D54087903CD59F201> |-/period <1C60D8A8C9B08A9570784B5B784044E80CF03BF5E449D0E8F6F331E41C53669F266C233D499787F16B40F84A9AC6D22BCB8ADD28B96CBF35BDE83C70F7016FE287D00A32E82011> |-/one <1C60D8A8C9B08A95DFC04977F2AB27EEA2B72AC09F667DC564D9A6D6042DBF6F6BA861A45A7BBA360051BF5DA140B45C84EAD9738C3E391EB737984FF53B010EEB7C28FB1C467C92E0F718EC12629F8F886E2E19924388878F3C05D7B06DF3E6> |-/five <1C60D8A8C9B08A95DFC04977F2AB167C767F7CBFD30D8C15DD32EC403E48D2254029732CDF3774A630C16A322FD9F021797F31DE38091AF8A54049B6D529E81A85A4C8B87020F0A37F457FD1E1B1BEBE806C06684A08115F77EAAF9F653EA52FBFA404B85C2EFF867FF96248675C1F673954D36F96B6606483725D3203B68C1A47F7008A95064E73D064937482D70EDFA183F61B5981D04468E1FB4FB4C5BB9F588EFA07ED665FDBB879E1C49464B3D8C05C71C374FBA6415B04D030C2968AAC2167EEE3032EED7E32B451A08AF857110BCA3AD8DB2D29266ACE22CF5AFB124B94B8E04C1F2F0889B41B5E721E1586AA7A335F759C1F03B962B1AFB1FC662910DD6E3AB2828CDC> |-/nine <1C60D8A8C9B08A95DFC04977F2AB53C101C528D4DF58183252D0DB8D5A28589B77DFB8FA8EFCA3EC2C6C42A7A0AE61BDCBE61EF3FC70B5446E57C6892724E3CB53F8633605AEF76EFC1ED545F98DB05C06CE30289D8EF2F5231D69DEC5CB9320C85684AC70BE12231BCD636505EA72CDFBA11F7486C3FE77605CAA554034CD4B5937FF5E35F9910530B0E52F0624CAC5A936ECD9D5C9465CA5028E0BC861BFEDA5B6DCEF7FEFA27F622EA3D6A161F25141D3A4E23A80E77A55D6D845132A7A> |-/colon <1C60D8A8C9B08A9570784B5B784049E5D18DF0A13282A6B9C03AA3C918D49F508D2AA813A6137F9F758EF0829F673DA2C1798D4652DEB87E7BC54263EDB204E0E65369A17B1DB97F390E11556A1872D65A71E677628AEB2067E09480C957A05FCAD487B8DEC6FF38EE1BF98588F5C9C54F2B439F03> |-/A <1C60D8A8C9B08A946A7460FD0601795D434C7C0ED8CA10A265B05808F418047DB19AD589BBB295FC5E776DCD89AE8FD99C2E1FA795DE0F68CEC712AA4C770C8490872DF8DB191D038EFD3514776BB75FD1C4C46FA113F3A40E97A8BCB1E4DF61E3FDCE1E0B2FA3214D162B39F16CC1421BA34CEE36BDD57101937D721FCEF2883F780B824555326008A2650B89F1BA5B562C973863091BC7EE01D1EF308E94B84C364651CF77C6ADE4C9F15A3C6E21E24B50DB06FF619AD6674C02BB0AF33D5C83> |-/B <1C60D8A8C9B08A945A0BD1E368803CF56330F762B4C07A5061E4C015361154B91DECF9664AF7DA3D23BF775DD1EE57A609C5C9CDE9EA7B9BBF6C894A972CBB8585477219BE9D1DD2F42B451D0C9A246438CC1F89A7015D5612E5A6C173211B94EA91964885551CA23C45FCA14C078C4F3B2EDCC7C8571FC10702EDC6ECB1DD1CA4EB96EF8556D470F6691814FEC2A09AE58D0674842E9A13488AC99C95867E0D97E44D3951AB5954A813C0E33A1BA8E9EA735C32B4A1EB3C9F186DC53B11F0D5CEBDCDC90E1FDA523C9A1DE0EABC9F138F99879E76B7C4501F916BB43CCF5D2F5C0F94A07AF8E6E9B0C1BAE1D093ACC908F6830110E7C513573221A33F9F2542E9FFF081F3740EC5B827E893EF780CCF1636745526329C8EB8> |-/C <1C60D8A8C9B08A9454D954F49F1C2A2752A0DD6F678687A4787AECF730A51323381FF30077A55829DD32865658524A30BF02F4C2588731D576A7715E09524E9B4BC4FD6E93F6BA7EC6BC5EC53FA60746A689AA224BCC7E211D6C87A4278913735414A988303AF32D8E8CCE38631A8EA46533172A0EB4C210632ADA6C8C1C37C2993ED86A2FDEBCE10BBEBDEE14B30916481084C0F860905F34F0F4EAE45F28C8A7F46CE4F3> |-/E <1C60D8A8C9B08A94479EBECA3F0F8FDC139516CFE911FFBEAF048F98D84E3A48C620C9995ACD0A2B2F366FB705712ADA9F9C66DF92FB8052AD2F64422C33275429FB0DF2B629E3B8E93E1206F22656BEE6380E5205E7F151FCF4C1EA1B2A0190C6B78AEFAFE0941B6C21F8F1447B005E12C773E83245B91E7F789B49DFC066F82A7202562A4D3611198AFDC15913892A3E372A633B63715DC17B00CE716A02173EC55D5ECA06C097D5C7B370965A55E5DDEBEA> |-/F <1C60D8A8C9B08A95E2019DB407676E33A8F0B7423B1EC865E8739CD8490752DD3B2D096E49C663F1DBAEB2E3519AAAFF525C57A3B3F0E4791FF0440FE7ADD2644C1128953B6EAEEDD149306F6961ED1D152AA97679835CA53028A691851640AC0C2C15ED0C0595536EC3767FCFB8F7BB2BF73C0DA7EBC65368F627EA9869C64FE207C9F241160864D9EFAF126441D85E2823CC0AEBD23F7A9549DC8E18C80619E2EBF6A7> |-/G <1C60D8A8C9B08A947C60A5C5BD54B040ADAE2FA33F5FF8CB77D116CA625336205FF0E10F8DF72FA952973F6A25FEC216E08CEA164BAAF4E1277ED3A6A67FF0B22A46A4F976C7740E33DBC15A73CF83504D89E0758E723CA424F9B0EA7942FE940EABA9E6BB4D5BF3971033E08D2B81A6188428E6281EE75E847D886E53E95317D3697BB967A9A2D21E741F7BBEE3ED7C47FDC4A4D43BF51DE4F3C1DB3DCD6787506C9B048EFF3BC5BC664200B3D5338BFF8466AA6A41E0DE4F9FEC10B2BB2EA84F072C5E97BEE1F3B28ECC8292> |-/H <1C60D8A8C9B08A946A7460FD0601795E11F32B1B0B517CDE6E86A4C10F003B90116B801BEDA753A877E0B4F74A8199A67A1838F12AD2110DBD21381D0CADE9A7BDFBFEA83546C4C91155DF66F52B49C48727451EA1E3F4FA34D07C7992DD419BEB661C9BAECCB7B8E5EDFBBC3CC9DDC2440B2B2A57D4E3B8C4AEF36BD08E860779EE737D6CF7AEAA2F9DBDA3CD9390B4EA004657C94CDF249FAF2D664700B892409BC422> |-/M <1C60D8A8C9B08A942B391358458C6929D907B809CCB8F0636752C1A7AD987C8A3CC5EBE93E280207F64C1676D2921AA2CE53E133F62D41D2F8C283695BB44B2B1361DDFF637E55C5C10F0B2656A9FE756A6954EF5AFAB772E37FD990064BB5A3C186E449E537DE214AB4AC0AB5C6220745C0C6D153FF83460D043413EB30162846C813982ABEC367BD2BF84943DE626B91CCD0D71DC0064B31E8E3696B8AADF8F03D456CCB007E9769FA3CEEC625527784126DC4590F471415E3B6543F72FB5642DB4C0CFDF3E4E7A88FEFC7BAEE6B> |-/N <1C60D8A8C9B08A946A7460FD0601795D4342D7559CB59C68DD946FE87D3F874E34F010E0076B897B85E2CEF4CF5241903AA56A28B104AA1C09D5C2C403AB637994E83053B8BB35ADEEBB7410AF2A62BD8678E17E8F50CC2227B72B22EBC09EBAD1C20A396AD2E9632D0F778E7E80278D5E339F8F16D968664ACDDA3B0916926FB310993485FFFFED969C71D3B1CE> |-/S <1C60D8A8C9B08A95C448752158572CF627FC9341406A8C9C0D26D68284186E0B220D103771B22ACDA61E2A3CF09E065208C23616F46D052CE52AA61C69B2B4C9C4363CA412E422531EE83B675CF4262963C59937FD36B0997684B1A7D757DBD1CA7AAEF5AE229BB8F9156A679C66435F07756E44063883774CD26C409D182A750ED0C7EDA47C1B6358ADC9F33CE285925B7957073CF0C8B9DC1281063F30A162778007541D829EFFE7E58D4EA021732DA8117FE1E53AFCED02C0BF9CC316E283A27DC396A6FAE9982117D78CC307F11BA3> |-/bracketleft <1C60D8A8C9B08A9570784B5B78404AF833D65B98861DBB5531F9932932B68D556F8A27F297EA2B35FBEDADA7BC448100> |-/bracketright <1C60D8A8C9B08A9570784B5B78404AF833D65B98861DBDF63A402EC3B57FD11AD6B67DBA70653FA669D62A90DB7C0CE9> |-/a <1C60D8A8C9B08A95DFC04977F2AB53FCD61C7808BAAF393A2827D3CE9C65041AECB95E925A40E6ED84C6E455F29ED10FE2CC5D7C08946725880625BFC20C4C85650290F036615B1E8651E84BE20C2C66C49807342FC64A858A7D7492A3A60E8B06FA323EB360CBC4F0F3BF27BA692CAAFDFA6FADD9CE8B5222A084E2FB71EB2361629C813762539B361D63372B687D0D7D4DB8242EEBC344A241971A3D9CAD91D4AA86F0091B6DA58E744718EF7BE14180EC8D569C710F7F3099B290B6A0D78A6E33281C91B1098ACB886107D8> |-/b <1C60D8A8C9B08A95C44875215857DBD88235EDA26687E738E5D6BAC76C37E176E5286163E9C2A8FD9FBD2D92CA35F7BFD7DA78065EB78139C9B372CD9AA1D5E58D8C5975DC0C9128531435772A5E81EAC490917367CF89EF8F2053B8036640818FF82A595F7206951CC7DC798C1074A4429A48020C60B5989B4F89B18644DF98811D6EB2736871E0BA8C2B9C25061A90FB7440CD0D9C82983516CB3EB6> |-/c <1C60D8A8C9B08A95B1FDF87653AF72ED5391009DB6A0CA3EDCBA238E42E0E1342BEE067A6F0CADB69E5418C5CBD64948992504BC290190B6BBFBEA48F2C4871F33A4C31417A43E2D2150EE871F7A4AA9DFB27A2059FFB06466A8BB7AA44A566F47C2429642DF6C0D39F2202C140EFF79069DA9CEB5D48B7D3C46CC341B63DB3315DBF48D88D71CA8BC1367381D4260D5CD8EF3FFAFE795A4365C35> |-/d <1C60D8A8C9B08A95C44875215857DBD88235EDA26687E738E58EBA556DDC444863002DC5F7A0F44AC2519CF1901AC73A2F9413EEFD9FC62FAD7C82E0B472044D0DC442FC9A33C2C0E086849C3FF670FCE27F6E60CBF3B40104AE4F081988126CC7286EF113AA5F6C90F45E58720C78A2691D1682255FB0F94E6C3254CD6F14042037BE02CE1197A3BB08D31A2550E9E072CD9928617EB5A5D9FA9F68E76356D8839DFB> |-/e <1C60D8A8C9B08A95B1FDF87653AF0495549DAFE999E7E31C191957DB5D916EA45E9F685DC4782C6E28FCCFE7F5A662573B3C297D78B07F5E1B1ADF48FE899C4EDD6B6666DD9146373950F11450028FAAC0B7E0AF347AD632D935620F695253BEF74DCE22EF4F00D44083940B055402B1CF0D9310236E96AF45426FA72BF87E46214AA6667FF01DE332FE> |-/f <1C60D8A8C9B08A956BAEC440F1266F51BC2C9EFD1F27804E17607CE3BFF5FC20B9B59C57733F4DABBD5B9E8CAB91168E34BA92AE095D2A1D94A3C0E8F6D51F1A46B2F9498886ACB4C975C8813749A318E10904A2DCF5BCF350DE86FB593B7083B9FEF5BBEBEC502EDF7A66F0AE67825744A0B80716AE8FF35D1D1DB8B919B1DC> |-/g <1C60D8A8C9B08A95DFC04977F2AB0C41D91CA912DDE3BD33C6A87447AD7CFF6BC7CDF5DFCC009635B1A70AB9117AAFE71FB893DD2CF41AB2869979E19C565BBC3CE84ADEE2CEEB972B1F65AC039E5908FB5BE0DA5D560310E1A4C1502FC56C48BDB41E9A073D4AD5662A668AED6BFC37117F97BBA85DE0095478F91061ADE169E402CD633CF677D246805FFD403718E6CD609B65BA4FBEADFE250A89CD34716F7DE21DCF9FFD6827626F953465F8663E63E6DFC0D616F278F1D9CA1E58CA4D0C90BAEEFF77869419182B433733B020D0A869AF8C15E43225A41D693C41E73BB7161AF08D2C60E0A1699C54A3910A7ED59C5BED4788A6970B42F216866352DA503A23A0DE90295890EE26B963E72BF281B2A436A46A049E5829719FE2E741C20D823711A7EF6E914A810821E59542D5BDB4D0104A90D20E320CD744233B272862D95576550323E0B4A09E9E5E70590EB11BFE51D62B1BFE0335858BA76D8E17C65AE68D8A588013D979A08539C88D7043F1E7772C1199FB76F53EC77B2B3D2B> |-/h <1C60D8A8C9B08A95C44875215857D6DBEBE07F4F6CE0F117FBA80716E4F7C744E40E9707B79C961253D0A2E9DC29436AF32F9E03FF14D94E5902016D8869706A036717E387ABA87F894E3248FE5786DAD11D76BE26E49BABF33DFA0F3F7D66183144CC2ED6F0FAC66C6E2370D9FF807E69EE44A9BEA564AD82209C11B0FE756304215299CEB8FECC150FA6321F28B4B0> |-/i <1C60D8A8C9B08A9570784B5B784046389956E13AE66B4D158B888A3A5E6EA034AC9B30388B4BC497B1AFAF23376CDFC5DB520C254F6F29A609B6751BE2BF52151153EBED3AFC37776EF13B103E18868EC5D6A6CA53A33DED042639D380391D4916F61F0C364BEA64D5CD168829232886405218AB1B021F2DCCBF39CA2B95604624D31A85B07B87F0296B> |-/j <1C60D8A8C9B08A956BAEC440F12614B97826A5CF873549351C06A8BDC109D0F17BFCCBE121DE2943C134F41B3E349C8B4F5088F79E7FFBC5F29E3255CA2843C38F39F5ABBC9AB174FAA0EAF6E4AC66A1971E6A71AFD33F889861E16E5456A296FF028FFB98CA8CE3431F3A96FF328AC228CA0B8991747381638E9C3C185B27921FA8CF94FEB6A386DCD9196F2B6CDB5D5AF861CF1D879A8F767A465C366442FEE497A8EE54AB92B4C250> |-/k <1C60D8A8C9B08A95D21503C301897EE981F1E40CBBA33F2285EBC5BE6A4C2EE2C758261F48D5A78E64F70C476B610DD8D1E486FC2D4A7E3E2FF748ECEA567882B1EB73942EFE93EECC5C1606CF2950B8DC57600DDB4B7BB3048E1D447AB92C0E8C466D38B1385AABC2E205A2EEAC3AAF9003E5E30E9D505A6EEE643904C4ED92B63C9328FCD855C0B48A7DB54EC33E79C607CA229B62AD7222F25A48C461E3EBB1384E854177EC639CD0B23588969F52BBC839D3F039CEE2CE9270D73B77A8E3> |-/l <1C60D8A8C9B08A9570784B5B78403D50427C9A0E1AA047319736079F0E175947AB1C14899F9DEDB15ED0B18B49475484481A0760EFE97F4057A0217DF7F0E8A0C58F744CBB014AB684C6> |-/m <1C60D8A8C9B08A940B8629E094A9A34FD825C38ECFD42683F995C2E585FD61508238206ECC357FE9D2D0C69E178A2A2C82714A00B38D66DE4593E704C705629470CB79354240F41B45F14DD33C62B65312361F75A05BDE0BD140E72EA87EA357E01CFB738F4A84F7557DAC2F815FBE63A49527A211F9CF74156C3947C54F0BDC687BCC3D428101A2FED30F3A709D89C3EC7B42830BDC1D4AD4427AC4DB0FAC75012BBBB782A6A37CEE09912FCD078A755EFC26E0D3C6E1783DF0B62DABE614D6D44D4A1A6BD3E39EDB8461DDB1287541B010BA962D6CF35AF62688D8FBA120D4FC8F798DF6> |-/n <1C60D8A8C9B08A95C44875215857AD63A72A3F61781DE2E8C499D0B4C3D6708A989DA56F11107514C97A110C852C5574FF5478EE4CF1979B2433CF4C1D8985B457E1F242D85540AAFC18C2E69A08A634D16F975C072A1E35F02C92D4BC60FCDE67F8A311B6EFF8F15D2FCDAFAD5C404B662DF08F38CEE709842D202C58643B836BAAEAB6B81970D64D51A82BC0EC26A582DEAF78EC521B403AB595F31B2C3BD8D17CCEEC3231> |-/o <1C60D8A8C9B08A95DFC04977F2AB539640A254B5BCBBAC675706870AE0801E2AC2D3DAE06FDF2A2CE185AE754A0F0E9124A7396579A0D2E03AB488646805E1A8B2026869188E212EA845D57059F3B4B0B181584338B988228580AD4583E7C4C024FE9335D5B4024278F3BC24455EDC46DB5E1AB9DB4E6A69013CA7204E567878CE31300402064A72BB7B0FBC842D3E8A5DE63EC167B02B0AD7AE9266FB7B00DB76AE28E89926749786A8CC6911D4E79E4C4900> |-/p <1C60D8A8C9B08A95C44875215857A1E1637A9FDD055F6AE52DCBEF520E2EBF5C7A873780BAB850A2D9B15A3E5EAF4C8F3D0027F4C312C45FD517DFCF4FF4554B1468B30D308E9949A4413C8FB6F193AB89A8E79B575CC4C314CCA7531D75725760DE975751B31FD0CC8E287F516A0F3EA126119FF19F374AB80367C6D4F38BE7FBF5944DA09A6D6D98403F5846AFBBD025F48B66815C422692C10F96CC174B92E288> |-/r <1C60D8A8C9B08A9584D66FC332618E83F4D35F9C7A6DCC38B8C00F314DC9C2E2C831747607FC4E2ACF14AF466CCF1C2BE2A0054B46F5291555FBD7B7574BD1A5C67AC40648A89469D992E60355D94038BC52C782289E973C6114063CAED2C09E179578542BC9BA47E243C17CAA8673BDB7355C2991BF2F93> |-/s <1C60D8A8C9B08A9586CB3841AD4CC14838622197350DD81259EA46DB535E0C767284DE0FCB6FA5E3B04358BEF149AEF6B53CA459469B7A88CFD3D928A1E8836AD5EBD9DD0E9FDE353C288F800640CC5D8E45986952B2EF1517E4AE198D2C9746C4FCFC26C90C3B2AB5C1E60B476B85184D1297CE75F53F9BF703CD4E71C7F6008A504F91298FED01889A22A213247569488031D65CB87B0A8A4FA19704E6C180BD11415E93FA6D9402D396706A2B38939C0B9245FA691C33DF02D1A64C3D558E13433CFA205A1EBD09192F66C60755A03AB2248825EE75EB3EC8899A2321033C38B0D3E7259E3E753D8376657167F337706E383DE8F2A00BDC471BCC12B9034660594BD1B721A0AB6B> |-/t <1C60D8A8C9B08A958B17598B0C7B25B0F3D90A91F3133BB5877C46D6FC4BAE86B21A1BEA5F938BB08AAF3A0E89946CA4FBE265546DCE6750BC876D32F5C8ED2449A73FA71747AC632ED5DB247C2F0CF33BD505CBA6CF229CE75A39F9DA2D48BA45D8C025D5710FD8AC76561DF3036F00CE1EBC71EBC7E2731C769565B0431718C5208982A0966E4ABB807693C3DE8056BEFB13> |-/u <1C60D8A8C9B08A95C44875215857A2A7309DA5575D966ADAA327F2F151DB0869E716969751944B5F59AEDBDB57A73A5AA00D43C608E10A9AB3196AF92F2569D09C817C54DC6FE07548DEAA4A2140011D891D68D4D613814837E136D34B26650E2AEBE3B682A84BB6B5659E1B0EAD163B929CE5FCA60B3581235021D43A33B81B4E78737C58EA656115542CAF839845FCC4F59D31C11487A9314780D6CAA7D0E424D667276A8B3A489DECBFDDCF6D3A8D540519BFA24EE1> |-/v <1C60D8A8C9B08A95D21503C301890A9EA553246D03D345E6907F26D17757F83805C2F8A9EEE40F8384CA2E43BACCBF98AABDD4CBCA2FA24F262552E221E0BA7CC2642418123FE3D62632E2B5B3F0F29A150723BC9CC1C23021DC2AD59A19C3A6397AF8F6968CE26217E193B8D1DE07D1357F708C466C82BD853F28DE0E74B94AC17D2F> |-/w <1C60D8A8C9B08A9454D954F49F1CA4C920ACFEEE616DB889E43DF7B14BC9529E938B3BFA3544415D8FD498CF258EEF9479F1517331689D8162A7B1EC24DB54D916D6E3ECF7A2DE011205F92CAFBAC0320D10B456F43B57B2B9CEEA679F29C9266574D8DADB8B0DBD56F766840C41741CD8984D41B7381FC13B72347D05F69B12F5652F6CC8AA1C41C49AC58ADB8C122CA7349B339840FCD2C236AB6A31C4D9E855ADA85AD22FFA0115746B63CCEB3D45F8A46088C79309F584F4CE67443ABCFCDF689726E6F61302BC2F748760EAA57AC9155D171C8792806EF6A07833E545C6A7957C0901251BED6177BC5CAD118778FFBCE142DD39669D1454BA08BDD607EB77435F6DBD> |-/x <1C60D8A8C9B08A95D21503C301897EE981F1E40CBBADD71960DD0E2945B4A7D91DE757DC0F3BFC54822331C09AA28F342C95FFDCB0B2054DA55471A10811832616EACBB84BBE526BC043BEF14B14667078AAC7CF58AB6AB62CD4BFE6BFA6BBDE56DE07C96A40B8A4835DDDD53A4618822A3CEE4EECB48DD81F75A3A0AB63C7F3556FC4EA1068232E7CDF87E8E6912CAA2BF901080E5DE523400C5568FC5593AD7B21856B4C18EA32645E5F33B3BD42BB65476CCE8BD9D28AAE6D40A1EEB8022E73534A91082B5BA644B39489E600FCF57FCB1CE1CCB80A1B309393AEB0C1BF1BC1725FF2501890B3CF4F317E5487> |-/y <1C60D8A8C9B08A95D21503C30189098C50AEF32D902916385FA5464BB2F2E726E06660AB7B5C501393E72E1D2CE7E9D6DD0B7621BA4F7B08C7608977BACEC154EEF903A18AD5761C1A7A5414A9C2C9B12B8FA8A95E7DF1DDD440E10869E16A9A0E946E79D8F6D354F64F14884711999D63D5EDDD924F2BCECC7CE94596E7AF4CB35B9B948F3E434439324B6BA193F28621CF88C0CA67BF3F69A001D94D7C7AC4EC5ED562AC462F0D4C846336DAC9E15C07277682C4858C43FABAF838C11CBC8D72DD5D2E95889FB59DA3079D> |-/quotedblleft <1C60D8A8C9B08A959E3716438136831DFF0ACAA5F7D89CBA555473D86BD1C7CE981EB322A5287157D00B5343F7D33E76FE93049BB854A80CAF711D06DA92177CC305BEE23F3E11C66679DEC1C1688DEA5BB37D3F7B61FB3B51A1166B4F8C21DEDCCEEAFDE0AA984AEC188980E67A4706CFEAEE25D53B7200DCCFB0A29A78AA39328952FF6497BB95274959446225DF491BE6E301994BFC4DB243912271CAF5898059433CF5A57ED416C345AB3AF4229FA8B87F59CB0E66B89A2FAE3A8171C74700F5F7710748B0AA25DB36694A6C26> |-/quotedblright <1C60D8A8C9B08A959E3716438136F3ADAB5A205117AEA5390685090835CEEF244AF6D370C74F8645F8FE6C09956AFEFACF8CAE1ABFF5749752F26E176253B5F7F0E20C9AD9C9ED43ECA9E1982C70B0F3A00AB234294C647BA94300E13423227D1D3304F36DAF83418F43384D309516F29E67E3AF33D2AFC6266A755BFA62E89A8B1573AD8607B38D3C0E480F7EAC05086C3498D1DDB2AAD02183229E984158C303C1500C938AE0207FA124DBF75861E8D4D559B8F8837800C265214B431DF144650CB2B42A757BBA5503D3CF327696557E> |-/.notdef <1C60D8A8C9B08A959E371643813608> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMKC+SFRM1000 /AIAAAA+SFRM1000 findfont ct_VMDictPut/UUMMKC+SFRM1000*1 [37{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 2{/.notdef}rp /one 3{/.notdef}rp /five 3{/.notdef}rp /nine /colon 6{/.notdef}rp /A /B /C /.notdef /E /F /G /H 4{/.notdef}rp /M /N 4{/.notdef}rp /S 7{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 48{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]UUMMKC+SFRM1000 nfUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf114.226 670.254 mo(A:)[7.36563 0 ]xsh%ADOBeginSubsetFont: THAAAA+MinionPro-Regular-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (THAAAA+MinionPro-Regular)%%Title: (THAAAA+MinionPro-Regular Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /THAAAA+MinionPro-Regular def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-290 -360 1684 989} def/FontInfo 5 dict dup begin/Notice (Copyright 1990, 1991, 1992, 1994, 1997, 1998, 2000, 2002, 2004 Adobe Systems Incorporated. All rights reserved. Minion is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 75 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 12 dict dup begin/BlueValues [-15 -0 437 453 464 478 623 636 650 665 701 712] def/OtherBlues [-257 -240] def/BlueScale 0.046875 def/BlueFuzz 0 def/StdHW [32] def/StdVW [79] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+1 <001C60D8A8C9B889970A> |0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4A980A717C675DD749FCAD021C86E4A82A71450A60069401092D2766EC2A38FB4B27A723A2EF044B6549AE7BD225531C9BFBD9FDEC4C158C539EAA9E47425F43D2DE9C2FA717B7B8B00C9770334A66> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /THAAAA+MinionPro-Regular-Identity-H /Identity-H 0 [/THAAAA+MinionPro-Regular] ct_ComposeFont pop end end
%ADOEndSubsetFont
/UUMMKD+MinionPro-Regular /THAAAA+MinionPro-Regular-Identity-H findfont ct_VMDictPutUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf124.324 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf127.64 670.254 mo(Number)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf162.316 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf165.632 670.254 mo(of)[4.91068 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf173.54 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf176.864 670.254 mo(primary)[5.45598 3.84688 2.72792 8.1839 4.91066 3.84688 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf211.021 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf214.34 670.254 mo(publications)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf266.227 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf269.547 670.254 mo(per)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf283.211 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf286.535 670.254 mo(year)[5.18378 4.36459 4.91068 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf304.84 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf308.16 670.254 mo(index)sh331.348 670.254 mo(ed)[4.36459 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf341.166 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf344.488 670.254 mo(under)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf369.067 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf372.388 670.254 mo(the)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf386.028 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf389.348 670.254 mo(\252Biology\272)[3.27414 6.957 2.72794 4.91064 2.72794 4.91068 4.91064 5.18378 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf428.223 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf432.369 670.254 mo(MeSH)[9.00217 4.36462 5.45596 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf458.557 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf461.878 670.254 mo(ter)sh473.909 670.254 mo(m.)[8.1839 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf484.821 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf489.242 670.254 mo(B:)[6.95703 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf498.927 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf502.246 670.254 mo(Number)shUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf536.922 670.254 mo(\000\001)shUUMMKC+SFRM1000*1 [9.82344 0 0 -9.963 0 0 ]msf74.2113 681.827 mo(of)[4.91067 0 ]xshUUMMKD+MinionPro-Regular [9.82344 0 0 -9.963 0 0 ]msf82.1194 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf84.3493 681.827 mo(primary)[5.42281 3.82348 2.71133 8.13413 4.88081 3.82348 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf118.298 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf121.571 681.827 mo(publications)shUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf173.142 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf176.412 681.827 mo(per)shUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf189.997 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf193.267 681.827 mo(year)[5.15225 4.33807 4.8808 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf211.461 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf214.731 681.827 mo(index)sh237.779 681.827 mo(ed)[4.33806 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf247.54 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf250.81 681.827 mo(with)[7.04941 2.7113 3.79608 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf269.79 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf273.061 681.827 mo(\252Computational)[3.25421 7.04941 4.8808 8.13412 5.42282 5.42279 3.79608 4.8808 3.79608 2.7113 4.88083 5.42279 4.8808 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf340.306 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf343.575 681.827 mo(Biology\272)[6.9147 2.71133 4.8808 2.71133 4.8808 4.88083 5.15225 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf378.959 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf383.06 681.827 mo(as)[4.8808 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf391.789 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf395.061 681.827 mo(a)shUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf399.943 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf403.222 681.827 mo(major)shUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf427.924 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf431.194 681.827 mo(MeSH)[8.94742 4.33807 5.42279 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf457.224 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf460.504 681.827 mo(ter)sh472.462 681.827 mo(m.)[8.13412 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf483.308 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf487.711 681.827 mo(C:)[7.04941 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf497.472 681.827 mo(\000\001)shUUMMKC+SFRM1000*1 [9.7637 0 0 -9.963 0 0 ]msf74.2114 693.782 mo(Comparison)[7.04939 4.88081 8.13413 5.42281 4.88081 3.82348 2.71133 3.84985 4.8808 0 ]xshUUMMKD+MinionPro-Regular [9.7637 0 0 -9.963 0 0 ]msf125.268 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf127.482 693.782 mo(of)[4.98044 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf135.506 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf138.825 693.782 mo(computational)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf201.353 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf204.683 693.782 mo(gender)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf233.487 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf236.804 693.782 mo(infer)sh256.476 693.782 mo(ence)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf275.291 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf278.607 693.782 mo(\(black)sh305.445 693.782 mo(\))shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf309.318 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf312.646 693.782 mo(with)[7.1933 2.76666 3.87357 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf332.013 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf335.332 693.782 mo(known)[5.25742 5.53351 4.98044 7.19327 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf363.826 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf367.158 693.782 mo(gender)sh395.96 693.782 mo(s)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf399.886 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf403.206 693.782 mo(\(white\))[3.87357 7.19327 5.53351 2.76666 3.87357 4.42661 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf434.747 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf438.065 693.782 mo(for)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf449.99 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf453.307 693.782 mo(the)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf467.141 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf470.468 693.782 mo(datas)sh493.765 693.782 mo(et)[4.42661 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf502.061 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf505.383 693.782 mo(from)[3.04367 3.90152 4.98041 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf525.608 693.782 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf74.2114 705.737 mo(Filar)sh95.1286 705.737 mo(do)[5.5335 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf105.645 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf108.971 705.737 mo(et.)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf120.038 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf122.301 705.737 mo(al.)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf132.625 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf135.941 705.737 mo([15].)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf153.874 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf158.305 705.737 mo(Grey)[7.67525 3.83128 4.34691 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf179.32 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf182.637 705.737 mo(represents)[3.83128 4.34691 5.43387 3.83128 4.34691 3.8577 4.34692 5.43385 3.80382 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf225.727 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf229.055 705.737 mo(the)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf242.644 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf245.957 705.737 mo(known)[5.16277 5.43385 4.89078 7.06378 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf273.942 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf277.259 705.737 mo(proportion)[5.43387 3.83127 4.89078 5.43387 4.89075 3.8313 3.8038 2.71686 4.89075 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf322.415 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf325.732 705.737 mo(of)[4.89078 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf333.612 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf336.928 705.737 mo(female)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf364.369 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf367.687 705.737 mo(author)sh395.971 705.737 mo(s)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf399.826 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf403.145 705.737 mo(when)[7.06378 5.43387 4.34689 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf425.422 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf428.741 705.737 mo(excluding)[4.34692 5.16275 4.34692 2.71686 5.43387 5.43387 2.71686 5.43384 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf469.225 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf472.54 705.737 mo(names)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf499.22 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf502.538 705.737 mo(for)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf514.249 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf517.565 705.737 mo(which)[7.06378 5.43384 2.71686 4.34692 0 ]xshUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf542.563 705.737 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf74.2117 717.692 mo(the)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf87.7963 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.78362 0 0 -9.963 0 0 ]msf91.1137 717.692 mo(gender)shUUMMKD+MinionPro-Regular [9.78362 0 0 -9.963 0 0 ]msf119.398 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf121.619 717.692 mo(could)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf144.863 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf148.176 717.692 mo(not)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf162.564 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf165.891 717.692 mo(be)[5.53349 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf175.855 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf179.18 717.692 mo(computationally)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf249.733 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf253.051 717.692 mo(infer)sh272.722 717.692 mo(red.)[3.90152 4.42664 5.53348 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf289.351 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf293.775 717.692 mo(Error)[6.77887 3.90152 3.90155 4.98041 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf317.237 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf320.554 717.692 mo(bar)sh334.97 717.692 mo(s)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf338.896 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf342.226 717.692 mo(represent)[3.90152 4.42664 5.53348 3.90152 4.42664 3.92844 4.42661 5.53351 0 ]xshUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf382.178 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf385.495 717.692 mo(95%)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf403.756 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf407.084 717.692 mo(confidence)shUUMMKD+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf452.182 717.692 mo(\000\001)shUUMMKC+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf455.5 717.692 mo(inter)sh476.002 717.692 mo(vals.)[5.25742 4.98044 2.76669 3.92841 0 ]xsh135.362 223.486 mo
140.554 223.486 li
140.554 231.426 li
135.362 231.426 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
143.15 218.523 mo
148.341 218.523 li
148.341 231.426 li
143.15 231.426 li
cp
f
150.937 216.767 mo
156.128 216.767 li
156.128 231.426 li
150.937 231.426 li
cp
f
158.725 212.644 mo
163.916 212.644 li
163.916 231.426 li
158.725 231.426 li
cp
f
166.512 205.238 mo
171.703 205.238 li
171.703 231.425 li
166.512 231.425 li
cp
f
174.299 202.872 mo
179.491 202.872 li
179.491 231.426 li
174.299 231.426 li
cp
f
182.087 195.314 mo
187.278 195.314 li
187.278 231.426 li
182.087 231.426 li
cp
f
189.874 186.609 mo
195.065 186.609 li
195.065 231.425 li
189.874 231.425 li
cp
f
197.662 177.677 mo
202.854 177.677 li
202.854 231.426 li
197.662 231.426 li
cp
f
205.45 173.936 mo
210.641 173.936 li
210.641 231.426 li
205.45 231.426 li
cp
f
213.237 170.806 mo
218.428 170.806 li
218.428 231.426 li
213.237 231.426 li
cp
f
221.025 163.324 mo
226.216 163.324 li
226.216 231.426 li
221.025 231.426 li
cp
f
228.812 155.231 mo
234.003 155.231 li
234.003 231.426 li
228.812 231.426 li
cp
f
236.599 144.771 mo
241.791 144.771 li
241.791 231.426 li
236.599 231.426 li
cp
f
244.387 139.885 mo
249.578 139.885 li
249.578 231.426 li
244.387 231.426 li
cp
f
252.174 136.296 mo
257.365 136.296 li
257.365 231.425 li
252.174 231.425 li
cp
f
259.961 131.181 mo
265.153 131.181 li
265.153 231.426 li
259.961 231.426 li
cp
f
267.749 129.731 mo
272.94 129.731 li
272.94 231.426 li
267.749 231.426 li
cp
f
2.156 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
134.064 231.426 mo
274.315 231.426 li
@
2 lc
137.958 231.426 mo
137.958 234.353 li
@
145.745 231.426 mo
145.745 234.353 li
@
153.532 231.426 mo
153.532 234.353 li
@
161.321 231.426 mo
161.321 234.353 li
@
169.108 231.426 mo
169.108 234.353 li
@
176.895 231.426 mo
176.895 234.353 li
@
184.683 231.426 mo
184.683 234.353 li
@
192.47 231.426 mo
192.47 234.353 li
@
200.258 231.426 mo
200.258 234.353 li
@
208.045 231.426 mo
208.045 234.353 li
@
215.832 231.426 mo
215.832 234.353 li
@
223.62 231.426 mo
223.62 234.353 li
@
231.407 231.426 mo
231.407 234.353 li
@
239.195 231.426 mo
239.195 234.353 li
@
246.983 231.426 mo
246.983 234.353 li
@
254.77 231.426 mo
254.77 234.353 li
@
262.558 231.426 mo
262.558 234.353 li
@
270.345 231.426 mo
270.345 234.353 li
@
%ADOBeginSubsetFont: IIAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /IIAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000006546670676d0000000000000780000005ee
676c7966fc8e64e3000087880000453268656164d7c8e4bb00000d700000
0036686865610000000000000da800000024686d74780000000000000dcc
000034d46c6f636103824dd8000042a0000034d86d617870000000000000
7778000000206e616d65176fbb8600007798000004307072657000000000
00007bc800000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259592d2cb0024354584b
53234b515a58381b2121591b21212121592d0000000100000005028f13b6
d80a5f0f3cf5081b080000000000a2e3272a00000000c3047090faaffd67
1000080c00000009000100010000000000010000073efe4e00431000faaf
fa7a1000000100000000000000000000000000000d350600010000000000
0239000002390000023900b002d7005e0473001504730049071d00770556
00580187005a02aa007c02aa007c031d004004ac0072023900aa02aa0041
023900ba0239000004730055047300df0473003c047300560473001a0473
00550473004d047300610473005304730055023900b9023900aa04ac0070
04ac007204ac00700473005a081f006f0556fffd0556009605c7006605c7
009e055600a204e300a80639006d05c700a4023900bf0400003705560096
0473009606aa009805c7009c063900630556009e0639005805c700a10556
005c04e3003005c700a105560009078d0019055600090556000604e30029
0239008b023900000239002703c100360473ffe102aa00590473004a0473
008604000050047300460473004b02390013047300420473008701c70088
01c7ffa20400008801c7008306aa00870473008704730044047300870473
004802aa00850400003f02390024047300830400001a05c700060400000f
040000210400002802ac0039021400bc02ac002f04ac00570556fffd0556
fffd05c70068055600a205c7009c0639006305c700a10473004a0473004a
0473004a0473004a0473004a0473004a040000500473004b0473004b0473
004b0473004b023900bd023900230239ffe5023900090473008704730044
047300440473004404730044047300440473008304730083047300830473
008304730049033300800473006b0473001b0473005102cd006d044c0001
04e3009905e5000305e50003080000e102aa00de02aa003d0464004e0800
00010639005305b4009a0464004e0464004d0464004d0473fffd049c00a0
03f4003805b4007a069600a1046400000231000002f6002f02ec002d0625
007f071d004404e3008104e3009e02aa00e804ac0072046400540473002e
0464003304e5001a047300860473008c080000ef0556fffd0556fffd0639
006308000081078d00520473fffc0800000002aa005302aa004701c70080
01c7006c0464004e03f4002f04000021055600060156fe390473ffe402aa
005c02aa005c040000170400001704730049023900b901c7006c02aa0047
080000250556fffd055600a20556fffd055600a2055600a20239008d0239
ffe0023900040239001506390063063900630639006305c700a105c700a1
05c700a1023900c602aa001902aa000602aa001d02aa002e02aa00e502aa
00a202aa006b02aa003a02aa004b02aa00280473000001c700030556005c
0400003f04e3002904000028021400bc05c7fffd04730049055600060400
00210556009e0473008704ac007204ac00a102aa006b02aa001902aa0021
06ac006b06ac006b06ac0021047300000639006d04730042023900b10556
005c0400003f05c700660400005005c700660400005004730046046bffe1
02aa00ee0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7
fffd055600a20473004b055600a20473004b0473009601c7004204730096
025500880473009a02ac008305c7009c0473008705c7009c047300870639
00630473004405c700a102aa008505c700a102aa003c0556005c0400003f
04e300300239002404e300300300002305c700a10473008305c700a10473
008304e300290400002804e3002904000028046800a40639006006620055
04a00048047400480391006204f000440329002e05300048046bffe10400
00b002eb005208c000330800004f040000990800004f040000990800004f
040000980400009807d5016a05c0009e04ab007204d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505e100bf038d008904d5ffd90180008002d500860715
00610296000f04d5009202d6008302d6008304d500b202d600700556fffd
0473004a05c700660400005005c7006604000050055600a20473004b0556
00a20473004b055600a20473004b0639006d047300420639006d04730042
0639006d0473004205c700a40473008705c7001f047300060239ffce0239
ffce0239ffe40239ffe40239fff60239fff50239004b01c7001904000037
01c7ffa20556009604000088040000860473009601c7fffa05c7009c0473
008705c900a50473008b0639006304730044063900630473004405c700a1
02aa006b0556005c0400003f04e300300239000c05c700a10473008305c7
00a10473008305c700a10473008305c700a104730083078d001905c70006
055600060400002101c700890556fffd0473004a08000001071d00440639
005304e30081023900b9078d001905c70006078d001905c70006078d0019
05c70006055600060400002101c7008a02aaffe10473001b04cd005a06ac
006b06ac002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea
0557ffff0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7
ff780556fffd055600960558fffe055600a204e3002905c700a4023900bf
055600960558000b06aa009805c7009c0533006d0639006305c700a40556
009e04f2009404e30030055600060556000906af007f05fb006102390004
0556000604a00048039100620473008b01c7006b04600088049a008c0400
0019038700480473008b0473005c01c700890400008604000018049c00a0
0400001a0395005c04730044048d008303db0056046000880433001105b4
007a063f005701c7ffc9046000880473004804600088063f0057055700a2
06eb0032045500a105c000640556005c023900bf02390004040000370875
000d081500a406d5003104a900a10515000a05c000a00556fffd054000a7
05560096045500a1056b0000055600a20763000704d5004e05c000a105c0
00a104a900a10540001206aa009805c700a40639006305c000a00556009e
05c7006604e300300515000a061500520556000905eb009f055500570755
00a1078000a106550000071500a8054000a505c00055081500a405c7001a
0473004a0495005b0440008802eb008804ab00000473004b055afffb03ab
003204780087047800870380008604ab00180580008c046b008804730044
04550088047300870400005003aa0026040000210695004b0400000f0495
008a042b0045066b008d0695008d0500002805c0008b042b008404150030
060000890455001f0473004b0473000002eb00890415004b0400003f01c7
00880239000901c7ffa20740001306800083047300000380008604000021
046b008803e900a1034a008808000041089500a00585002d000001010000
001e0000003100000031000001010000007e0000007e0000008c0000008c
000001010000001000000101000001210310007d0000008c023300d20000
030b0000ff04023900b90481006904560032033100190411002d04d10096
01f9009b030f005f04ca009b04b8008c01f9009b0413002803b0005003b4
003c04ca009b04cf005001f9009b02d2003c0498005a043c00190488006e
045f007303b1001903d4000a0466009604130028058e00640524002803f2
009b03f2009b03f2009b01e3005a0356005a0686009b01f9ffac04130028
0413002803b4ff5703b4ff570448002d058e0064058e0064058e0064058e
006404810069048100690481006904560032033100190411002d04d10096
024b0000034a000004b8008c024b00000413002803b0005003b4003c04cf
005002d2003c0498005a0488006e045f007303d4000a0466009604130028
058e00640524002801f9009b0456003203b00050045f0073049b003c0000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da0043034d0079
01a8ffba0000004600000046000000460000004600000048000000460000
0046000000460435017c0435012e043500b7043500810435012c043500be
043500af043500810435009a043500db04350085028d00c1043500b30600
01000600010002420036060001000435009e04350098043500cb06000100
060001000600010006000100060001000000004606000100060001000600
01000600010006000100060001000600010006000100051bffba06000100
060001000600010005b5003a05b5003a01f4ffba01f4ffba060001000600
010006000100060001000481003604350036043dffba043dffba03e9004a
03e9004a067f0014077600140327ffba041effba067f0014077600140327
ffba041effba051b003204b500240300fff7060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000300000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473004a080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d007f028d005d0600
010004ee0015034d007901a8000e01d6ffdc01a8005601d6001003750032
0375003201a8002d01d60013051b003204b5002401f4ffba01f4ffba01a8
009301d6001305b5003a05b5003a01f4ffba01f4ffba024200000300fff7
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3005f02b3005f02b3
005f02b3005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9
003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
064f0027064f00270224ffba021affba04a7004604a700460224ffba021a
ffba04cf002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba
01a8ffba02b4002302b400230327ffba0327ffba043500450435004501f4
ffba01f4ffba024200360300fff7039affba0327ffba0375003203750032
051b003204b50024051b003204b5002401f4ffba01f4ffba045a004004ce
0049045a002604ce0039045a005304ce004a045a005304ce004a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000030060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0100ffba0800ffba1000ffba06dc0063053f004406d500a1055b00830000
fddc0000fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d
0000fd110000fc670000fd9d0000fbf50000fc720000fed50000fed50000
ff02041b00a006ac006b06ac00190000feb60000fd730000fe080000fca6
0000fe530000fd110000fbc80000faf40000faaf0000fc720000fbaa0000
fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe84
0000fdc20000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000
fd580000fc900000fd150000fc2c0000fc130000fc120000fb960000fb96
01c700880556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b0239006301c7001f023900ba01c7007c
063900630473004406390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406dc0063
053f004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004405c700a10473008305c700a10473008306d500a1055b0083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
00830556000604000021055600060400002105560006040000210556fffd
0473004a0239ffe201c7ffb0063900630473004405c700a10473008305c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
0000fefe0000fefe0000fefe0000fefe0455fffd02eb000c07630007055a
fffb04a900a10380008604a900a10380008605c700a4046b00880473fffd
040000140473fffd04000014055600090400000f05550057042b00450555
00a1047300870605006304730055063900600473004405b5003a01f4ffba
0224ffba021affba04a7004601f4009e01f4001001f4001b01f4001001f4
006b01f4fff90227ffce0000000f0000fff502aa00a402aa00a40000000e
00000056000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8
001d01d6fff501a8009301d6001303750032037500320375003203750032
051b003204b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3
005f02b3003802b3003802b3004902b3004903e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e
08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435
ffba0327ffba064f0027064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba064f
0027064f00270224ffba021affba064f0027064f00270224ffba021affba
04a7004604a7004604a7004604a70046093e0032093e00320740ffba0740
ffba067f0014077600140327ffba041effba04cf002d04cf002d0327ffba
0327ffba04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327
ffba0327ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba040d0047
040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d
0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba
043500450435004501f4ffba01f4ffba0435004504350045043500450435
0045043500450435004501f4ffba01f4ffba043500450435004504810036
04350036043dffba043dffba024200360300fff7031a001a031a001a031a
001a03750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba
0375003203750032051b003204b5002401f4ffba01f4ffba051b003204b5
0024067f0045067f0045067f0045067f004501a800280000fe290000fea2
0000ff300000ff1d0000ff120000ff920000fe7e08fc003208ad00320000
ffb50000ffb60000feed0000ff640000fe7e0000ff9f018d000002f6fffd
0000fe820000ff1004cd00320000ff580000ff580000ff640692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a
039a00360435ffba0327ffba034d007902b400230242003601f4ffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d067f001407760014
01f9009b0000fed902bc000003f2009b045afff504cefff5045a005304ce
004a045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a04350071043500ad045a000f04ce000f0473
001406110014054000a7047300860540000a0473000a05c7005105c70066
0400005005c7fffd067a00140540004a04730046047400480556006e04d5
005304e3ffc40639006d04fe000f070c008701c700830239001f05560096
0400008801c7001504000018072000a405c7ffb80473008b0639006006f2
00630557004406090014047300860556009e0556006b0400004f04f20094
030b00440239002404e300140239002404e3003005fb006105c700a1062e
00140400002104e300290400002804e3002904e30031045c0044045c003f
0473003c0473005503ab003203e5002404730087021400bc034e00bc04ac
0072023900b00aaa009e09c7009e08640046087f009606aa0096039c0083
09c7009c078e009c062b0087047300550556fffd0473004a0000fefe0556
fffd0473004a08000001071d00440639006d0473001a0639006d04730042
05560096040000880639006304730044063900630473004404e30029045c
004c01c7ffa20aaa009e09c7009e086400460639006d04730042084600a4
04f2009e05c7009c047300870556fffd0473004a0556fffd0473004a0556
00a20473004b055600a20473004b0239ff8a0239ff64023900040239fff6
0639006304730044063900630473004405c700a102aaffcc05c700a102aa
006805c700a10473007605c700a1047300830556005c0400003f04e30030
02390024045c0051037e001305c700a40473008705a600a404d6005e0486
005e04e30029040000280556fffd0473004a055600a20473004b06390063
047300440000fefd06390063047300440639006304730044063900630473
004405560006040000210473005704730048047300860473008604000013
0400005004730046047300460473005505e9005503ab004903ab0032050d
0032040f00440239ffb90473004204730042047800500402001904ef0019
0473008b047300870473008701c7001901c7008901c70089029e0000026e
001401c700830493008306aa008406aa008406aa00870473ffa60473008b
046c00870473004406530044063f00570466004402aaffe402aaffe402aa
ffe402aa008502aa008502aa008502aaffe40455008a0455008a0400003f
01c7ffa20214ffb901c7ff7202cb00000239000f0239002404730019048c
0044046000880400001a05c7000604000018042800190400002804540028
045c004c045c007904000024040000500400002404000050063900630440
0088040f004904780050046b0088032e000004000008033b008804730048
040000240400005007b7004607400046080b004605b30024036f002405c0
0024061c0013054a0083050f008303e2001e043800630311006403110064
0146ffce01eb006401eb000001eb000002ea006403d90000029100000187
005a02d7005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca0032
02ca003204ac007004ac007004ac006504ac006502aa012102aa00de02aa
005902aa012102aa001d02aa005902aa00de023900b6023900b602aa00fb
02aa00fb02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb0294
00000142006402b8003202a0000002ca0032031000960310009603100096
031000960310009602aa006202aa006202aa002802aa001d02aa00470457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000fec10000fec60000fdac
0000fed80000ff920000fee90000ff4c0000fea00000fec40000ffce0000
ff660000fea00000fed80000fed80000ff970000ff980000ff990000fff4
0000ff420000ff420000ff440000ff5f0000fe870000ffec0000ffa60000
ff510000ff510000ff510000fec90000ff1c000000000000fee90000ff4c
0000ff930000ff2a0000ff560000ffce0000fe870000febb0000fec40000
fec40000fed80000fed80000feb30000fec90000fdad0000fdac0000feb3
0000fec90000fdad0000fe160000fee60000ffa60000fe870000ff440000
feba0000ff230000ff9a0000fdac0000fe88000000000000feb00000ff98
0000fe930000ffa60000fe870000fdac0000ff660000ff440000feb00000
feb00000feb00000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb50000feb50000ffc30000feae0000fedc0000fec70000fec80000
fedc0000fe1e0000ff420000ff510000feb70000feb002aa00de02aa0059
02aa00fa049a008c04600088062e001407aa0000062e0014047b004c063f
005704cf0044063900630473004405c700660400005004e300a8033b0088
04ff0000043c0032060d000a049d0042072000a406aa0084056500630473
008b056400a40400000a0556006b0556006b04e0000504c5001905e5005f
046e004403b600140347002804cf00440495005b0400005001c7ffa20639
00600389004d03890050055600a205c000a10473004b047800870ab4006d
04fe00100639001404e70014079900bf05b500880558000b0400001a072e
00bf0590008806a10078057b007a086d00bf06f0008804d5006603ab001f
065f0039058200480639006004730044066d0009050c001a066d0009050c
001a0b010063091c004406aa005c04e600440987006d06d000500000fe37
0ab4006d04fe001005c7006604000050040700140000fea60000febc0000
feaa0000fead0000fc2b0000fc4c05c000a10478008705400004042b0014
0556009e04730087055d00a40464008804d5004e03ab003204a900040380
000005ef002904490028070900a4052f0088091800a006f6008806060066
042b005005c700660400005004e3003003aa002607670031058700260555
0057042b004506e4000a0554000a06e4000a0554000a023900bf07630007
055afffb055700a1046800860540001204ab001805c700a4046b008805c7
00a4046b008805550057042b004506aa00980580008c02aa002e0556fffd
0473004a0556fffd0473004a08000001071d0044055600a20473004b0605
00630473005507630007055afffb04d5004e03ab003204d5004e045c004c
05c000a10478008705c000a1047800870639006304730044063900600473
004405c0004a0415002b0515000a040000210515000a040000210515000a
0400002105550057042b0045071500a805c0008b0540004a0473004607bf
004a0703004607a6006606860053054d00660413005307c3001207470018
084600a4070700880639006d0478005005f90030055300260000ff430000
fec90000ff770000ffb00000ff470000ff560000ff740000fed70000feac
000000000000ff520000ff56000000000000feac0000fd9a000000000000
ff6a0000ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef
0000ff430000ff690000ff7c000000000000fdae0000ff8c000001020000
fefe0000fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd
0473004a05560096047300860556009604730086055600960473008605c7
00660400005005c7009e0473004605c7009e0473004605c7009e04730046
05c7009e0473004605c7009e04730046055600a20473004b055600a20473
004b055600a20473004b055600a20473004b055600a20473004b04e300a8
023900130639006d0473004205c700a40473008705c700a40473008705c7
00a40473008705c700930473006805c700a4047300870239ffdf01c7ff92
023900200239000605560096040000880556009604000088055600960400
00880473009601c7007e0473009601c7ffb90473009601c7ffa504730096
01c7ffa306aa009806aa008706aa009806aa008706aa009806aa008705c7
009c0473008705c7009c0473008705c7009c0473008705c7009c04730087
063900630473004406390063047300440639006304730044063900630473
00440556009e047300870556009e0473008705c700a102aa008505c700a1
02aa008505c700a102aa005e05c700a102aa00260556005c0400003f0556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
04e300300239002404e300300239002404e300300239ffff04e300300239
000e05c700a10473008305c700a10473008305c700a10473008305c700a1
0473008305c700a104730083055600090400001a055600090400001a078d
001905c70006078d001905c70006055600090400000f055600090400000f
055600060400002104e300290400002804e300290400002804e300290400
0028047300870239000305c70006040000210473004a01c7008904a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
039100620391006203910062039100620391006203910062061e0000061e
0000076c0000076c0000076c0000076c00000473008b0473008b0473008b
0473008b0473008b0473008b0473008b0473008b068f0000068f0000081f
0000081f0000081f0000081f0000081ffff3081ffff301c7008101c70081
01c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301
0000049100000491000004910000049100000491fff30491fff304730044
0473004404730044047300440473004404730044069d0000069d0000082d
0000082d000007c9000007c9000004600088046000880460008804600088
046000880460008804600088046000880682000007ae00000812000007ae
0006063f0057063f0057063f0057063f0057063f0057063f0057063f0057
063f0057065f0000065f000007ef000007ef0000078b0000078b0000078b
ffff078bffff04a0004804a0004803910062039100620473008b0473008b
01c7ffe601c7006804730044047300440460008804600088063f0057063f
005704a0004804a0004804a0004804a0004804a0004804a0004804a00048
04a000480556fffd0556fffd068200130682001306820013068200130682
0056068200560473008b0473008b0473008b0473008b0473008b0473008b
0473008b0473008b068f0000068f0000081f0000081f0000081f0000081f
0000081ffff3081ffff3063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd0556fffd0556fffd0556
fffd02aa00e502aa00fd02aa00e502aa000602aa00060473008b0473008b
0473008b0473008b0473008b068200000682000006f3000006f3000005c7
00a402aa001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca
01c7ff9301c7ff930239001a0239fff5036500000365000002aa001302aa
001302aa000604600088046000880460008804600088048d0083048d0083
0460008804600088055600060556000606e6000007180000061e000002aa
ffea02aaffea02aa0059063f0057063f0057063f0057063f0057063f0057
07650000069d000007270000065f000005fb006102aa00de02aa00e50473
000d05c7006605c7006606aa008705c70024095000a1078d00190556001f
04e30030080000290400003004c100660000ff530000ff530000ff530000
ff5301c7001901c7ffa2042b0005055600110574004602cbffa3057a0087
02f0ffc8057f000a057f000a02aa008402aa008402aa00c902aa00c902aa
00a002aa005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ffa50000
fed80000ff230000ff720000ff720000fee70000ffa50000ff530000ff53
0000ff530556009e0473008703f8001905fb0019071d0044044000190400
0050046900870469001903eb008703ab003201c700880361004104000088
033600100580008c04780087047300440400001304de004404de004404de
000d078d005003a800440473004404730044042b00840455001f0455001f
03aa00260460008804c6004405de004404c600440400001a05c700060400
002803ab0032036b003f04db001f02eb00880400001a04550088042b0084
05b4007a04ab001803a00000054f0000035100320351ffd1039800320348
00320348003203f80032036e0032015600690284002d0366003202d00032
0415003203710032036f003204180032030f003203590032039c00320376
0031036f003204fb000002fa003202fa00320304003204cc003203050064
0305003202f9003202f90032028c0032028c0032030400320142006402b6
006404950064030f00640305003202d50032030500320305003203060064
01c20032030f006403420032049500640292000003200000031500640292
0000030600320385003202bf00000142006401eb0064030f006402920000
0315006402920000030900320385003202bf000005ed00460a6600460613
00460689ffba0541ffba01e9003c045a00110000ff0d0000ff350000fece
0000feb70000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3
005f03e9004a03e9004a039affba0327ffba039affba0327ffba05ad0069
053d002d05fd009604dc005004e0003c05f6009b053f00280650002804ac
00720000fe3b0000fe660000fe660473fffc02aa005302d5ffce01a8ffba
01a8ffba01a8ffba01a8ffba0658001509c5004704000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5000305c7006606aa00980580008c074400830718
0046071800480556fffd05c70066040000140473000a04e300300400004f
0400002804a5001d000001020000ff420000febf0000ff3a0000ff53048d
000a05c7005105c7006605c70051045500a102eb00880000ff430000ff04
0000ffac02d200960000ff37021affba0250001e0000ff3a0000ff5b0000
ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff96
01f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba02b3003202b3003202b3005f02b3005f03e9
004a03e9004a0692003e0692003e043fffba043fffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
02b4002302b400230327ffba0327ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba040d0047040d004701a8
ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0473ff93047300460239ffbf06aaffd50473ffb70473
ff9102aaffa402aaffa40400ffff0239ffb90400002804730089030b0064
047400480649002401c7001901c700190473001e0460001e048c000a0473
0086047300460239001305b400420400008801c7fffc06aa00870473008b
0473008702aafffb0400003f0318ffa20400001a0400000f040000280473
004a04730048047300460473004b03ab004903ab00320534005501c70088
0400001301c7ffa204730083045c004c0304006402d5003202c9003302fc
0032028c003201d5003201d5000003040032031100640142001901420064
0142006401420019022a0000014200640142000902330064049300640493
0064030fffc9030f0064030e0064030500320300003202b800320142ffca
01c20032030f001d031a00320306006402d400640292000002de003202de
003202de003202f4003202ea00320000febc0000febc0000ff730000fea9
023900b902fa003202f900320305003202a0000002f900320639006d0556
fffd0473000f05c7006602aa004104a0004804a0004804a0004804a00048
04a0004804a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7
ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb046000880460008804600088
046000880460008804600088046000880460008801c7ffab01c7ffab01c7
ffbb01c7ffbb04600088046000880460008804600088045a005304ce004a
03a000130556001105c700290558000b055600a20473004b0400003301c7
ffa205e600630473004805c7000002aa000f055600060400002104000013
040000500400001301c700830455fffd02eb0001055600090400000f0556
00090400000f04d5005303ab00490540001204ab00180000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b
000a03eb004c040000130473000a01c700150473fff40556001105c700a1
047300190239ff8b05c700a404730087055600960400008804e300290400
00280400003b049e00a403670088053000480000ff530000ffbc0000fefe
0000fefe0000fea40000fea401c70088000000000000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
0066000000d6000002920000036e0000059800000772000008d200000a8c
00000c6200000d0e00000fa2000011d6000011d6000011d6000011d60000
11d6000011d6000011d6000011d600001380000015180000165200001652
00001652000017080000170800001708000017ec000017ec00001a220000
1a2200001a2200001bcc00001d0000001e0600001ffa00001ffa000022a4
000022a4000022a4000022a4000022a4000022a4000022a4000022a40000
22a4000022a4000022a4000022a4000022a4000022a40000257600002576
0000272a000028de00002a9c00002bf000002bf000002d9400002e880000
2e8800002e8800002f84000031b40000337a0000353c0000370000003700
0000380600003bae00003cd200003e7000003e70000042da000042da0000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
4532000045320000453200004532000100000d3500f2003c009d00070002
0010002f005600000468041d000500020000000e00ae0000000300000000
006a0000000000030000000700ba006a0001000000000000003501240001
000000000003000e01590001000000000004000e01670001000000000006
000e01750001000000000007005d01830003000104090000006a01e00003
000104090001001c024a0003000104090002000e02660003000104090003
001c02740003000104090004001c02900003000104090006001c02ac0003
00010409000700ba02c800a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00410072
00690061006c00200069007300200061002000740072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002ea9203230303620546865204d6f6e6f7479706520436f72706f726174
696f6e2e20416c6c205269676874732052657365727665642e5351595154
422b417269616c4d545351595154422b417269616c4d545351595154422b
417269616c4d54417269616c20697320612074726164656d61726b206f66
20546865204d6f6e6f7479706520436f72706f726174696f6e20696e2074
686520556e697465642053746174657320616e642f6f72206f7468657220
636f756e74726965732e00a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00530051
0059005100540042002b0041007200690061006c004d0054005200650067
0075006c00610072005300510059005100540042002b0041007200690061
006c004d0054005300510059005100540042002b0041007200690061006c
004d0054005300510059005100540042002b0041007200690061006c004d
00540041007200690061006c002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200069006e002000740068006500200055006e0069
007400650064002000530074006100740065007300200061006e0064002f
006f00720020006f007400680065007200200063006f0075006e00740072
006900650073002e00>
<b900540328b326181fd0bc032900e0032900020329b22b1d1fb90327031d
b23b1f40b80323b31215320f412d03200001002f0320000100200320006f
032000af032000bf03200004005f031e00010010031e007f031e0080031e
00af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e
009f031e00e0031e0006031d031cb2201f1041270319007f03190002000f
031700ef031700ff03170003001f0317002f0317004f0317005f0317008f
0317009f03170006000f0317005f0317006f0317007f031700bf031700f0
0317000600400317b2923340b80317b28b3340b80317b36a6c3240b80317
b2613340b80317b35c5d3240b80317b357593240b80317b34d513240b803
17b344493240b80317b23a3340b80317b331343240b80317b32e423240b8
0317b3272c3240b80317b312253280b80317b30a0d32c04116031600d003
16000200700316000102c4000f0101001f00a0031500b003150002030600
0f0101001f00400312b32426329fbf03040001030203010064001fffc003
01b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11
329f414a02e200af02e200bf02e2000302e202e202e102e1007f02e00001
001002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e0
02df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf
02dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f
02dc000202dc02dc001002db000102db02db000f02da000102da02daffc0
02d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2
171b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb03
22003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d4
00b002d40002000002d4001002d4002002d4005002d4006002d4007002d4
0006006002d6007002d6008002d6009002d600a002d600b002d600060000
02d6001002d6002002ca002002cc002002d6003002d6004002d6005002d6
000802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c800
17001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02
c6b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b3
24121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf
008f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800
001f02a600a20800406a1f4026434932402043493240263a3d3240203a3d
329f209f26024026969932402096993240268e923240208e92324026848c
324020848c3240267a813240207a813240266c763240206c76324026646a
324020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb7
24271f374f6b0120410f0277003002770040027700500277000402770277
027700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc018052
0180a201806501807e01808101803c01805e01802b01801c01801e018040
0180bb0138000100800140b40180400180bb013800010080013940180180
ca0180ad018073018026018025018024018020013740b80221b2493340b8
0221b2453340b80221b341423240b80221b33d3e320f410f0221003f0221
007f0221000300bf022100cf022100ff0221000300400221b320223240b8
0221b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02
c3008f02c300df02c30004002f02c3006002c300cf02c30003000f02c300
3f02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f02
220001000f0222002f0222003f0222005f0222007f022200ef0222000600
bf022100ef02210002006f0221007f022100af02210003002f0221003f02
21004f0221000302c302c30222022202210221401d101c102b1048038f1c
010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d00
094109028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226
bb1f41150197001e0401001f013900260125001f013800730401001f0135
001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e
001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51c
b802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61f
b91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b
1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f44
1c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301c
bb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b8
0168402c07960758074f07360732072c0721071f071d071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b
58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358
b900010111858d1bb900010128858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa
1d59b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f0
45445958b9033e01f2455258b901f2033e4459594bb8015653205c58b900
2001f14544b9002601f145445958b9081e0020455258b90020081e445959
4bb8019a53205c58b9002501f24544b9002401f245445958b90909002545
5258b9002509094459594bb8040153205c58b173244544b1242445445958
b917200073455258b9007317204459594bb8040153205c58b1ca254544b1
252545445958b9168000ca455258b900ca16804459594bb03e53205c58b1
1c1c4544b11e1c45445958b9011a001c455258b9001c011a4459594bb056
53205c58b11c1c4544b12f1c45445958b90189001c455258b9001c018944
59594bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258
b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c45
6523456023456560234560b08b766818b080622020b163594565234520b0
03266062636820b003266165b059236544b063234420b13b5c4565234520
b003266062636820b003266165b05c236544b03b2344b1005c455458b15c
406544b23b403b4523614459b347503437456523456023456560234560b0
89766818b080622020b134504565234520b003266062636820b003266165
b050236544b034234420b147374565234520b003266062636820b0032661
65b037236544b0472344b10037455458b137406544b24740474523614459
004b5342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
7475737500184569444569444569447373737374757374752b2b2b2b7475
2b2b2b2b2b73737373737373737373737373737373737373737373737373
2b2b2b45b0406144737400004bb02a534bb03f515a58b1070745b0406044
59004bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a
515a58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc0
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b43
5c58b9008002bbb301401e017400735903b01e4b5402b0124b545ab01243
5c5a58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b73
7373732b2b2b2b2b002b2b2b2b2b2b004569447345694473456944737475
456944734569444569444569447374456944456944732b2b2b2b2b732b00
2b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b737475737475
2b2b2b742b2b000000>
[15985 1731 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 214 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>IIAAAA+ArialMT AddT42Char 
2 658 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>IIAAAA+ArialMT AddT42Char 
2 878 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>IIAAAA+ArialMT AddT42Char 
2 1432 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>IIAAAA+ArialMT AddT42Char 
2 1906 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>IIAAAA+ArialMT AddT42Char 
2 2258 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>IIAAAA+ArialMT AddT42Char 
2 2700 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>IIAAAA+ArialMT AddT42Char 
2 3170 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>IIAAAA+ArialMT AddT42Char 
2 3342 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>IIAAAA+ArialMT AddT42Char 
2 4002 28 <00020055ffe7041905c0001e002a01aeb10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40343a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a2964060227baffe00023ffe0401821200620281e4f0e5f0e020e0e
1c221e140501d350000100b80268b4041e1c0d1fba0139000b0138401118
40212334301801001810180218902c01b80138b400b5257311b8ffc0400e
212334201140110211902bc78b182b10f65d2bedf4ed10f65d712beded00
3fedfd5de43fed12392f5ded31300138383838005d71015d595913371616
33323e023534270606232202353400333216121110020623222601342623
220615141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7a
f1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8
df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>IIAAAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>IIAAAA+ArialMT AddT42Char 
IIAAAA+ArialMT /CharStrings get begin
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
end
IIAAAA+ArialMT /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
pop
end
%ADOEndSubsetFont
/UUMMKE+ArialMT /IIAAAA+ArialMT findfont ct_VMDictPut/UUMMKE+ArialMT*1 [48{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine 198{/.notdef}rp]UUMMKE+ArialMT nfUUMMKE+ArialMT*1 [0 -9 -9 0 0 0 ]msf140.388 257.359 mo(1997)[-5.00397 -5.00403 -5.00403 0 ]ysh148.173 257.359 mo(1998)[-5.00397 -5.00403 -5.00403 0 ]ysh155.958 257.359 mo(1999)[-5.00397 -5.00403 -5.00403 0 ]ysh163.743 257.359 mo(2000)[-5.00397 -5.00403 -5.00403 0 ]ysh171.528 257.359 mo(2001)[-5.00397 -5.00403 -5.00403 0 ]ysh179.313 257.359 mo(2002)[-5.00397 -5.00403 -5.00403 0 ]ysh187.098 257.359 mo(2003)[-5.00397 -5.00403 -5.00403 0 ]ysh194.883 257.359 mo(2004)[-5.00397 -5.00403 -5.00403 0 ]ysh202.668 257.359 mo(2005)[-5.00397 -5.00403 -5.00403 0 ]ysh210.453 257.359 mo(2006)[-5.00397 -5.00403 -5.00403 0 ]ysh218.238 257.359 mo(2007)[-5.00397 -5.00403 -5.00403 0 ]ysh226.023 257.359 mo(2008)[-5.00397 -5.00403 -5.00403 0 ]ysh233.808 257.359 mo(2009)[-5.00397 -5.00403 -5.00403 0 ]ysh241.593 257.359 mo(2010)[-5.00397 -5.00403 -5.00403 0 ]ysh249.378 257.359 mo(2011)[-5.00397 -5.00403 -5.00403 0 ]ysh257.163 257.359 mo(2012)[-5.00397 -5.00403 -5.00403 0 ]ysh264.948 257.359 mo(2013)[-5.00397 -5.00403 -5.00403 0 ]ysh272.733 257.359 mo(2014)[-5.00397 -5.00403 -5.00403 0 ]ysh0 lc
134.064 231.426 mo
134.064 108.582 li
@
2 lc
131.138 231.426 mo
134.064 231.426 li
@
131.138 206.857 mo
134.064 206.857 li
@
131.138 182.288 mo
134.064 182.288 li
@
131.138 157.719 mo
134.064 157.719 li
@
131.138 133.151 mo
134.064 133.151 li
@
131.138 108.582 mo
134.064 108.582 li
@
%ADOBeginSubsetFont: KIAAAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /KIAAAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000075a6670676d00000000000008880000056b
676c7966d6997db700008e580000325668656164d812f94f00000df40000
0036686865610000000000000e2c00000024686d74780000000000000e50
000034d46c6f6361028d208000004324000034d86d617870000000000000
77fc000000206e616d65cbd338c30000781c000004677072657000000000
00007c84000011d267646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002affc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200004
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440000404154403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0c05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b0035158b00425b00425012046b0106048
2046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b8fff060482046b8fff060
48590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b5323
4b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b212159
2d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab902a702a78a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b20201024360425959
2d00000100000005028f441a48255f0f3cf50819080000000000a2e33c1d
00000000c3047092fafafcfd100008150001000900010001000000000001
0000073efe4e00431000fafafa7a10000001000000000000000000000000
00000d350600010000000000023900000239000002aa00b803cb00700473
001204730046071d005905c7005a01e7005c02aa006b02aa0043031d001c
04ac00550239007502aa0073023900930239fffd04730056047300a20473
00330473004d047300260473005b04730057047300570473005304730041
02aa00c902aa00aa04ac005f04ac005504ac005f04e3006a07cd003d05c7
000005c7009605c7006105c700940556009504e300970639006205c70096
0239008c0473002305c7009904e3009d06aa009105c70098063900590556
00950639005905c700960556004a04e3002c05c700930556ffff078d0007
055600000556fffd04e3001602aa00920239fffd02aa002604ac00730473
ffed02aa002a0473004904e300870473005504e300540473004102aa0018
04e3005404e30092023900930239ffa20473008902390093071d007e04e3
009104e3005204e3008b04e3005b031d00870473003002aa001f04e3008d
0473000b063900090473000c0473000e04000022031d003c023d00b0031d
002d04ac004305c7000005c7000005c700610556009505c7009806390059
05c700930473004904730049047300490473004904730049047300490473
005504730041047300410473004104730041023900920239ffe90239ffcd
0239ffd004e3009104e3005204e3005204e3005204e3005204e3005204e3
008d04e3008d04e3008d04e3008d0473004403330056047300540473000d
0473003b02cd00420473fffe04e3008b05e5fff705e5fff7080000d802aa
00bb02aa0005046400310800ffaa0639003f05b40098046400320464003c
0464003c04730001049c006f03f4002c05b4007a069600a1046400000231
000002f6002502ec001a06250037071d005804e3005704e3006502aa00c3
04ac0055046400540473ffec0464001f04e5001a047300600473006a0800
00c905c7000005c700000639005908000048078d00580473fffc08000000
040000840400006902390098023900720464003103f4002f0473000e0556
fff70156fea90473ffe002aa004b02aa004b04e3001f04e3001f04730044
0239009302390075040000710800000105c700000556009505c700000556
0095055600950239006a0239ffae0239ffbf0239ffc10639005906390059
0639005905c7009305c7009305c700930239009302aa000302aafff302aa
001302aa001a02aa00cd02aa009102aa002602aa006002aa003902aa0003
04e3000a0239000a0556004a0473003004e3001604000022023d00b005c7
fffd04e300530556fff70473000e0556009504e3008b04ac005504ac006d
02aa005b02aa001902aa002806ac005c06ac005c06ac0028047300000639
006204e300540239008c0556004a0473003005c700610473005505c70061
0473005504e30054046bffed02aa00c805c700000473004905c700000473
004905c7009405c0005105c7fffd05560095047300410556009504730041
04e3009d0239007904e3009d0315009504e3009a03d5009005c7009804e3
009105c7009804e300910639005904e3005205c70096031d008705c70096
031d00500556004a0473003004e3002c02aa001f04e3002c03d5001e05c7
009304e3008d05c7009304e3008d04e300160400002204e3001604000022
04cf009a063900560691005604eb004e04da004e03cc004e0579004e0392
003005b9004e046bffed04d500b8032b004f08c000290800004f04000099
0800004f040000990800004f040000980400009807d5016a05c7008f04ab
005504d5009d04ac005504d5022204d5010505abffe9050001c905ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550647008c0473009005ab
ffc701eb008d03d500860715002303e9001804d5009202d6005c02d6005c
04d500b202d6004d05c700000473004905c700610473005505c700610473
005505560095047300410556009504730041055600950473004106390062
04e300540639006204e300540639006204e3005405c7009604e3009205c7
000504e300190239ffba0239ffbb0239ffda0239ffda0239ffe10239ffe2
0239004802390047047300230239ffa205c70099047300890473008d04e3
009d0239ffed05c7009804e3009105c9009c04e3008e0639005904e30052
0639005904e3005205c70096031d002a0556004a0473003004e3002c02aa
000705c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d078d0007063900090556fffd0473000e0239008d05c700000473
00490800ffaa071d00580639003f04e3005702aa00c9078d000706390009
078d000706390009078d0007063900090556fffd0473000e0239009502aa
ffd70473000d04cd005a06ac005c06ac002906ac003006ac002f02aa00bc
02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb03caffbb0699
ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c0000005560095
04e3001605c700960239008c05c700990556000006aa009105c700980526
00660639005905c7009a0556009504cd005a04e3002c0556fffd05560000
06790056066a00620239ffcc0556ffff04eb004e039c004e04e3008e0239
008204a8006c04e200900473000f03af004e04e3008e0453004e02390093
0476008e0473000f04e500900473000b0390004e04e3005204f300760429
004e04a80076049b00110607007606c2004e0239ffcd04a8007604e3004e
04a8007606c2004e055a00970715002f048900a405b100580556004a0239
008c0235ffca0473002308c0001a0880009d0700003704e2009a04fa0000
05c0009905c7000005c0009b05c70096048900a405b3fffa05560095073b
00170503002c05c0009905c0009904e2009a059d002006aa009105c70096
0639005905c000990556009505c7006104e3002c04fa000006d400590556
000005d8009a059f007d080a009a0827009a06f5001a07d5009d05c0009b
05b100570840009605c000040473004904f1005c04eb0096035500880514
fff90473004105acffff03fa001804eb008c04eb008c0401008805150019
05eb009b04d5008804e3005204d5008804e3008b0473005503eb00150473
000e070000540473000c04eb008904a5007206ab008c06c0008d05d50028
06d5009504eb0099046b003806d5009104abfffb0473004504e300000355
0088046b005104730030023900930240ffd00239ffa207c000180740008c
04e30000040100880473001204d5008803e50096039300880800004108eb
00a306200030000001010000001e0000003100000031000001010000007f
0000007e0000008c0000008c000001010000001000000101000001210393
007d0000008c026500c8000003020000ff0102aa00c904a90059049b0041
03a7000a0466003204ea0082022f0087034e005a04ed00870503007d022f
0087042c002803ed004b03f8004104e30087050a0037022f00870316004b
04e800500459000a04c0006404b2006403ff000a0418000a04950082042c
002805b8005a0563002d045e0087045e0087045e00870236005004090050
068b0087022fffac042c0028042c002803f8ff1603f8ff160479003205b8
005a05b8005a05b8005a05b8005a04a9005904a9005904a90059049b0041
03a2000a0466003204ea008202950000038100000503007d02950000042c
002803ed004b03f80041050a00370316004b04e8005004c0006404b20064
0418000a04950082042c002805b8005a0563002d022f0087049b004103ed
004b04b2006404db00410000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da004303c0007e0196ffba0000004600000046000000460000
004600000048000000460000004600000046047e0188047e0150047e0104
047e009e047e012d047e00ea047e00d5047e009c047e00bc047e00ee0435
0085028d00c1043500b3060001000600010002be005806000100047e00a5
047e00bd047e00de06000100060001000600010006000100060001000000
004606000100060001000600010006000100060001000600010006000100
0600010004e6ffba0600010006000100060001000532003905320039022c
ffba022cffba06000100060001000600010006000100049e003404780030
0430ffba0430ffba0376000a0376000a060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba05280097046f000a03520003
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
000000300000004600000046000000400000004606000100060001000000
ffdc0000fe510000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ffdc0000ff160000ffdc0000ff200000
ffdc0473002d080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d00670600010005a0002e03c0007e01e800000207ffc3
01bc005e01e0fffa039c0006039c000601bc005e01e0001a05280097049e
0011022cffba022cffba01bc008801e0001a0532003905320039022cffba
022cffba02be0036035200030532003905320039022cffba022cffba0532
003c0532003c022cffba022cffba049e0034047800300430ffba0430ffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba02be006902be006902be006902be00690376000a0376000a0376000a
0376000a073200400732004004deffba04deffba073200400732004004de
ffba04deffba0880004008800040062cffba062cffba0880004008800040
062cffba062cffba0430ffba0430ffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0610002f0610002f0270ffba0298ffba04e6
002704e600270270ffba0298ffba045400290454002902e2ffba02e2ffba
039c0023039c002301e0ffba01e0ffba02e2002102e200210352ffba0352
ffba0454003e0454003e022cffba022cffba02be00580352000303c0ffba
039cffba039c0006039c000605280097046f000a05280097049e0011022c
ffba022cffba0454000004c4000003e400220454001a03e400220454001a
03e400220454001a06000100060001000000004600000046060001000600
010006000100000000460000004606000100060001000000004800000046
060001000600010006000100000000460000004600000046000000460000
004000000030060001000000004600000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010002be00690100ffba0800ffba1000ffbb06d3005905b0
005206a3009305cb008d0000fd880000fbc10000fc5f0000fe310000fcad
0000fd550000fe260000fdf10000fd180000fc690000fd950000fbe00000
fc700000fed40000fecd0000fea0041b007806ac005c06ac00190000fe45
0000fd550000fda60000fc5f0000fe250000fd180000fbe00000fafa0000
fb360000fc700000fb870000fb9b0000fcce0000fc540000fbc30000fc94
0000fbf50000fdb00000fe590000fd7e0000fc820000fd340000fe500000
fe460000fcd10000fd3e0000fd020000fc3a0000fce90000fc260000fc07
0000fc2f0000fb9e0000fb760239009305c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c70000047300490556009504730041
055600950473004105560095047300410556009504730041055600950473
00410556009504730041055600950473004105560095047300410239006a
0239005d0239008c023900930639005904e300520639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e3005206d3005905b0005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005205c7009304e3008d05c70093
04e3008d06a3009305cb008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d0556fffd0473000e0556fffd0473000e
0556fffd0473000e05c70000047300490239ffca0239ffca0639005904e3
005205c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d0000fef90000fef90000fef40000feef0489
fffd03550007073b001705acffff04e2009a0401008804e2009a04010088
05c7009604d5008804730001047300120473000104730012055600000473
000c059f007d04a50072059f009c04e3009205cf00590473004c06390056
04e3005205320039022cffba0270ffba0298ffba04e60027022c0065022c
0016022c0016022c0011022c0043022cffd20000fef00000000f0000fff5
02aa009002aa0090000000000000005e0000005e0000ffcb01bc000f01e0
ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0001a039c0006
039c0006039c0006039c000605280097046f000a0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba0532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba049e0034047800300430ffba0430ffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba049e0034047800300430ffba0430ffba02be004f02be004f02be0069
02be006902be006902be006902be004f02be004f02be006602be006602be
006902be006902be006902be006902be002f02be002f02be002202be0022
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a073200400732004004deffba04deffba073200400732004004de
ffba04deffba073200400732004004deffba04deffba0880004008800040
062cffba062cffba0880004008800040062cffba062cffba0430ffba0430
ffba0454003403c000460454ffba02e2ffba0610002f0610002f0610002f
0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610002f0610
002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba04e6002704e6002704e6002704e60027093e
0032093e00320740ffba0740ffba060e00290708002902e2ffba0456ffba
045400290454002902e2ffba02e2ffba045400290454002902e2ffba02e2
ffba045400290454002902e2ffba02e2ffba060e00290708002902e2ffba
0456ffba060e00290708002902e2ffba0456ffba060e00290708002902e2
ffba0456ffba060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba039c0023039c002301e0ffba01e0ffba039c0023039c
002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0ffba039c0023
039c002301e0ffba01e0ffba0454003e0454003e022cffba022cffba0454
003e0454003e0454003e0454003e0454003e0454003e022cffba022cffba
0454003e0454003e049e0034047800300430ffba0430ffba02be00580352
0003031a001a031a001a031a001a039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c000605280042046fffd905280097
046f000a022cffba022cffba039c0006039c000605280097046f000a022c
ffba022cffba05280097046f000a067f0044067f0045067f0044067f0045
01a800280000fe290000fe8c0000ff250000ff230000fefa0000ff7a0000
fe5908fc003208ad00320000ffb50000ffb60000fef00000ff590000fe59
0000ff8c01b4000002f700000000fe850000ff0704cd00320000ff580000
ff580000ff59073200400732004004deffba04deffba0880004008800040
062cffba062cffba0454003403c000460454ffba02e2ffba03c0007e02e2
002102be0058022cffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d060e002907080029022f00870000fec803500000045e008703e4
fff50454fff503e400220454001a03e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a047e0072047e
00bd03e4000f0454000f04e3001b06b1001e05c0009b04e3008705c0000a
04e3000a05c7006905c700610473005505c7fffd06b3001e05c0005c04e3
005404da004e055600660503006f04e3ffac063900620518000207720092
023900930239000705c70099047300890239001b0473000f07ef009605c7
ffad04e3008e063900560718005905f300550641001e04e3008b05560095
055600640473006304cd005a02e1001e02aa001f04e3001802aa001f04e3
002d066a006205c70093062900000473000e04e300160400002204e3003a
04e300590436002a04360039047300330473005b03fa001e04a2001f04e3
008b023d00b003fb00b004ad005602aa00b80aaa009409c7009408e30054
0956009d071c009d047200930a3a009808000098071c00910473004c05c7
0000047300490000fefe05c70000047300490800ffaa071d005806390062
04e300240639006204e3005405c70099047300890639005904e300520639
005904e3005204e3003a043600220239ffa20aaa009409c7009408e30054
0639006204e30054084300960552009505c7009804e3009105c700000473
004905c7000004730049055600950473004105560095047300410239ff37
0239ff2d0239fff40239ffe60639005904e300520639005904e3005205c7
0096031dffcd05c70096031d008005c7009304e3006705c7009304e3008d
0556004a0473003004e3002c02aa001f049e002e0429004905c7009604e3
0092059f009c050c0052050c005204e300160400002205c7000004730049
05560095047300410639005904e300520000fefd0639005904e300520639
005904e300520639005904e300520556fffd0473000e0473004504e30054
04e3008204e30087047300340473001404e3005404e300540473004c0641
004c03fa004f03fa001805870018048a005202aaffc404e3005404e30054
04b000520473000f04ce000f04e3008a04e3009204e300920239001b0239
00930239009302a8000002d900140239009304d40093071d0085071d0085
071d007e04e3ffa604e3009104eb008c04e3005206ab005206c2004e05ff
0052031dffe6031dffe6031dffe6031d0087031d0087031d0087031dffe6
04ab008a04ab008a0473003002aaffc402aaffc402aaff9b0451001e02aa
001902aa001f04e3001b04f8004904a8009104730012063900090473000f
0491000f0400002205700022043600220436002204730042047300550473
0042047300550639005904eb0096048a004f04b0005204d5008803ab001e
04730014039e008804e3005b0473004204730055083f00540789005409af
00540682001f0446001f0698001f06f4001806350093058a00930445001e
0482008802f1003202f10032018effe20204003202040000020400000300
0032042f000002e2000001e7005c03cb0070023900980239007502390094
02aa00f302aa00f3030000320300003204ac005f04ac005f04ac002a04ac
002a02aa012102aa00bb02aa002a02aa012102aa001302aa002a02aa00bb
02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a602aa00a602aa
001302aaffe102aafffb02ed0000012100320302003202ee000003000032
031000960310009603100096031000960310009602aa006202aa006202aa
000302aa001d040000690457009604570096045700960457009604570043
04570043045700430457004304570043031000430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310002f0457001a0457001a0457001a0457001a0457001a0310
001a04570042045700420457004204570042045700420310004204570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f0310002f045700260457
002604570026045700260457002603100026045700420457004204570042
045700420457004203100042045700960457009604570096045700960457
004204570042045700420457004204570042031000420457002604570026
045700260457002604570026031000260457002304570023045700230457
002304570023031000230457002f0457002f0457002f0457002f0457002f
0310002f0457004b0457004b0457004b0457004b0457004b0310004b0457
009604570096045700960457009604570042045700420457004204570042
04570042031000420457001a0457001a0457001a0457001a0457001a0310
001a0457002404570024045700240457002404570024031000240457002f
0457002f0457002f0457002f0457002f0310002f0457004e0457004e0457
004e0457004e0457004e0310004e04570096045700960457009604570096
0000feaf0000febf0000fdb50000fec80000ff780000feb10000ff3d0000
fe6f0000feae0000ffce0000ff660000fe6f0000fec80000fec80000ff68
0000ff680000ff68000000000000ff1f0000ff1f0000ff440000ff5f0000
fe870000ffec0000ff9c0000ff510000ff510000ff510000febf0000ff15
000000000000feb10000ff3d0000ff6b0000fef20000ff470000ffce0000
fe870000febb0000feae0000feae0000fec80000fec80000fea60000febf
0000fdb70000fdb90000fea60000febf0000fdb50000fe1f0000fee20000
ff9c0000fe870000ff440000feba0000ff230000ff9a0000fdb90000fe3b
000000000000fea70000ff680000fe170000ff740000fe870000fdb90000
ff660000ff440000fea70000fea70000fea70000ff030000ff520000fd1f
0000ff530000ff530000ff530000feb10000feb00000ffa10000fe8c0000
feb80000feaf0000fea20000feba0000fdf40000ff190000ff2d0000fe8c
0000fe8802aa00bb02aa002a02aa00c804e2009004a80076062900000802
00000629000005ff005206c2004e056900140639005904e3005205c70061
0473005504e30097039e008806030000043c001d066f000a04e2000a07ef
0096071d0085059f007d04e3008a059f009c04d7000a0556006405560064
0524001404d4000a05e1005504a0004b040e0014038400280569001404f1
005c047300550239ffa20639005603d4005103d400510556009505c00099
0473004104eb008c0a3d0059063a001406f4001a059f001b07ce008c065e
0093055600000473000b0768008c066700930679005606070076089e008c
07d800930503004603fa004306790056060700760639005604e300520685
ffff052c000b0685ffff052c000b0b3a005909bd005206840055051a004b
0a3d0059073500550000fe370a3d0059063a001405c700610473005504ac
000f0000fea60000feb10000feaa0000fead0000fc2b0000fc4c05c00099
04eb008c05c0001104eb001b0556009504e3008b059f009c04c900880503
002c03fa001804e200110401000d0617001a04fc00280709009605b60088
09020099075f008805c70061049f005505c700610473005504e3002d03eb
001506d2002c05830015059f007d04a5007206da000a056d000a06da000a
056d000a0239008c073b001705acffff059d009a04c80088059d00200515
001905c7009604d5008805c7009604d50088059f007d04a5007206aa0091
05eb009b02aa001a05c700000473004905c70000047300490800ffaa071d
0058055600950473004105cf00590473004c073b001705acffff0503002c
03fa00180503002c0436002205c0009904eb008c05c0009904eb008c0639
005904e300520639005604e3005205b10057046b003804fa00000473000e
04fa00000473000e04fa00000473000e059f007d04a5007207d5009d06d5
009505c0005e04e30054083e005e077a005407ad004606c4004305430046
044a0043081a002007a5001908430096076600880639006204b000520620
002d059b00150000ff430000fec90000ff770000ffb00000ff470000ff56
0000ff740000fed70000feac000000000000ff520000ff56000000000000
feac0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac
0000ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000
fdae0000ff8c000001020000feef0000feef0000fefd0000fef90000ff53
0000fef80000fef905c700000473004905c7009604e3008705c7009604e3
008705c7009604e3008705c700610473005505c7009404e3005405c70094
04e3005405c7009404e3005405c7009404e3005405c7009404e300540556
009504730041055600950473004105560095047300410556009504730041
055600950473004104e3009702aa00180639006204e3005405c7009604e3
009205c7009604e3009205c7009604e3009205c7004e04e3003b05c70096
04e300920239ffd20239ffd20239001b0239ffce05c700990473008905c7
00990473008905c700990473008904e3009d0239009304e3009d0239ffeb
04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e06aa0091071d
007e06aa0091071d007e05c7009804e3009105c7009804e3009105c70098
04e3009105c7009804e300910639005904e300520639005904e300520639
005904e300520639005904e300520556009504e3008b0556009504e3008b
05c70096031d008705c70096031d008705c70096031d008705c70096031d
00590556004a047300300556004a047300300556004a047300300556004a
047300300556004a0473003004e3002c02aa001f04e3002c02aa001f04e3
002c02aa001f04e3002c02aa001f05c7009304e3008d05c7009304e3008d
05c7009304e3008d05c7009304e3008d05c7009304e3008d0556ffff0473
000b0556ffff0473000b078d000706390009078d00070639000905560000
0473000c055600000473000c0556fffd0473000e04e300160400002204e3
00160400002204e300160400002204e3009202aaffde063900090473000e
047300490239008d04eb004e04eb004e04eb004e04eb004e04eb004e04eb
004e04eb004e04eb004e05c7000005c7000006f3fff206f3000006f3fff2
06f3000006f3004306f3004303cc004e03cc004e03cc004e03cc004e03cc
004e03cc004e061efff2061e000007aefff207ae000007aefff207ae0000
04e3008e04e3008e04e3008e04e3008e04e3008e04e3008e04e3008e04e3
008e068ffff2068f0000081ffff2081f0000081ffff2081f0000081f0014
081f001402390090023900900239ffb60239ffc40239ffde0239ffec0239
ffb30239ffc00301fff2030100000491fff2049100000491fff204910000
049100140491001404e3005204e3005204e3005204e3005204e3005204e3
0052069dfff2069d00000855fff20855000007c9fff207c9000004a80076
04a8007604a8007604a8007604a8007604a8007604a8007604a800760682
000007fe00000862000007aefff306c2004e06c2004e06c2004e06c2004e
06c2004e06c2004e06c2004e06c2004e06cefff206ce00000886fff20886
000007fafff207fa000007fafff307fafff304eb004e04eb004e03cc004e
03cc004e04e3008e04e3008e0239ffe70239008d04e3005204e3005204a8
007604a8007606c2004e06c2004e04eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f3
000006f3fff206f3000006f3004306f3004304e3008c04e3008c04e3008c
04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2068f0000081f
fff2081f0000081ffff2081f0000081ffff3081ffff306c2004e06c2004e
06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce
00000886fff20886000007fafff207fa000007fafff307fafff304eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c7
000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa00dc02aafff3
02aafff304e3008c04e3008c04e3008c04e3008e04e3008c06e6000006e6
0000075700000757000005c7009602aafff202aafff202aafff30239ffe5
0239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe80239ffde03c9
000003c9000002aa000002aa000002aafff304a8007604a8007604a80076
04a8007604f3007604f3007604a8007604a800760556fffd0556fffd06e6
ffd8074affdd061e000003b8fff403b8fff402aa002a06c2004e06c2004e
06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd106ceffdd066a
006202aa00bb02aa00dc0473000a05c7006105c70061071d007e05c70021
09cd0096078d000705c7002004e3002d08b000140400003004c100660000
ff530000ff530000ff530000ff530239001b0239ffa20473000005560012
06b3005403fe005706ab0091040c001f05d6ffe605d6ffe602aa008402aa
008402aa00c902aa00c902aa009102aa002a02aaffc502aaffc302aafff3
02aa00c902aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa
003a0000ff730000ff9d0000fec80000ff230000ff720000ff720000fee7
0000ff9d0000ff530000ff530000ff530556009504e3008b04b500000635
0000071d006104eb000f04730055049900910499001b0401008c03fa0018
02390093040f00490476008e039e000e05eb009b04eb008c04e300520473
003404f1005204f1005204f10021078d00540492004b04e3005304e30053
04e9008c04abfffb04abfffb03eb001504a8007604e300510624005104e0
00510473000b063900090400002203df002203f2004b04ec001403550088
0473001204d5008804e9008c060700760515001903e300000591000003a2
003203a2000003a30032035500320355003204030032037c003201720055
02de003203b00032031e003204220032037700320378003204260032037a
0032035b003203ac003203770032037b0032051400000305003203050032
0321003204b600320321003203210032030200320302003202cf003202cf
0032032000320121003202ca00320484003402f2003203480032030a0032
03490032034900320320003201bc000a02f20032034200320484003202e9
0000034c000a031b003202e900000343003203da00320308000001210032
0204003202f2003202e90000031b003202e900000342003203da00320308
000005ed00460a980046061300460689ffba0541ffba01e9001e04540010
0000ff0d0000ff350000fece0000feb70000fec90000ffc70000ff4f0000
ff9e0000fef002be006902be00690376000a0376000a03c0ffba039cffba
03c0ffba039cffba05c8003905920032061600820519004b05240041060f
008705580028068f002d04ac00550000fe3b0000fe660000fe680473fffc
0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba06d0002e0984
00230400000008000000040000000800000002ab00000200000001550000
0473000002390000019a000000ab00000000000005e5fff705c7006106aa
009105eb009b0760008d07a1005407a1005b05c7000005c7006104730014
04e3001104e3002c047300390400002205290042000001010000ff420000
fead0000ff3a0000ff5304f3000a05c7006905c7006105c70069048900a4
035500880000ff430000ff010000ffac0316007d0000ff370298ffba033d
001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000ff4a0000fe9e
0532003905320039022cffb6022cffb60532003c0532003c022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be
004f02be006902be00690376000a0376000a073200400732004004deffba
04deffba0454003403c000460454ffba02e2ffba0454003403c000460454
ffba02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f
0270ffba0298ffba0610002f0610002f0270ffba0298ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba02e2002102e200210352ffba0352ffba02e2
002102e200210352ffba0352ffba0454003e0454003e022cffba022cffba
0454003e0454003e022cffba022cffba0454003e0454003e022cffba022c
ffba039c0023039c002301e0ffba01e0ffba0376000a0376000a0376000a
0376000a073200400732004004deffba04deffba04e3ffc104e3005402aa
fff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473ffff02aaffda
0400002104e3008302f0003204dc004e06fb001f0239001b0239001b04e3
001404a8001404f8001404e3008704e3005402aa00180625005404730089
02390070071d007e04e3009104e3008b031d00660473003003baffc40473
000b0473000c040000220473004904e3005404e300540473004103fa004f
03fa0018053e0051023900930473003402aaffc404e3008d043600220321
0032030a0032030a00060348003202cf003201f0000a01f0000003200032
02f100320174000a01210032012100320174000a02760000018e00320150
0032024900320484003404840032035f0000035f003202fa003203480032
04030032030200320239000001bc000a0340000a035e003202ea003202ea
003202e9000002e4003202e4003203be0032030a003202e800320000fe92
0000fe920000ff730000fe9f02aa00c903050032030200320348003202ee
0000030200320639006205c700000556001e05c7006102aa004104eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e0239
ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239ffc40239ffc4
04a8007604a8007604a8007604a8007604a8007604a8007604a8007604a8
00760239ffc90239ffc90239ffc90239ffc904a8007604a8007604a80076
04a8007603e400220454001a03df003005c7fffd05c70016055600000556
009504730041047300230239ffa20633005904e3005b05c70000031d001b
0556fffd0473000e04730034047300550473003402390093048900110355
001b055600000473000c055600000473000c0503006f03fa004f059d0020
051500190000fec60000fed40000fec60000fed40000fe5f0000fe5f0000
ff720000ff730000fee7080000000401005d0473003404e300110239001b
04e300060556fffd05c700960473004902aaffcd05c7009604e3009205c7
00990473008904e30016040000220473002804540096037c008805b9004e
0000ff530000ffbc0000fefe0000fefe0000fea40000fea4023900930000
00000000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c0000006c0000006c000000f600000180000001800000
018000000180000001ce000001ce000001ce000002d200000354000004fa
000006520000076c0000076c0000076c00000828000008280000096e0000
09c8000009c8000009c8000009c8000009c8000009c8000009c800000b42
00000caa00000de400000de400000de400000e8000000fc600000fc60000
104e000010ec000010ec000011480000139c0000139c0000139c0000146c
0000146c000015d0000015d0000015d0000015d0000015d0000015d00000
15d0000016c6000016c6000016c6000016c6000016c6000016c6000016c6
000016c6000018d4000019d000001b0c00001bfc00001e0800001f080000
20e4000021e4000022860000228600002286000022f2000024a600002590
000026800000277c0000277c0000286000002ba600002cc600002dae0000
2f0200002f02000030d80000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600010000
0d3500f2003c008f000600020010002f0055000006fa02c2000500020000
000e00ae0000000300000000006a0000000000030000000700ba006a0001
000000000000003501240001000000000003001301590001000000000004
0013016c00010000000000060013017f0001000000000007005d01920003
000104090000006a01ef0003000104090001002602590003000104090002
000e027f00030001040900030026028d0003000104090004002602b30003
000104090006002602d9000300010409000700ba02ff00a9002000320030
0030003600200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea9203230303620546865204d6f6e6f74
79706520436f72706f726174696f6e2e20416c6c20526967687473205265
7365727665642e5351595154422b417269616c2d426f6c644d5453515951
54422b417269616c2d426f6c644d545351595154422b417269616c2d426f
6c644d54417269616c20697320612074726164656d61726b206f66205468
65204d6f6e6f7479706520436f72706f726174696f6e20696e2074686520
556e697465642053746174657320616e642f6f72206f7468657220636f75
6e74726965732e00a9002000320030003000360020005400680065002000
4d006f006e006f007400790070006500200043006f00720070006f007200
6100740069006f006e002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e00530051005900
5100540042002b0041007200690061006c002d0042006f006c0064004d00
540052006500670075006c00610072005300510059005100540042002b00
41007200690061006c002d0042006f006c0064004d005400530051005900
5100540042002b0041007200690061006c002d0042006f006c0064004d00
54005300510059005100540042002b0041007200690061006c002d004200
6f006c0064004d00540041007200690061006c0020006900730020006100
2000740072006100640065006d00610072006b0020006f00660020005400
6800650020004d006f006e006f007400790070006500200043006f007200
70006f0072006100740069006f006e00200069006e002000740068006500
200055006e00690074006500640020005300740061007400650073002000
61006e0064002f006f00720020006f007400680065007200200063006f00
75006e00740072006900650073002e0000>
<b15480410d03ac00af03ac0002001003ac002003ac00a003ac0003004003
acb3070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340
b803acb32d943280bc03ab005f0033ffc003abb2553340b803abb3404432
40b803abb3333b3240b803abb32f313240b803abb2083340b803abb30714
321f411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f
03ab00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40
b803a5b208330f411403a50001004003a500cf03a500ff03a50003002003
a500af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b20833
0f411b03a30001000f03a3001003a3008003a300af03a300cf03a3000500
6f03a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f
10410a039e007f039e0002039a000f0101001fffc00398b310143240b803
99b30f1332404110039500500395000200b0034d00c0034d0002006f0391
007f03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020
038b0080038b000300a0038b00010020038b0040038b0002ffc0038bb313
163240b80383b20f1132b9ffc0037bb2303432b9ffc0037bb31018325041
14037800010365036e0023001f037e036e001e001f0363036e001d001f03
620364000d001fffc00340b30f1032804110033f0001033f03150029001f
034103160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2
282a32410a034303180032001f030f030d0034001f03080307b2321f20bb
0340000100400388b3090b3240b80388b2101532bd038503070014001f03
800307b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400
a003540002001f036e0001009f036e00010040036eb2090b324111034503
1c0016001f036b031d0015001f0346031e0015001f03a703a10046001f03
9db3261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033e
b30d0e32c04109033e000100b0038e00c0038e0002ffc00390b326383200
412603280030032800020020037f0030037f00020010038a0030038a0050
038a006f038a007f038a009f038a000600000389003003890002002f037a
0070037700900377009f037a0004ffc00315b20f1032b9ffc00315b22428
32b903190318b2321f10bb031a0001ffc0031ab3090e3240b80318b21213
32b9ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb
032a00010040032cb3181b3240b80370b2090c32bd031703160032001fff
c00316b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001
000f031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f
02cb02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b309
0c3240b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02
c30030001f02da02b80032001f02d902b9003f001f02d802b80064001f02
b902b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ff
c002c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3
b2121632412502c202c1001c001f02d702c10024001f02c102c00022001f
02bf02c00018001f02c0027400c8001f02b50235003b001f02b40235003b
001f02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c8
1fb802afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a00
1f02adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a
02a1015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc20
1fb9029002904018374025402d40a6033025302d30a6032025202d203720
a6204110028e0005009f028b0001028b028b003700200289003002890040
028900900289b20437b041fd027400c0027400020080027400a002740002
00600274007002740002000002740010027400020080027400f002740002
003f0285004f028500020090027e0090027f009002800090028100040090
027a0090027b0090027c0090027d00040090027400900275009002770003
0070027e0070027f007002800070028100040070027a0070027b0070027c
0070027d000400700274007002750070027700030060027e0060027f0060
02800060028100040060027a0060027b0060027c0060027d000400600274
006002750060027700030050027e0050027f005002800050028100040050
027a0050027b0050027c0050027d00040050027400500275005002770003
0040027e0040027f004002800040028100040040027a0040027b0040027c
0040027d000400400274004002750040027700030030027e0030027f0030
02800030028100040030027a0030027b0030027c0030027d000400300274
003002750030027700030020027e0020027f002002800020028100040020
027a0020027b0020027c0020027d00040020027400200275002002770003
0010027e0010027f001002800010028100040010027a0010027b0010027c
0010027d0004001002740010027500100277000300e0027e00e0027f00e0
028000e00281000400e0027a00e0027b00e0027c00e0027d000400e00274
00e0027500e00277b103d041c5027e00d0027f00d0028000d00281000400
d0027a00d0027b00d0027c00d0027d000400d0027400d0027500d0027700
030030027400400274000200c0027e00c0027f00c0028000c00281000400
c0027a00c0027b00c0027c00c0027d000400c0027400c0027500c0027700
0300b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b002
7c00b0027d000400b0027400b0027500b00277000300a0027e00a0027f00
a0028000a00281000400a0027a00a0027b00a0027c00a0027d000400a002
7400a0027500a0027700030090027e0090027f0090028000900281000400
90027a0090027b0090027c0090027d000400900274009002750090027700
030020027e0020027f002002800020028100040020027a0020027b002002
7c0020027d00040020027400200275002002770003028101580801001f02
8001290801001f027f00ec0801001f027e00d80801001f027d00b1080100
1f027c00a60801001f027b00820801001f027a00370801001f0277002608
01001f027500200801001f0274001f0801b21f370f41160235004f023500
5f0235006f0235009f023500af023500bf0235000700af023500cf023500
df023500ff02354022040f074f079f07af07bf0705af07e007020f064f06
9f06af06bf0605af06e0060220411b020d0001005f02350001008f023500
01007f023500ef02350002002f0235003f02350002003f0234004f023400
0202350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a014109
02470104001e001f022000370201001f0158400c263e1fd8263e1f372627
3e1fb8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26
361fb126361fa626361f8226361f3726361f3226361f2d26361f2526361f
1f26361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f2126
3e1f20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bc
b227281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b600
270101001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb2
1fbb1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f
0401001f0154001f0401001f0153001f0201001f0152b21f561fb80151b2
1f291fb8012bb227261f410d012a00270125001f0129015800e4001f0125
001f0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d0108
00270801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb9
01580401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf
25b80156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401
001f00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db808
01b51f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de4
1f731f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb6
1f5025891f491fb80125b21f4725b80401400b1f461f791f401f271f3920
bc02ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f
341f2a25b80801b21f5537b80111402a07f00790075b0742073b07230722
071e071d071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807
ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ff
b101018e851bb0124358b10100858d1bb900010119858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1d
b0964b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d
4544b9020e020d45445958b90470020f455258b9020f04704459594bb0e4
53205c58b90020020e4544b90027020e45445958b908420020455258b900
2008424459594bb8012553205c58b90026020f4544b90021020f45445958
b90a0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b1
202045445958b9250000d8455258b900d825004459594bb8040153205c58
b9015800264544b1262645445958b923200158455258b901582320445959
4bb02953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f
010d4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f45
5258b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958
b91428001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec345
6523456023456560234560b08b766818b080622020b17e754565234520b0
03266062636820b003266165b075236544b07e234420b131c34565234520
b003266062636820b003266165b0c3236544b0312344b100c3455458b1c3
406544b23140314523614459b33f3c5841456523456023456560234560b0
89766818b080622020b1583c4565234520b003266062636820b003266165
b03c236544b058234420b13f414565234520b003266062636820b0032661
65b041236544b03f2344b10041455458b141406544b23f403f4523614459
45695342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
2b2b2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b0406144
59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b04061
4418004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b
2b2b2b007373737373737373737373737373737373737373737374747474
74747474747474747474747474747474747575757374757575752b730000
4bb02a534bb036515a58b1070745b040604459004bb02e534bb036515a58
b1030345b0406044b1090945b8ffc06044592b4569440174007373732b45
69442b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326f
bd0277007f02770002ffc00277b22f3132b9ffc00277b322253240b80274
b32f353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ff
c0b3251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ff
c0b6a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b
737459002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b59
2b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b
2b2b73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b
752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b
2b732b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74
752b000000>
[12887 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 462 19 <00020056ffe7040e05c0000e00200093404b780a880aa701aa07aa09a70e
b709c8090856115916591a561f67116816681a671f08390239063609360d
490249064509460da709cb02c906c409c40dd902db06d409d40d11101820
180218b8ffc0402512163418a6080d1f0f2f0f020f401216340fa600051d
d84f0401041a2214d80b1921d3c2182b4e10f44ded4e10f6714ded003fed
2b713fed2b713130015d005d5d0132171611100706232200111037361722
060706111016163332363736111026260232d5788f9077d5d6fefa9077d5
3350161d344f333350161d344f05c098b4fe5ffe60b696014901a6019eb6
96e941546dfefefefec14041546c01020102c141>KIAAAA+Arial-BoldMT AddT42Char 
2 5020 51 <00020095000004f805ba000f001b007740250605b914b918034705016705
d605021211250d0e0e001b10250201020f00081627af070107b8ffc0b309
0b3407b8028c40161f1d301d601d701d801d051d100f2001200030000200
b8028bb31c3153182b4e10f45d3c4dfd3c4d1071f62b714ded003f3c3f3c
fd3c12392f3cfd3c3130005d71015d331121201716161514060607062323
1902333236363534262726239501db010e527eaa62974e6ac9c1a2af7643
5e4835a005ba1621ddaf87b8691115fdd704c2fe602e624150680d0a>KIAAAA+Arial-BoldMT AddT42Char 
2 5584 60 <0001fffd0000055805ba000800c5b90004ffbe403e0b35c00a0104030405
030704050403050104030405032002011402020104050403052006071406
0607010407030608070401030203090400050a08015607b80267400b0606
05050303020200080abb0217000800060217b5070708200002b80217b701
01200030000200b80266b3095e63182b10f65d3c1910e41810fd3c1910e4
1810e4003f3f3c103c103c10f6e401111239123911390011173911121739
87052e2b087d10c487052e182b087d10c40708103c870810c43130015d00
2b2111012101012101110216fde7015b015901520155fde502690351fdbc
0244fcadfd99>KIAAAA+Arial-BoldMT AddT42Char 
2 5830 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>KIAAAA+Arial-BoldMT AddT42Char 
2 6356 69 <00020087ffe8049405ba000f001c009db90012fff840310b39371b471b02
125606560a56165618591cf7070635043b0d3b13351b45044b0d4b13451b
940799090a0c0e010201001ab80274b2050714b8027440130b0b0f000a17
21081a701e011e10290203260fb80129400c01700080000200191d3f4118
2b4e10f4713c4dedfd3ce64e1071f64ded003f3c3fed3fed3f3c31300071
5d015d4358400b6606660a66166618691c055d59005d2b33112111363332
1211100023222627151314171633323635342623220687011982b2c2fefe
fdb95bb140123449795d838467658605bafdf094fee7fef9fef0feda5b59
9c022aa54f709fabb6a19d00>KIAAAA+Arial-BoldMT AddT42Char 
2 6608 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>KIAAAA+Arial-BoldMT AddT42Char 
2 7164 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>KIAAAA+Arial-BoldMT AddT42Char 
2 8676 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>KIAAAA+Arial-BoldMT AddT42Char 
2 8838 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>KIAAAA+Arial-BoldMT AddT42Char 
2 9382 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>KIAAAA+Arial-BoldMT AddT42Char 
2 9616 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>KIAAAA+Arial-BoldMT AddT42Char 
2 10108 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>KIAAAA+Arial-BoldMT AddT42Char 
2 10336 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>KIAAAA+Arial-BoldMT AddT42Char 
2 11174 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>KIAAAA+Arial-BoldMT AddT42Char 
2 11462 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>KIAAAA+Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>KIAAAA+Arial-BoldMT AddT42Char 
KIAAAA+Arial-BoldMT /CharStrings get begin
/zero 19 def
/P 51 def
/Y 60 def
/a 68 def
/b 69 def
/c 70 def
/e 72 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
end
KIAAAA+Arial-BoldMT /Encoding get
dup 48 /zero put
dup 80 /P put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/UUMMKF+Arial-BoldMT /KIAAAA+Arial-BoldMT findfont ct_VMDictPut/UUMMKF+Arial-BoldMT*1 [48{/.notdef}rp /zero 31{/.notdef}rp /P 8{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]UUMMKF+Arial-BoldMT nfUUMMKF+Arial-BoldMT*1 [6.9985 0 0 -6.9985 0 0 ]msf126.582 233.856 mo(0)shUUMMKE+ArialMT*1 [9 0 0 -9 0 0 ]msf108.13 209.288 mo(5000)[5.004 5.004 5.004 0 ]xsh104.314 184.718 mo(10000)[5.004 5.004 5.004 5.004 0 ]xsh104.314 160.148 mo(15000)[5.004 5.004 5.004 5.004 0 ]xsh104.314 135.578 mo(20000)[5.004 5.004 5.004 5.004 0 ]xsh104.314 111.008 mo(25000)[5.004 5.004 5.004 5.004 0 ]xshUUMMKF+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf195.856 269.812 mo(Year)[7.34169 6.672 6.672 0 ]xshUUMMKF+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf100.319 191.547 mo(Publications)[-8.00409 -7.33191 -7.33191 -3.336 -3.336 -6.672 -6.672 -3.99591 -3.336 -7.33191 -7.33191 0 ]ysh348.859 231.422 mo
354.13 231.422 li
354.13 230.646 li
348.859 230.646 li
cp
.323613 .26157 .24445 0 cmyk
f
356.766 229.406 mo
362.037 229.406 li
362.037 231.422 li
356.766 231.422 li
cp
f
364.672 229.639 mo
369.943 229.639 li
369.943 231.422 li
364.672 231.422 li
cp
f
372.579 226.848 mo
377.85 226.848 li
377.85 231.421 li
372.579 231.421 li
cp
f
380.486 221.577 mo
385.757 221.577 li
385.757 231.421 li
380.486 231.421 li
cp
f
388.392 220.027 mo
393.663 220.027 li
393.663 231.422 li
388.392 231.422 li
cp
f
396.298 209.097 mo
401.569 209.097 li
401.569 231.421 li
396.298 231.421 li
cp
f
404.205 199.253 mo
409.476 199.253 li
409.476 231.421 li
404.205 231.421 li
cp
f
412.111 183.13 mo
417.382 183.13 li
417.382 231.421 li
412.111 231.421 li
cp
f
420.017 180.34 mo
425.288 180.34 li
425.288 231.422 li
420.017 231.422 li
cp
f
427.924 176.077 mo
433.195 176.077 li
433.195 231.422 li
427.924 231.422 li
cp
f
435.83 169.643 mo
441.101 169.643 li
441.101 231.422 li
435.83 231.422 li
cp
f
443.737 140.42 mo
449.008 140.42 li
449.008 231.421 li
443.737 231.421 li
cp
f
451.643 133.134 mo
456.914 133.134 li
456.914 231.422 li
451.643 231.422 li
cp
f
459.549 135.924 mo
464.82 135.924 li
464.82 231.421 li
459.549 231.421 li
cp
f
467.455 144.296 mo
472.726 144.296 li
472.726 231.421 li
467.455 231.421 li
cp
f
475.362 137.397 mo
480.633 137.397 li
480.633 231.421 li
475.362 231.421 li
cp
f
483.269 125.692 mo
488.54 125.692 li
488.54 231.421 li
483.269 231.421 li
cp
f
2.157 lw
0 lc
347.542 231.421 mo
489.935 231.421 li
.75021 .679683 .670222 .90164 cmyk
@
2 lc
351.495 231.421 mo
351.495 234.392 li
@
359.402 231.421 mo
359.402 234.392 li
@
367.308 231.421 mo
367.308 234.392 li
@
375.214 231.421 mo
375.214 234.392 li
@
383.12 231.421 mo
383.12 234.392 li
@
391.027 231.421 mo
391.027 234.392 li
@
398.934 231.421 mo
398.934 234.392 li
@
406.84 231.421 mo
406.84 234.392 li
@
414.746 231.421 mo
414.746 234.392 li
@
422.653 231.421 mo
422.653 234.392 li
@
430.559 231.421 mo
430.559 234.392 li
@
438.465 231.421 mo
438.465 234.392 li
@
446.372 231.421 mo
446.372 234.392 li
@
454.279 231.421 mo
454.279 234.392 li
@
462.185 231.421 mo
462.185 234.392 li
@
470.091 231.421 mo
470.091 234.392 li
@
477.997 231.421 mo
477.997 234.392 li
@
485.904 231.421 mo
485.904 234.392 li
@
UUMMKE+ArialMT*1 [0 -9 -9 0 0 0 ]msf353.963 255.645 mo(1997)[-5.00403 -5.00397 -5.00397 0 ]ysh361.874 255.645 mo(1998)[-5.00403 -5.00397 -5.00397 0 ]ysh369.776 255.645 mo(1999)[-5.00403 -5.00397 -5.00397 0 ]ysh377.678 255.645 mo(2000)[-5.00403 -5.00397 -5.00397 0 ]ysh385.58 255.645 mo(2001)[-5.00403 -5.00397 -5.00397 0 ]ysh393.482 255.645 mo(2002)[-5.00403 -5.00397 -5.00397 0 ]ysh401.393 255.645 mo(2003)[-5.00403 -5.00397 -5.00397 0 ]ysh409.295 255.645 mo(2004)[-5.00403 -5.00397 -5.00397 0 ]ysh417.206 255.645 mo(2005)[-5.00403 -5.00397 -5.00397 0 ]ysh425.108 255.645 mo(2006)[-5.00403 -5.00397 -5.00397 0 ]ysh433.019 255.645 mo(2007)[-5.00403 -5.00397 -5.00397 0 ]ysh440.921 255.645 mo(2008)[-5.00403 -5.00397 -5.00397 0 ]ysh448.823 255.645 mo(2009)[-5.00403 -5.00397 -5.00397 0 ]ysh456.734 255.645 mo(2010)[-5.00403 -5.00397 -5.00397 0 ]ysh464.645 255.645 mo(2011)[-5.00403 -5.00397 -5.00397 0 ]ysh472.547 255.645 mo(2012)[-5.00403 -5.00397 -5.00397 0 ]ysh480.449 255.645 mo(2013)[-5.00403 -5.00397 -5.00397 0 ]ysh488.351 255.645 mo(2014)[-5.00403 -5.00397 -5.00397 0 ]ysh0 lc
347.542 231.421 mo
347.542 106.701 li
@
2 lc
344.571 231.421 mo
347.543 231.421 li
@
344.571 189.848 mo
347.543 189.848 li
@
344.571 148.275 mo
347.543 148.275 li
@
344.571 106.701 mo
347.543 106.701 li
@
%ADOBeginSubsetFont: KIAAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMKF+Arial-BoldMT gcheck setglobal} if

2 0 3 <> UUMMKF+Arial-BoldMT AddT42Char 
2 2882 37 <000300960000056205ba00130020002c00d8403f772a01680e782ae604f6
04040921150906282c212516121f154f15023015af150215151423222512
13082014250100021b277006800602064b2827af0c010cb8ffc0b3090b34
0cb8028c4021302e402e502e602e702e802e902ea02e08202e302e022e14
222000201330130213b8028bb32d3153182b4e10f45d3c4dfd3c4d105d71
f62b714dedf45ded003f3cfd3c3f3cfd3c11392f5d71435c58b90015ff80
b21d3915b8ffc0b21a3915b8ff80b113392b2b2b593cfd3c011112390011
12393130014bb00b534bb00f515a58b10a203859015d005d1321321e0215
140607161615140606070605210111333237363635342627262303112132
373636353426262396024aaeab875a6f5f86905da1764afee5fe0d0128c2
ad2a4c574b4a2cd1aa0112a02b42534079ca05ba1d5c995f67ac2b27bc7f
64bd710d080204c6fead0509574744550905fdb9fe78090c5d4e425c2a00
>UUMMKF+Arial-BoldMT AddT42Char 
2 3242 38 <00010061ffe7055e05d3001a00d6404e8609891489169f009806c709d403
d40bf503092509280c280d29142916750575098605080713071717131717
29022a03250507280599059709c903c50b053f014f01020152100001e000
f0000200b8ffc0b311183400b8ffc0b30a0d3400b8015a4017182d04080e
400e12340e4b5f0f014f0f010f401518340fb801284022122d0a030fef0e
5600ef00014f0102011a301c011c1527a007010f071f0730070307b8028c
b31b7e53182b4e10f45d714ded4e105df65d4dedf4ed003ffdf42b5d71e4
2b3ffdf42b2b5d71e45d3130005d015d5d5d010506042320001110002120
171617052626232206111016333236043f011f42fecdecfedcfe88017a01
34010da86432fedb1aa576a3cbc8a076aa021b5bf0e9018f015a016e0195
9f5eb0467284eafefafeeaec9600>UUMMKF+Arial-BoldMT AddT42Char 
2 7944 74 <00020054fe510460043e0023002f014e4062771d871d02120c0d7031860d
8031042001230223033001330233034001430243035b0f59145925562956
2b592f6b0ff811f813123b0d33163b28332c4b0d44164b28442cf00cfd17
0a8e0c010c0b0c0d0b2a0c0d270e1617152d0d0c171604182401b8ffc0b5
191b34013300b8ffc0b30e113e00b8ffc0b30b0c3e00b8ffc0b3282a3400
b8ffc0b323253400b8ffc0b331343400b8ffc04009151b34600001005f05
b80274b21f0f27b80274b20e0a2db80274400b15071819062a290b261a18
b80129400919191a1a8f31013101b801b8400a00332421121930583c182b
4e10f44dedf4ed4e1071f63c4d10ed10fde4003f3c3fed3fed3ffdf4722b
2b2b2b2b2bb10602435458b90000ffc0b30e113400b8ffc0b2090c342b2b
59e42b01111217390011123939111239390708103c313000715d015d7143
58400d690f691469256729662b692f065d59005d17051617163332373637
3635350623222726351000333217352111140e0223202635341314163332
36353426232206790141081d28566e3725130d7ec0d67d620101bfc58001
073e70bb8ffef2e2fc8360678e88686583462738151e211631235e9bacb5
8fd5010b011aad95fc47bcba6a3cb98e0e0283a99da19ea5a09d>UUMMKF+Arial-BoldMT AddT42Char 
2 8946 80 <0001007e00000698043e0027013bb90029ffc0405d110a3f0506060c1506
160c340334083418342344024508451844230c20032f295309602980299f
29a406a707a60cb506b50cb029d029e0290e00292f2950299f29bf29df29
0629401a1c343f2950298029d029e02905072104071a1d16b80274b20a07
21b80274401e0407101111271b1c1c26270a0100060f10261211405a3560
11016f110111b80246400f1a1b261d1c405a356f1c01601c011cb80246b4
2526262701b80129b2000027b8ffc0b30f093f27b8ffc04036110a3f2740
5a352740413527403c35274024273427403a3d342f27cf27df27030f271f
27802703002720273027ff2704271928e33c182b4e10f45d71722b2b2b2b
2b2b2b3c4d10ed10fd3cf65d712b3cfd3cf6715d2b3cfd3c003f3c3f3c3c
103c103c103c3fed3fed0111123900111239313001722b715d005d012b13
211536333216173636333216171615112111342726232206061511211134
2626232206061511217e01038bc066963046a25c75a2281dfee71d27513b
682efee71e3f3641682dfee7042691a9545555545f5c4498fd59025f9e2e
3c488b96fe0202469b5a2c468499fdfc>UUMMKF+Arial-BoldMT AddT42Char 
2 9856 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>UUMMKF+Arial-BoldMT AddT42Char 
2 12504 92 <0001000efe510452042600130134b41228050113b8ffe040180c0f340816
0d0f3407160d0f3406160d0f3405160c0f3402b8ffc0401f1a3a34050606
040d0b0e061002001306041302040303010100061360100110b801af4012
0b0f0d2f0e280020153015601503f0150115b8ffc0b322263415b8ffc040
121c1e341517171a043903401819347f030103b80127400902401819347f
020102b801274012013900401c36342000300002001914c4a0182b4e10f4
5d2b4dfd19f45d2bf45d2b18fd4e456544e62b2b71724d10f4e4003fed5d
2f3f3c103c103c0112391139001112391239391139070e103c3130002b01
2b2b2b2b2b5d4bb010534bb03a515a58b2041000bafff00001fff0b10310
013838383859435c58b90005ffe8400e0d113f131013193f131012183f05
b8fff0b313193f05b8fff0b212183f012b2b2b2b2b59132113132101070e
032322272716333236370e012bfef80123fe89432543577f50514e194235
625e190426fd0e02f2fc02b95d623d2211dc0d735900>UUMMKF+Arial-BoldMT AddT42Char 
UUMMKF+Arial-BoldMT /CharStrings get begin
/space 3 def
/B 37 def
/C 38 def
/g 74 def
/m 80 def
/p 83 def
/y 92 def
end
UUMMKF+Arial-BoldMT /Encoding get
dup 32 /space put
dup 66 /B put
dup 67 /C put
dup 103 /g put
dup 109 /m put
dup 112 /p put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMKF+Arial-BoldMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero 17{/.notdef}rp /B /C 12{/.notdef}rp /P 8{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /.notdef /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]UUMMKF+Arial-BoldMT nfUUMMKF+Arial-BoldMT*1 [7.1054 0 0 -7.1054 0 0 ]msf339.947 233.888 mo(0)shUUMMKE+ArialMT*1 [9 0 0 -9 0 0 ]msf322.319 192.315 mo(2000)[5.004 5.004 5.004 0 ]xsh322.319 150.744 mo(4000)[5.004 5.004 5.004 0 ]xsh322.319 109.173 mo(6000)[5.004 5.004 5.004 0 ]xshUUMMKF+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf410.277 269.225 mo(Year)[7.34167 6.672 6.672 0 ]xshUUMMKF+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf317.111 190.932 mo(Publications)[-8.00409 -7.33191 -7.33191 -3.336 -3.336 -6.672 -6.672 -3.99591 -3.336 -7.33191 -7.33191 0 ]yshUUMMKF+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf186.107 92.1219 mo(Biology)[8.664 3.336 7.33191 3.336 7.33191 7.33191 0 ]xsh172.439 106.522 mo(Publications)[8.00409 7.33191 7.33191 3.336 3.336 6.672 6.672 3.99591 3.336 7.33191 7.33191 0 ]xsh358.379 92.1219 mo(Computational Biology)[8.664 7.33191 10.6681 7.33191 7.33191 3.99591 6.672 3.99591 3.336 7.33191 7.33191 6.672 3.336 3.336 8.664 3.336 7.33191 3.336 7.33191 7.33191 0 ]xsh388.367 106.522 mo(Publications)[8.00409 7.33191 7.33191 3.336 3.336 6.672 6.672 3.99591 3.336 7.33191 7.33191 0 ]xsh138.193 469.711 mo
177.635 469.711 li
177.635 381.46 li
138.193 381.46 li
cp
f
gsave
128.332 470.204 mo
305.819 470.204 li
305.819 351.385 li
128.332 351.385 li
cp
clp
1.437 lw
0 lc
1 lj
138.193 469.711 mo
138.193 381.46 li
177.634 381.46 li
177.634 469.711 li
@
grestore
1.437 lw
1 lc
157.913 375.84 mo
157.913 381.46 li
148.053 375.84 mo
167.773 375.84 li
@
197.356 469.711 mo
236.798 469.711 li
236.798 384.714 li
197.356 384.714 li
cp
0 0 0 0 cmyk
f
gsave
128.332 470.204 mo
305.819 470.204 li
305.819 351.385 li
128.332 351.385 li
cp
clp
0 lc
1 lj
197.356 469.711 mo
197.356 384.714 li
236.797 384.714 li
236.797 469.711 li
.75021 .679683 .670222 .90164 cmyk
@
grestore
217.076 379.981 mo
217.076 384.714 li
207.216 379.981 mo
226.936 379.981 li
.75021 .679683 .670222 .90164 cmyk
@
256.518 469.711 mo
295.96 469.711 li
295.96 379.488 li
256.518 379.488 li
cp
.323613 .26157 .24445 0 cmyk
f
276.239 372.98 mo
276.239 379.488 li
266.379 372.98 mo
286.099 372.98 li
.75021 .679683 .670222 .90164 cmyk
@
2.156 lw
0 lc
128.332 469.711 mo
305.819 469.711 li
@
2 lc
157.913 469.711 mo
157.913 473.491 li
@
217.076 469.711 mo
217.076 473.491 li
@
276.239 469.711 mo
276.239 473.491 li
@
%ADOBeginSubsetFont: IIAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMKE+ArialMT gcheck setglobal} if

2 0 3 <> UUMMKE+ArialMT AddT42Char 
2 102 18 <00010000ffe7023905d300030053b90003ffdeb2143902b8ffde40201439
97030102039f03af0302037600011400000102010003000a03e80002e801
b801a9b5000004b37a182b103c10f4ed10ed003f3c3f3c87052e2b5d7d10
c43130015d2b2b1501330101a990fe581905ecfa1400>UUMMKE+ArialMT AddT42Char 
2 4566 36 <0002fffd0000055905ba0007000e0167b6010e0f10025502b8fff2b40f10
025502b8fff8b40d0d065502b8fff440590c0c0655090c0c0c0655050c0c
0c06552f10301067086809601088039010c905c606c010f0100b08055901
56025010680bb010f30cf30df30e09040c040d040e030b0a090504040c0d
0e080607070c09050408060c07010000b8fff8400f0c0c02550020070c14
07070c020303b8fff840150c0c02550320040c1404040c091e0505081e06
0306b80270400900080ce94002010202ba010b0001010b40120c20006507
03525004cf04df040390040104b80101400b500cc007df0c03900c010cb8
010140100f07cf07027f0780070207930fd6d7182b10f45d7119f45d71f4
5d7118ed10ed1a1910eded00183f3c1aed3fe43c10ed3c10ed87052e2b2b
7d10c4872e182b2b7d10c401111239391139398710c4c40ec4c4870510c4
c40ec4c43130014bb00b534bb01e515a58b4040f030807bafff00000fff8
38383838590172715d2b2b2b2b2b2b230133012303210313210326270607
030233d10258ddabfd9ba1d901f19946221c3305bafa4601bcfe44025a01
96b9778d8b00>UUMMKE+ArialMT AddT42Char 
2 5896 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>UUMMKE+ArialMT AddT42Char 
2 6124 46 <000100960000055205ba000b01fe401e0322373908093a270a3506360a47
0a57038603d70307760ad903d90a0306b8fff440180d0d025528058c048a
05aa04ea08050a04013504d6040209b8ffe04009122134032012213403b8
ffdeb30c391209b8ffe0b312213408b8ffe0b312213404b8ffe0b31d2134
04b8ffc0b312163408b8ffde403d1939080925253d080919193d06060709
0a09080a0503040420050a1405050a090808200706140707060a0a000502
040102070b0800080a03020b010004b8023a400f300501a005b005c005e0
0504054a08b8023a400b30070120078007b0070307b80286400c0b202000
0100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffab4
0c0c025500b8fffab40c0c065500b8fff2400a0d0d0655005d0c3ba8182b
10f42b2b2b2b2b2b5dedfd5d71edf45d71ed103c103c3c3c003f3c3c3c3f
3c3c3c12392f87052e2b0e7d10c487052e182b047d10c40708103c083c01
4bb018534bb01b515a58b90004ffd83859b10602435458b90004fff0b30c
113403b8fff040170c113406100e113408100e103409100e11340a100d10
34002b2b2b2b2b2b593130012b2b2b2b2b2b2b435c58401109221939082c
1939042c193904221b3905b8ffdeb616390422163906b8ffde400b123908
2214390440143908b8ffdeb52539044015392b2b2b2b2b2b2b2b2b2b2b59
002b2b2b0171725d2b00715d2b2b33113311012101012101071196c202d8
0107fd990282ff00fdf6f005bafd2902d7fdaefc9802e6eafe04>UUMMKE+ArialMT AddT42Char 
2 6690 49 <0001009c0000051f05ba0009017db1120bb8ffc0400a13153408180c1602
5503b8ffe840210c16025508020303200708140707080207030308090402
02090708040320060605b8ffecb40f0f025505b8fff2400b0d0d02550512
0c0c025505b8fff7401a0b0b0655055d200b01200b500b600b700b800b05
0b0809200100b8ffc0400d13153420000100201010025500b8fff6b40f0f
025500b8fff6b40d0d025500b8fffa400b0c0c025500040b0b065500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b
2b2b5d2b3cfd3c105d71f42b2b2b2b3c10fd3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59331133011133112301119cc70302bac7fcfe05bafb81047ffa
460480fb8000>UUMMKE+ArialMT AddT42Char 
2 10026 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>UUMMKE+ArialMT AddT42Char 
2 10462 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>UUMMKE+ArialMT AddT42Char 
2 10908 73 <000100130000028005d30017010d401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040281a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff134004172504000302920101
00b8ffc0b331383400b8ffc0402b1c1f3490000119400f0f025519400d0e
025500141010025500280f0f025500220e0e0255002c0d0d025500b8fff2
400b0c0c025500140b0b065500b8ffeab41010065500b8ffe6b40f0f0655
00b8fffab70c0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b
2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced10eded5d003f3f3c3c3cfd3c
3fed391139313043794014101106090706080602061009121b0011060f1b
012b012b2a8181012b715d00723311233533353437363633321707262322
06151533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b3446
57129d0a4660628cfc66>UUMMKE+ArialMT AddT42Char 
2 12724 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>UUMMKE+ArialMT AddT42Char 
2 13178 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>UUMMKE+ArialMT AddT42Char 
2 14080 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>UUMMKE+ArialMT AddT42Char 
3 0 90 <00010006000005b704260012041db10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f5358b40d200c2002bcffe0
0001ffe0000effd0b400300f2012b8ffe0013838383838383838594bb034
5358b90008ffd0b10730013838594bb021534bb033515a58b90008ffe0b1
0720013838594bb012534bb01e515a58b9000effd0b60f200d200c2008b8
ffd0b2073012b8ffe0b2003802baffe00001ffe001383838383838383838
38594bb012534bb017515a58b90011ffe0b30a2004200038383859593130
01435c58b9000effd4b61239002c123900b8ffd4b113392b2b2b592b2b2b
2b2b5d71722b2b2b002b2b2b715d015d5921013313173637133313173713
330123032703014bfebbbaa93f0433a9b99f353db6affeb4bba929d70426
fd9be411ca026efd98cbcd0266fbda027cb5fccf>UUMMKE+ArialMT AddT42Char 
UUMMKE+ArialMT /CharStrings get begin
/space 3 def
/slash 18 def
/A 36 def
/I 44 def
/K 46 def
/N 49 def
/d 71 def
/e 72 def
/f 73 def
/n 81 def
/o 82 def
/r 85 def
/w 90 def
end
UUMMKE+ArialMT /Encoding get
dup 32 /space put
dup 47 /slash put
dup 65 /A put
dup 73 /I put
dup 75 /K put
dup 78 /N put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMKE+ArialMT*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A 7{/.notdef}rp /I /.notdef /K 2{/.notdef}rp /N 21{/.notdef}rp /d /e /f 7{/.notdef}rp /n /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]UUMMKE+ArialMT nfUUMMKE+ArialMT*1 [9 0 0 -9 0 0 ]msf140.169 485.618 mo(InferredKnownKnown )[2.502 5.004 2.502 5.004 2.99693 2.99693 5.004 36.342 6.00305 5.004 5.004 6.49802 36.774 6.00305 5.00403 5.00397 6.49802 5.004 0 ]xsh262.308 496.418 mo(w/o NA)[6.49799 2.50201 5.004 2.50198 6.49802 0 ]xsh0 lc
128.332 469.711 mo
128.332 351.386 li
@
2 lc
124.552 469.711 mo
128.332 469.711 li
@
124.552 446.046 mo
128.332 446.046 li
@
124.552 422.381 mo
128.332 422.381 li
@
124.552 398.716 mo
128.332 398.716 li
@
124.552 375.051 mo
128.332 375.051 li
@
124.552 351.385 mo
128.332 351.385 li
@
%ADOBeginSubsetFont: IIAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMKE+ArialMT gcheck setglobal} if
2 42 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>UUMMKE+ArialMT AddT42Char 
UUMMKE+ArialMT /CharStrings get begin
/period 17 def
end
UUMMKE+ArialMT /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMKE+ArialMT*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /five /six /seven /eight /nine 7{/.notdef}rp /A 7{/.notdef}rp /I /.notdef /K 2{/.notdef}rp /N 21{/.notdef}rp /d /e /f 7{/.notdef}rp /n /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]UUMMKE+ArialMT nfUUMMKE+ArialMT*1 [9 0 0 -9 0 0 ]msf109.274 472.85 mo(0.0)[5.004 2.502 0 ]xsh109.274 449.189 mo(0.1)[5.004 2.502 0 ]xsh109.274 425.519 mo(0.2)[5.004 2.502 0 ]xsh109.274 401.858 mo(0.3)[5.004 2.502 0 ]xsh109.274 378.197 mo(0.4)[5.004 2.502 0 ]xsh109.274 354.527 mo(0.5)[5.004 2.502 0 ]xsh%ADOBeginSubsetFont: KIAAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMKF+Arial-BoldMT gcheck setglobal} if
2 108 11 <0001006bfe51026805d300100046400e280fa70302080901000910001208
bd012200090001012200000294400a09f30c9b200430040204b80296b311
a56b182b10f65dedfdf4ed10ed003f3f103c103c3130015d012326023510
13363733020215141217160265c199a0635684c089673d3523fe51e701f2
e901210102e0bdfed1fe57eea4fea89b6600>UUMMKF+Arial-BoldMT AddT42Char 
2 246 12 <00010043fe51024005d30010004940182702270a6702670a9702a702a80e
07090810000810001210bd012200000009012200000294b408f3059b0cb8
0296b3126a43182b10f6edfde4ed10ed003f3f103c103c3130015d133e03
3534020333161215140702034553443a1c6689bf97a7424bacfe51b2bef8
df75ee01a9012fd7fe1ef8d1effef4fefb00>UUMMKF+Arial-BoldMT AddT42Char 
2 2504 36 <00020000000005bf05ba0007000a0141b90007ffd8400937393406283739
3407b8ffc04009283534064028353407b8ffd84050212734062821273429
002a042a05280a2f0c380037053f0c6a006a02650366056808670ae8030f
4a060102080901030a090904070901012000071400000706090404200506
14050506080a401a1d3e0ab8ffc0400b1a1d340a25020303060409b801bc
400e0607020504040100080c17171a00b80261400b1f0101200130018001
0301b8022440091f0901300980090209ba02240004026140092005010519
0b5e63182b4e10f45d4dfd19f65d71f45d7118fd4e456544e6003f3c3c10
3c3f3c4ded1112392f3cfd2b2b3c87052e2b877dc4872e182b877dc40710
3c3c87c4c4b10602435458b40934090d34002b593130014bb00b534bb01e
515a58b90003fffeb208040abafffe0007fffcb106043838383838590171
5d2b2b2b2b2b2b212103210321012113030305bffebe80fdb679fec6023b
01392acac6014dfeb305bafc8a0220fde000>UUMMKF+Arial-BoldMT AddT42Char 
2 3556 41 <000100970000048405ba00090072403f0805040605250720083008bf08df
08042f08900802080800030425020102090008073f064f06020652030002
01021a200b300b020b04092001200030000200b8028bb30a3153182b4e10
f45d3c4dfd3c4e105df65d3c4df45d3c003f3c3f3cfd3c12392f5d713cfd
3c0305103c3c3130331121152111211521119703edfd3b0264fd9c05baf8
fea5f8fd9100>UUMMKF+Arial-BoldMT AddT42Char 
2 4174 45 <00010023ffe703cd05ba0012005a40246908a70d0254096609690d691069
117a108910070a480b810f2d07090100020012200102b8028b4012701401
301401140bef1f0a010a1913fd75182b4e10f45d4ded4d107171f63c4dfd
3c003f3c3ffdf4e43130005d015d01211114070606232226272516171633
32363502a60127202be2b9d9ea01011705203062635205bafc60b662809b
f3eb207e344f71b2>UUMMKF+Arial-BoldMT AddT42Char 
2 4424 48 <000100910000061905ba000c0218400b0b032608260b0304030103b8ff80
40091c3a340a203a3b3409b8ffe0b33a3b3409b8ffe040a41c2e340a201c
2e340609080ae309ec0a0404090a0a13021c0410091f0a23022c0420092f
0a6702680465096a0a77027804a409aa0ab509ba0af609fa0a169f049009
9f0ac609c90ad702d804d609d90ae702e804e509ea0a0d7709780a83028c
0483098c0a900207580b65026a046709680a760279040744024b0444094b
0a57085709580a07180a2f0e34023a0434093b0a3f0e0703020c04060909
0a15021a04170907b10602435458401f0204030a09050c070732060e0c32
0000031003020850080d340b50080d3403b8ff80400e0b0d3408400e2734
0b400e273403b8ff9c40100e2734030b08030100040102070a0008003f3c
3c3f3c111217392b2b2b2b2b2b5d012fed10d4ed111217391bb8ff3b402d
030a09200408090932030414030304020b0a0a320302140303020b080303
0c0402020c0a0a090907081f0e010eb8010db307060504ba02380005ffc0
b35b5d3405b8ffc0401753543405320740077f080108bd7f030103bd0b20
0b0c02b802384012010000405b5d34004053543400321f0c010cb8010db3
0d3175182b10f471ed2b2b103cee103c1a1910fd71fd713c1a1810fd2b2b
ee103c10e471003f3c103c103c3f3c12173987052e2b877dc4872e182b87
7dc42b593130014bb0135358b90008ffe0b10b20383859015d5d5d5d5d5d
71722b2b2b2b002b715d331121010121112111012101119101bb010a0107
01bcfeedfeddfee3fede05bafc1803e8fa460482fb7e0482fb7e>UUMMKF+Arial-BoldMT AddT42Char 
2 6924 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>UUMMKF+Arial-BoldMT AddT42Char 
2 7688 73 <00010018000002e605d3001600b840323604012a04201020115904801805
0804bf180215161102141216110e130f00100e13010010021409080f0b01
5f0bff0b020bb80274400a0601110f1601ff160116b80274401e10000001
f00001000613140a09333f084f085008030828102f115f110211b8010440
0d0e132602145f00a016c0160216b8ffc0b6090c3416191778b902690018
2b4e10f42b713c4dfc3cfd3cfc5d3cf45d19e400183f3c3f5d713cfd5d71
3c3ffd5d7139320f0f0f0f313001715d005d133335343636333217072623
2206151533152311211123189c399975787326433e3d35d2d2fee79c0426
5086845324c41039514bddfcb7034900>UUMMKF+Arial-BoldMT AddT42Char 
2 8420 75 <000100920000045905ba001600b2402b0f011f0139013302331042014211
de01f9010907051605240258116811050101021314111213031402010fb8
0274401d0307090a0a14150a1600000b0a26080940202434af0901ff0901
091a18b8ffc040162224349018a018027018f01802ef1801180014261615
b8ffc0400f202434a01501f015011519173f3c182b4e10f471722b3c4dfd
3c4e105d71722bf671722b3c4dfd3c003f3c3f3c3c103c3fed3939111739
030e103c083c3130015d005d01113633321e021511211134262623220606
1511211101ab88bd619c4f1dfee720513d466e33fee705bafde59f487088
8ffd910231a75a35448986fdec05ba00>UUMMKF+Arial-BoldMT AddT42Char 
UUMMKF+Arial-BoldMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/A 36 def
/F 41 def
/J 45 def
/M 48 def
/d 71 def
/f 73 def
/h 75 def
end
UUMMKF+Arial-BoldMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 65 /A put
dup 70 /F put
dup 74 /J put
dup 77 /M put
dup 100 /d put
dup 102 /f put
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMKF+Arial-BoldMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero 16{/.notdef}rp /A /B /C 2{/.notdef}rp /F 3{/.notdef}rp /J 2{/.notdef}rp /M 2{/.notdef}rp /P 8{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]UUMMKF+Arial-BoldMT nfUUMMKF+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf136.057 337.262 mo(Medical Journal First Authors)[9.99591 6.672 7.33191 3.336 6.672 6.672 3.336 3.336 6.672 7.33191 7.33191 4.66809 7.33191 6.672 3.336 3.336 7.33191 3.336 4.66809 6.672 3.99591 2.88242 8.664 7.33191 3.99591 7.33191 7.33191 4.66809 0 ]xshUUMMKF+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf105.426 432.506 mo(P\(female\))[-8.00409 -3.99591 -3.99591 -6.672 -10.6681 -6.672 -3.336 -6.672 0 ]yshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/UUMMKB+Georgia-Bold-Identity-H uf/UUMMKB+Georgia-Bold /CIDFont ur/UUMMKD+MinionPro-Regular-Identity-H uf/UUMMKD+MinionPro-Regular /CIDFont ur/UUMMKC+SFRM1000*1 uf/UUMMKC+SFRM1000 uf/AIAAAA+SFRM1000 uf/UUMMKF+Arial-BoldMT*1 uf/UUMMKF+Arial-BoldMT uf/KIAAAA+Arial-BoldMT uf/UUMMKE+ArialMT*1 uf/UUMMKE+ArialMT uf/IIAAAA+ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
