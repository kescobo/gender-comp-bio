%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Figures.pdf
%%Creator: (Adobe Acrobat 17.9.0)
%%For: ksb
%%CreationDate: 4/13/17, 11:51 AM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 831 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 84.159810, 2016/09/10-02:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2017-04-13T11:47:04-04:00"
   xmp:CreateDate="2017-04-13T11:47:04-04:00"
   xmp:MetadataDate="2017-04-13T11:47:04-04:00"
   xmp:CreatorTool="Acrobat Pro DC 17.9.20044"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:9c83a175-6b68-3d4f-8cd3-d0d10d1ef2f2"
   xmpMM:InstanceID="uuid:ff9a9f85-f0f9-014d-9563-47f87e30492d"
   pdf:Producer="Acrobat Pro DC 17.9.20044"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XHAAAA+SFBX1000 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /XHAAAA+SFBX1000 def/FontInfo 6 dict dup begin/Weight (Bold) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 50 /two putdup 70 /F putdup 103 /g putdup 105 /i putdef/FontBBox {-229 -316 1737 939} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-10 1 445 454 656 657 687 699] def/OtherBlues [-199 -193] def/BlueScale 0.03963 def/StdHW [100] def/StdVW [50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/period <1C60D8A8C9B08A9560DD8038399E8CFE523CC96C9E10F46B51B371630B2F2CE2187FECE4C9CF245A2ABE08A55C5D20EFCF121E53421E69FCE078> |-/two <1C60D8A8C9B08A95FC68C0300783841C4F4D70F36F744C953A001886B536B268F26BBF3B900470D18218FCFFF981C6386C46E3B2C74AB49E5947618EA30B7F69A77AE1CF5CFD3142C1E9E23D4922269C0CB9DF17AC2E64C080E7FC1BA33991B0D58260138C51974C41100C2C11924E68322B2DE0D14F9C98B22FE9AF601C7EC2EFAB85784CA39F02394A30EC181402480877FB4E1B4B3B> |-/F <1C60D8A8C9B08A9454432808264904F82E03EAAFA782D3F036E187BD519FAD2191205DA987E1E3874B3FDACED0DADA65CB9FCF674B41B6511CE9AA6C7C742345B7F3103BE0F9B478E809DFD779E3F7AD1874B72E91DFCDE7E2524DEA023220835A05F07F8D8833030DFCD75BEF5B9ED2E73C> |-/g <1C60D8A8C9B08A95FC68C0300783F330DD2EFE1CE81187CE40952C6A663489D9432EA3B8E246A66B41FB37CC4ED7761F94E603210E72B61762678B1B318B66006682D5D3BFA130435C8C34A9C64BFA046B8301680FA070DC50BF9E8B8E57CAE252DA572E2238B099E76A0ABCA46A13388EDE67552B993029CE5EE68319989896787C6DFC98C30F58D593D9A000305A507B40681DAAC0D8CD5F933E03BB83B7208627E1C5EBCAD84133E2FB9FDCDEFC3AAEA4295F244E6C74A0AACA6CF0315158F55ADDF4754FDA2535C632C3DE5965F450B3535DFA4666F5A66BBC779A55D57A3A766C3FB09B9F9A3CE61F7CCE83A2D14556BEE36484C23E625CFCFBEB171113ACE4C222A4D45DA4E9D766833BF7AEC24C8ECF4895F492F60751B1882593D259D3E5B148552B7B1EAD8D39DF30DC02168900539D6F98DD7F8331C275B20F> |-/i <1C60D8A8C9B08A9560DD8038399EBD7B0D373C6C921A4550DB3E9DF2F7556A09F064F5D4746D2165A9391A8A065F1203015F1FA2486890665D0DCA000DD3261FE09481B05FC756D0F3206929B178DDB4256DDFE3E86493ABE2578A2AA74F7A754446E81364142BD86C377890FC435918C4841558A6A757CCADE498BDECD59126C9853F44AAF0F3E9FB15529BD7929C> |-/.notdef <1C60D8A8C9B08A95899FC4510BF17A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJM+SFBX1000 /XHAAAA+SFBX1000 findfont ct_VMDictPut/UUMMJM+SFBX1000*1 [46{/.notdef}rp /period 3{/.notdef}rp /two 19{/.notdef}rp /F 32{/.notdef}rp /g /.notdef /i 150{/.notdef}rp]UUMMJM+SFBX1000 nfUUMMJM+SFBX1000*1 [9.963 0 0 -9.963 0 0 ]msf72 633.615 mo(Fig)[7.20728 3.18215 0 ]xsh%ADOBeginSubsetFont: THAAAA+MinionPro-Regular-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)%%DocumentNeededResources: ProcSet (CIDInit)%%IncludeResource: ProcSet (CIDInit)%%BeginResource: CIDFont (THAAAA+MinionPro-Regular)%%Title: (THAAAA+MinionPro-Regular Adobe Identity 0)%%Version: 0/CIDInit /ProcSet findresource begin14 dict begin/CIDFontName /THAAAA+MinionPro-Regular def/CIDFontType 0 def/CIDSystemInfo 3 dict dup begin/Registry (Adobe) def/Ordering (Identity) def/Supplement 0 defend def/FontBBox {-290 -360 1684 989} def/FontInfo 5 dict dup begin/Notice (Copyright 1990, 1991, 1992, 1994, 1997, 1998, 2000, 2002, 2004 Adobe Systems Incorporated. All rights reserved. Minion is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/FSType 8 defend def/CIDMapOffset 57 def/FDBytes 1 def/GDBytes 1 def/CIDCount 75 def/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def/FDArray 1 arraydup 0%ADOBeginFontDict4 dict dup begin/FontType 1 def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def%ADOBeginPrivateDict/Private 12 dict dup begin/BlueValues [-15 -0 437 453 464 478 623 636 650 665 701 712] def/OtherBlues [-257 -240] def/BlueScale 0.046875 def/BlueFuzz 0 def/StdHW [32] def/StdVW [79] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/SubrMapOffset 0 def/SDBytes 1 def/SubrCount 5 defend def%ADOEndPrivateDictend put%ADOEndFontDictdef/GlyphDirectory 2 dict defct_GlyphDirProcs beginGlyphDirectory+1 <001C60D8A8C9B889970A> |0 <001C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4A980A717C675DD749FCAD021C86E4A82A71450A60069401092D2766EC2A38FB4B27A723A2EF044B6549AE7BD225531C9BFBD9FDEC4C158C539EAA9E47425F43D2DE9C2FA717B7B8B00C9770334A66> |!endct_AddStdCIDMap%%EndResourcect_restoreCIDInit /THAAAA+MinionPro-Regular-Identity-H /Identity-H 0 [/THAAAA+MinionPro-Regular] ct_ComposeFont pop end end
%ADOEndSubsetFont
/UUMMJN+MinionPro-Regular /THAAAA+MinionPro-Regular-Identity-H findfont ct_VMDictPutUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf88.1172 633.615 mo(\000\001)shUUMMJM+SFBX1000*1 [9.963 0 0 -9.963 0 0 ]msf90.3789 633.615 mo(2.)[5.72778 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf99.2888 633.615 mo(\000\001)sh%ADOBeginSubsetFont: AIAAAA+SFRM1000 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /AIAAAA+SFRM1000 def/FontInfo 6 dict dup begin/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 39 /quoteright putdup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 45 /hyphen putdup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 52 /four putdup 58 /colon putdup 65 /A putdup 66 /B putdup 67 /C putdup 71 /G putdup 74 /J putdup 77 /M putdup 83 /S putdup 84 /T putdup 86 /V putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 106 /j putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 113 /q putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 121 /y putdup 170 /quotedblleft putdup 186 /quotedblright putdef/FontBBox {-189 -321 1456 937} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-21 1 431 449 667 668 681 707] def/OtherBlues [-193 -193] def/BlueScale 0.03963 def/StdHW [100] def/StdVW [50] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings47 dict dup begin/quoteright <1C60D8A8C9B08A9570784B5B784046778601A59845D0C70FB8A52DA1C4B09F5C15EF2BF7019ACCB4C16913E71AE6731386BA835553739AB9AA9A7EE63A052DD7EFA519D50576C2CCE953D1EA3CC025950C510300E6E6937140E155FD7C0EC1AE4B33B0144E89763A0BDA8FBC50F5E818E2> |-/parenleft <1C60D8A8C9B08A958B17598B0C7B24FC452583A3E73272C9922F9470264283F7201CB3B4B4FAB50D67A9B475AB49AE070D75A14C83EBC7EDC335FDE76933E64D635D02659C09BD0A1392FBE88C3A52DCC065369A33EF61079059718E71C064A2D6D967D4C450114C648F2954CE8069C4FBE3EE717D40D1FD7865C40878B7E284F106AD613ED07936F7005163B4701EAE4EAF> |-/parenright <1C60D8A8C9B08A958B17598B0C7B26624FCA03B7553641D21584A8DAA6D267F67A2FDB2C676B88347A12DF0DED04F6532E5F21FC2881738576206685500496F36D0F3AAE8AE9322DD29C8FAFE8595A12EDE46799955529D968CC18E837DEB9E6B07B08F38AE0DF05B589BB32B1631125BF1E681D54087903CD59F201> |-/comma <1C60D8A8C9B08A9570784B5B78404671ED719AF0F54DCC365D4813A994736BC164BCD31493C83E4E4C6B574B7A4C5C58651C3E5126590E1F9AEAE65E6DC5AF322B7597897A2421C00573A3731EB8E85A55F5A23C162B4A739AA54A180072E4F739B1852E39194B539C6C> |-/hyphen <1C60D8A8C9B08A959E3716438136F12149B0B6584DE70B3A3D6668E08B9340> |-/period <1C60D8A8C9B08A9570784B5B784044E80CF03BF5E449D0E8F6F331E41C53669F266C233D499787F16B40F84A9AC6D22BCB8ADD28B96CBF35BDE83C70F7016FE287D00A32E82011> |-/zero <1C60D8A8C9B08A95DFC04977F2AB52EAF86EDE01310151EC5E36ABB686A1587ACE0F75CB9E177DF42624668B7B0BC0F8A446F92D18FA72106CE38CF2894F14C802DF831314A0FE2A357A266C343E729ED0DE3A7F0DD6DD0E600BC0EADB5C4DBFEDA08CAF5A531951C58BAFB0480EC7F0CD6A43C0D134C36AE79DE89F3ACDFB99C61E80E1F616946A31F0EB5530A2593406A3A8537745443A05EC288A40F02407FE5E1266FA5F5504162D8ED68A8C2032C264B1BE98FEDA61B551CEC4B3AC9B35D9C16207> |-/one <1C60D8A8C9B08A95DFC04977F2AB27EEA2B72AC09F667DC564D9A6D6042DBF6F6BA861A45A7BBA360051BF5DA140B45C84EAD9738C3E391EB737984FF53B010EEB7C28FB1C467C92E0F718EC12629F8F886E2E19924388878F3C05D7B06DF3E6> |-/two <1C60D8A8C9B08A95DFC04977F2AB279D53461B2DAA3DF13DFBB76E18F2BA193B039717BDC920633BC7A516318257272BA81319B484128254F7A66E215277ED1B36F585BD26583D15AB16EA64C0B20011EDE1C306689AED90CDA22418EB6A1C4C840A482C947FFCBE0E1201C29724A72AD12CB7E1FA46C25622C2C8E95F2CC6E44DB6BE03EEDC4873DA4EE80B153EC2048B6F17FF078C6F794C> |-/four <1C60D8A8C9B08A95DFC04977F2AB5C3E1A0C5B55BA63F3C891494D3C8F85973B516E5D8764CB7E60601FDFDBA546A59049B4B38B4075133A87882DA6F2D92C154B501B427CAB4C8959A52612A2D6802DFBBBA445348C91EC06FD1D55AE68EBD0C85BFE2EF5B68AB7922BC39381473A51F00E7CD4044CB1985A2D3E7ADD94D8D30FCC8D729479F6127AB8A7A8C8D78E78009DDAAC78> |-/colon <1C60D8A8C9B08A9570784B5B784049E5D18DF0A13282A6B9C03AA3C918D49F508D2AA813A6137F9F758EF0829F673DA2C1798D4652DEB87E7BC54263EDB204E0E65369A17B1DB97F390E11556A1872D65A71E677628AEB2067E09480C957A05FCAD487B8DEC6FF38EE1BF98588F5C9C54F2B439F03> |-/A <1C60D8A8C9B08A946A7460FD0601795D434C7C0ED8CA10A265B05808F418047DB19AD589BBB295FC5E776DCD89AE8FD99C2E1FA795DE0F68CEC712AA4C770C8490872DF8DB191D038EFD3514776BB75FD1C4C46FA113F3A40E97A8BCB1E4DF61E3FDCE1E0B2FA3214D162B39F16CC1421BA34CEE36BDD57101937D721FCEF2883F780B824555326008A2650B89F1BA5B562C973863091BC7EE01D1EF308E94B84C364651CF77C6ADE4C9F15A3C6E21E24B50DB06FF619AD6674C02BB0AF33D5C83> |-/B <1C60D8A8C9B08A945A0BD1E368803CF56330F762B4C07A5061E4C015361154B91DECF9664AF7DA3D23BF775DD1EE57A609C5C9CDE9EA7B9BBF6C894A972CBB8585477219BE9D1DD2F42B451D0C9A246438CC1F89A7015D5612E5A6C173211B94EA91964885551CA23C45FCA14C078C4F3B2EDCC7C8571FC10702EDC6ECB1DD1CA4EB96EF8556D470F6691814FEC2A09AE58D0674842E9A13488AC99C95867E0D97E44D3951AB5954A813C0E33A1BA8E9EA735C32B4A1EB3C9F186DC53B11F0D5CEBDCDC90E1FDA523C9A1DE0EABC9F138F99879E76B7C4501F916BB43CCF5D2F5C0F94A07AF8E6E9B0C1BAE1D093ACC908F6830110E7C513573221A33F9F2542E9FFF081F3740EC5B827E893EF780CCF1636745526329C8EB8> |-/C <1C60D8A8C9B08A9454D954F49F1C2A2752A0DD6F678687A4787AECF730A51323381FF30077A55829DD32865658524A30BF02F4C2588731D576A7715E09524E9B4BC4FD6E93F6BA7EC6BC5EC53FA60746A689AA224BCC7E211D6C87A4278913735414A988303AF32D8E8CCE38631A8EA46533172A0EB4C210632ADA6C8C1C37C2993ED86A2FDEBCE10BBEBDEE14B30916481084C0F860905F34F0F4EAE45F28C8A7F46CE4F3> |-/G <1C60D8A8C9B08A947C60A5C5BD54B040ADAE2FA33F5FF8CB77D116CA625336205FF0E10F8DF72FA952973F6A25FEC216E08CEA164BAAF4E1277ED3A6A67FF0B22A46A4F976C7740E33DBC15A73CF83504D89E0758E723CA424F9B0EA7942FE940EABA9E6BB4D5BF3971033E08D2B81A6188428E6281EE75E847D886E53E95317D3697BB967A9A2D21E741F7BBEE3ED7C47FDC4A4D43BF51DE4F3C1DB3DCD6787506C9B048EFF3BC5BC664200B3D5338BFF8466AA6A41E0DE4F9FEC10B2BB2EA84F072C5E97BEE1F3B28ECC8292> |-/J <1C60D8A8C9B08A95D415CEF5C20C279ABDAE98CCBECD89AF7F70EDFAD865C6F94CD7AF03E025C512C37028F32B95CBE414EC99AB0B9C2352B04AE7A7298A1C1321CC002FE10BEB470C3D29EDEA19B94D17D7AFD110D03B3A6E853CE5BD7B48C6360718E5F9EEF1422D04054B609A1D2BE63F45B1286CA2753A1B9FD5926AF8D95E41> |-/M <1C60D8A8C9B08A942B391358458C6929D907B809CCB8F0636752C1A7AD987C8A3CC5EBE93E280207F64C1676D2921AA2CE53E133F62D41D2F8C283695BB44B2B1361DDFF637E55C5C10F0B2656A9FE756A6954EF5AFAB772E37FD990064BB5A3C186E449E537DE214AB4AC0AB5C6220745C0C6D153FF83460D043413EB30162846C813982ABEC367BD2BF84943DE626B91CCD0D71DC0064B31E8E3696B8AADF8F03D456CCB007E9769FA3CEEC625527784126DC4590F471415E3B6543F72FB5642DB4C0CFDF3E4E7A88FEFC7BAEE6B> |-/S <1C60D8A8C9B08A95C448752158572CF627FC9341406A8C9C0D26D68284186E0B220D103771B22ACDA61E2A3CF09E065208C23616F46D052CE52AA61C69B2B4C9C4363CA412E422531EE83B675CF4262963C59937FD36B0997684B1A7D757DBD1CA7AAEF5AE229BB8F9156A679C66435F07756E44063883774CD26C409D182A750ED0C7EDA47C1B6358ADC9F33CE285925B7957073CF0C8B9DC1281063F30A162778007541D829EFFE7E58D4EA021732DA8117FE1E53AFCED02C0BF9CC316E283A27DC396A6FAE9982117D78CC307F11BA3> |-/T <1C60D8A8C9B08A9454D954F49F1CD0C1A1B48729884B3B765BA53B83FF2AC67483FC897A55748406D3193492EACDE591F13D2EA73C658681918A85BBAD2FB6DF52655D50646501D38EDA185210DFE57026F378FC6F2759DF0A8FD0BEDCAB8BE5EB5795F16F84D5540CF088AC1A45B00A7520EA817DBFF0> |-/V <1C60D8A8C9B08A946A7460FD06010C327DB6A6EEA28B9785EE3D48FA34A8919113CFC9AF5E698C6E58C5A8AF2F892BF14EF5D801B39C923ADFD58EFF02F5F886DB9D8BC574967316F1FFEF6C5E41EF743FDEB638AE8EA61B3C67B645D14422937BC21CBD066733D4AEE5AA6F9AFB1DDBA8C018CF5942451E3D2DA554753EDA0DD0C4AA5DD3EF98B426C69A09BDEE276151C12BDECDFD2E0F7B1E1B0E4A6541D2BAA7A4C0F91AFD932AF5> |-/a <1C60D8A8C9B08A95DFC04977F2AB53FCD61C7808BAAF393A2827D3CE9C65041AECB95E925A40E6ED84C6E455F29ED10FE2CC5D7C08946725880625BFC20C4C85650290F036615B1E8651E84BE20C2C66C49807342FC64A858A7D7492A3A60E8B06FA323EB360CBC4F0F3BF27BA692CAAFDFA6FADD9CE8B5222A084E2FB71EB2361629C813762539B361D63372B687D0D7D4DB8242EEBC344A241971A3D9CAD91D4AA86F0091B6DA58E744718EF7BE14180EC8D569C710F7F3099B290B6A0D78A6E33281C91B1098ACB886107D8> |-/b <1C60D8A8C9B08A95C44875215857DBD88235EDA26687E738E5D6BAC76C37E176E5286163E9C2A8FD9FBD2D92CA35F7BFD7DA78065EB78139C9B372CD9AA1D5E58D8C5975DC0C9128531435772A5E81EAC490917367CF89EF8F2053B8036640818FF82A595F7206951CC7DC798C1074A4429A48020C60B5989B4F89B18644DF98811D6EB2736871E0BA8C2B9C25061A90FB7440CD0D9C82983516CB3EB6> |-/c <1C60D8A8C9B08A95B1FDF87653AF72ED5391009DB6A0CA3EDCBA238E42E0E1342BEE067A6F0CADB69E5418C5CBD64948992504BC290190B6BBFBEA48F2C4871F33A4C31417A43E2D2150EE871F7A4AA9DFB27A2059FFB06466A8BB7AA44A566F47C2429642DF6C0D39F2202C140EFF79069DA9CEB5D48B7D3C46CC341B63DB3315DBF48D88D71CA8BC1367381D4260D5CD8EF3FFAFE795A4365C35> |-/d <1C60D8A8C9B08A95C44875215857DBD88235EDA26687E738E58EBA556DDC444863002DC5F7A0F44AC2519CF1901AC73A2F9413EEFD9FC62FAD7C82E0B472044D0DC442FC9A33C2C0E086849C3FF670FCE27F6E60CBF3B40104AE4F081988126CC7286EF113AA5F6C90F45E58720C78A2691D1682255FB0F94E6C3254CD6F14042037BE02CE1197A3BB08D31A2550E9E072CD9928617EB5A5D9FA9F68E76356D8839DFB> |-/e <1C60D8A8C9B08A95B1FDF87653AF0495549DAFE999E7E31C191957DB5D916EA45E9F685DC4782C6E28FCCFE7F5A662573B3C297D78B07F5E1B1ADF48FE899C4EDD6B6666DD9146373950F11450028FAAC0B7E0AF347AD632D935620F695253BEF74DCE22EF4F00D44083940B055402B1CF0D9310236E96AF45426FA72BF87E46214AA6667FF01DE332FE> |-/f <1C60D8A8C9B08A956BAEC440F1266F51BC2C9EFD1F27804E17607CE3BFF5FC20B9B59C57733F4DABBD5B9E8CAB91168E34BA92AE095D2A1D94A3C0E8F6D51F1A46B2F9498886ACB4C975C8813749A318E10904A2DCF5BCF350DE86FB593B7083B9FEF5BBEBEC502EDF7A66F0AE67825744A0B80716AE8FF35D1D1DB8B919B1DC> |-/g <1C60D8A8C9B08A95DFC04977F2AB0C41D91CA912DDE3BD33C6A87447AD7CFF6BC7CDF5DFCC009635B1A70AB9117AAFE71FB893DD2CF41AB2869979E19C565BBC3CE84ADEE2CEEB972B1F65AC039E5908FB5BE0DA5D560310E1A4C1502FC56C48BDB41E9A073D4AD5662A668AED6BFC37117F97BBA85DE0095478F91061ADE169E402CD633CF677D246805FFD403718E6CD609B65BA4FBEADFE250A89CD34716F7DE21DCF9FFD6827626F953465F8663E63E6DFC0D616F278F1D9CA1E58CA4D0C90BAEEFF77869419182B433733B020D0A869AF8C15E43225A41D693C41E73BB7161AF08D2C60E0A1699C54A3910A7ED59C5BED4788A6970B42F216866352DA503A23A0DE90295890EE26B963E72BF281B2A436A46A049E5829719FE2E741C20D823711A7EF6E914A810821E59542D5BDB4D0104A90D20E320CD744233B272862D95576550323E0B4A09E9E5E70590EB11BFE51D62B1BFE0335858BA76D8E17C65AE68D8A588013D979A08539C88D7043F1E7772C1199FB76F53EC77B2B3D2B> |-/h <1C60D8A8C9B08A95C44875215857D6DBEBE07F4F6CE0F117FBA80716E4F7C744E40E9707B79C961253D0A2E9DC29436AF32F9E03FF14D94E5902016D8869706A036717E387ABA87F894E3248FE5786DAD11D76BE26E49BABF33DFA0F3F7D66183144CC2ED6F0FAC66C6E2370D9FF807E69EE44A9BEA564AD82209C11B0FE756304215299CEB8FECC150FA6321F28B4B0> |-/i <1C60D8A8C9B08A9570784B5B784046389956E13AE66B4D158B888A3A5E6EA034AC9B30388B4BC497B1AFAF23376CDFC5DB520C254F6F29A609B6751BE2BF52151153EBED3AFC37776EF13B103E18868EC5D6A6CA53A33DED042639D380391D4916F61F0C364BEA64D5CD168829232886405218AB1B021F2DCCBF39CA2B95604624D31A85B07B87F0296B> |-/j <1C60D8A8C9B08A956BAEC440F12614B97826A5CF873549351C06A8BDC109D0F17BFCCBE121DE2943C134F41B3E349C8B4F5088F79E7FFBC5F29E3255CA2843C38F39F5ABBC9AB174FAA0EAF6E4AC66A1971E6A71AFD33F889861E16E5456A296FF028FFB98CA8CE3431F3A96FF328AC228CA0B8991747381638E9C3C185B27921FA8CF94FEB6A386DCD9196F2B6CDB5D5AF861CF1D879A8F767A465C366442FEE497A8EE54AB92B4C250> |-/k <1C60D8A8C9B08A95D21503C301897EE981F1E40CBBA33F2285EBC5BE6A4C2EE2C758261F48D5A78E64F70C476B610DD8D1E486FC2D4A7E3E2FF748ECEA567882B1EB73942EFE93EECC5C1606CF2950B8DC57600DDB4B7BB3048E1D447AB92C0E8C466D38B1385AABC2E205A2EEAC3AAF9003E5E30E9D505A6EEE643904C4ED92B63C9328FCD855C0B48A7DB54EC33E79C607CA229B62AD7222F25A48C461E3EBB1384E854177EC639CD0B23588969F52BBC839D3F039CEE2CE9270D73B77A8E3> |-/l <1C60D8A8C9B08A9570784B5B78403D50427C9A0E1AA047319736079F0E175947AB1C14899F9DEDB15ED0B18B49475484481A0760EFE97F4057A0217DF7F0E8A0C58F744CBB014AB684C6> |-/m <1C60D8A8C9B08A940B8629E094A9A34FD825C38ECFD42683F995C2E585FD61508238206ECC357FE9D2D0C69E178A2A2C82714A00B38D66DE4593E704C705629470CB79354240F41B45F14DD33C62B65312361F75A05BDE0BD140E72EA87EA357E01CFB738F4A84F7557DAC2F815FBE63A49527A211F9CF74156C3947C54F0BDC687BCC3D428101A2FED30F3A709D89C3EC7B42830BDC1D4AD4427AC4DB0FAC75012BBBB782A6A37CEE09912FCD078A755EFC26E0D3C6E1783DF0B62DABE614D6D44D4A1A6BD3E39EDB8461DDB1287541B010BA962D6CF35AF62688D8FBA120D4FC8F798DF6> |-/n <1C60D8A8C9B08A95C44875215857AD63A72A3F61781DE2E8C499D0B4C3D6708A989DA56F11107514C97A110C852C5574FF5478EE4CF1979B2433CF4C1D8985B457E1F242D85540AAFC18C2E69A08A634D16F975C072A1E35F02C92D4BC60FCDE67F8A311B6EFF8F15D2FCDAFAD5C404B662DF08F38CEE709842D202C58643B836BAAEAB6B81970D64D51A82BC0EC26A582DEAF78EC521B403AB595F31B2C3BD8D17CCEEC3231> |-/o <1C60D8A8C9B08A95DFC04977F2AB539640A254B5BCBBAC675706870AE0801E2AC2D3DAE06FDF2A2CE185AE754A0F0E9124A7396579A0D2E03AB488646805E1A8B2026869188E212EA845D57059F3B4B0B181584338B988228580AD4583E7C4C024FE9335D5B4024278F3BC24455EDC46DB5E1AB9DB4E6A69013CA7204E567878CE31300402064A72BB7B0FBC842D3E8A5DE63EC167B02B0AD7AE9266FB7B00DB76AE28E89926749786A8CC6911D4E79E4C4900> |-/p <1C60D8A8C9B08A95C44875215857A1E1637A9FDD055F6AE52DCBEF520E2EBF5C7A873780BAB850A2D9B15A3E5EAF4C8F3D0027F4C312C45FD517DFCF4FF4554B1468B30D308E9949A4413C8FB6F193AB89A8E79B575CC4C314CCA7531D75725760DE975751B31FD0CC8E287F516A0F3EA126119FF19F374AB80367C6D4F38BE7FBF5944DA09A6D6D98403F5846AFBBD025F48B66815C422692C10F96CC174B92E288> |-/q <1C60D8A8C9B08A95D21503C3018909B9906E344E6A1AA48D3A8C88E54FC753165621331F6FBDDF2C658F85ECE5DCC97B48B9119D032D6B6E95C765E3ADA996D4DB2C5D332A121DA537E6D38F6FCF403C32C83C662AB75D05C7EFEEE73840F71637E1A53CCF9E4F5165BDE22D3DFAEFDE2BA2C2389519680CDE0452C3EBDAB20D76CB4C9C158436861887DEE550D97ABD0BFA40A87A1575F976EFBD704E2DB472F18D11> |-/r <1C60D8A8C9B08A9584D66FC332618E83F4D35F9C7A6DCC38B8C00F314DC9C2E2C831747607FC4E2ACF14AF466CCF1C2BE2A0054B46F5291555FBD7B7574BD1A5C67AC40648A89469D992E60355D94038BC52C782289E973C6114063CAED2C09E179578542BC9BA47E243C17CAA8673BDB7355C2991BF2F93> |-/s <1C60D8A8C9B08A9586CB3841AD4CC14838622197350DD81259EA46DB535E0C767284DE0FCB6FA5E3B04358BEF149AEF6B53CA459469B7A88CFD3D928A1E8836AD5EBD9DD0E9FDE353C288F800640CC5D8E45986952B2EF1517E4AE198D2C9746C4FCFC26C90C3B2AB5C1E60B476B85184D1297CE75F53F9BF703CD4E71C7F6008A504F91298FED01889A22A213247569488031D65CB87B0A8A4FA19704E6C180BD11415E93FA6D9402D396706A2B38939C0B9245FA691C33DF02D1A64C3D558E13433CFA205A1EBD09192F66C60755A03AB2248825EE75EB3EC8899A2321033C38B0D3E7259E3E753D8376657167F337706E383DE8F2A00BDC471BCC12B9034660594BD1B721A0AB6B> |-/t <1C60D8A8C9B08A958B17598B0C7B25B0F3D90A91F3133BB5877C46D6FC4BAE86B21A1BEA5F938BB08AAF3A0E89946CA4FBE265546DCE6750BC876D32F5C8ED2449A73FA71747AC632ED5DB247C2F0CF33BD505CBA6CF229CE75A39F9DA2D48BA45D8C025D5710FD8AC76561DF3036F00CE1EBC71EBC7E2731C769565B0431718C5208982A0966E4ABB807693C3DE8056BEFB13> |-/u <1C60D8A8C9B08A95C44875215857A2A7309DA5575D966ADAA327F2F151DB0869E716969751944B5F59AEDBDB57A73A5AA00D43C608E10A9AB3196AF92F2569D09C817C54DC6FE07548DEAA4A2140011D891D68D4D613814837E136D34B26650E2AEBE3B682A84BB6B5659E1B0EAD163B929CE5FCA60B3581235021D43A33B81B4E78737C58EA656115542CAF839845FCC4F59D31C11487A9314780D6CAA7D0E424D667276A8B3A489DECBFDDCF6D3A8D540519BFA24EE1> |-/v <1C60D8A8C9B08A95D21503C301890A9EA553246D03D345E6907F26D17757F83805C2F8A9EEE40F8384CA2E43BACCBF98AABDD4CBCA2FA24F262552E221E0BA7CC2642418123FE3D62632E2B5B3F0F29A150723BC9CC1C23021DC2AD59A19C3A6397AF8F6968CE26217E193B8D1DE07D1357F708C466C82BD853F28DE0E74B94AC17D2F> |-/w <1C60D8A8C9B08A9454D954F49F1CA4C920ACFEEE616DB889E43DF7B14BC9529E938B3BFA3544415D8FD498CF258EEF9479F1517331689D8162A7B1EC24DB54D916D6E3ECF7A2DE011205F92CAFBAC0320D10B456F43B57B2B9CEEA679F29C9266574D8DADB8B0DBD56F766840C41741CD8984D41B7381FC13B72347D05F69B12F5652F6CC8AA1C41C49AC58ADB8C122CA7349B339840FCD2C236AB6A31C4D9E855ADA85AD22FFA0115746B63CCEB3D45F8A46088C79309F584F4CE67443ABCFCDF689726E6F61302BC2F748760EAA57AC9155D171C8792806EF6A07833E545C6A7957C0901251BED6177BC5CAD118778FFBCE142DD39669D1454BA08BDD607EB77435F6DBD> |-/y <1C60D8A8C9B08A95D21503C30189098C50AEF32D902916385FA5464BB2F2E726E06660AB7B5C501393E72E1D2CE7E9D6DD0B7621BA4F7B08C7608977BACEC154EEF903A18AD5761C1A7A5414A9C2C9B12B8FA8A95E7DF1DDD440E10869E16A9A0E946E79D8F6D354F64F14884711999D63D5EDDD924F2BCECC7CE94596E7AF4CB35B9B948F3E434439324B6BA193F28621CF88C0CA67BF3F69A001D94D7C7AC4EC5ED562AC462F0D4C846336DAC9E15C07277682C4858C43FABAF838C11CBC8D72DD5D2E95889FB59DA3079D> |-/quotedblleft <1C60D8A8C9B08A959E3716438136831DFF0ACAA5F7D89CBA555473D86BD1C7CE981EB322A5287157D00B5343F7D33E76FE93049BB854A80CAF711D06DA92177CC305BEE23F3E11C66679DEC1C1688DEA5BB37D3F7B61FB3B51A1166B4F8C21DEDCCEEAFDE0AA984AEC188980E67A4706CFEAEE25D53B7200DCCFB0A29A78AA39328952FF6497BB95274959446225DF491BE6E301994BFC4DB243912271CAF5898059433CF5A57ED416C345AB3AF4229FA8B87F59CB0E66B89A2FAE3A8171C74700F5F7710748B0AA25DB36694A6C26> |-/quotedblright <1C60D8A8C9B08A959E3716438136F3ADAB5A205117AEA5390685090835CEEF244AF6D370C74F8645F8FE6C09956AFEFACF8CAE1ABFF5749752F26E176253B5F7F0E20C9AD9C9ED43ECA9E1982C70B0F3A00AB234294C647BA94300E13423227D1D3304F36DAF83418F43384D309516F29E67E3AF33D2AFC6266A755BFA62E89A8B1573AD8607B38D3C0E480F7EAC05086C3498D1DDB2AAD02183229E984158C303C1500C938AE0207FA124DBF75861E8D4D559B8F8837800C265214B431DF144650CB2B42A757BBA5503D3CF327696557E> |-/.notdef <1C60D8A8C9B08A959E371643813608> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJO+SFRM1000 /AIAAAA+SFRM1000 findfont ct_VMDictPut/UUMMJO+SFRM1000*1 [39{/.notdef}rp /quoteright /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two /.notdef /four 5{/.notdef}rp /colon 6{/.notdef}rp /A /B /C 3{/.notdef}rp /G 2{/.notdef}rp /J 2{/.notdef}rp /M 5{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /.notdef /y 48{/.notdef}rp /quotedblleft 15{/.notdef}rp /quotedblright 69{/.notdef}rp]UUMMJO+SFRM1000 nfUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf101.55 633.615 mo(A:)[7.39561 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf111.685 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf113.924 633.615 mo(Mean)[9.03881 4.38237 4.93066 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf137.754 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf139.993 633.615 mo(probability)[5.4782 3.86252 4.93066 5.4782 4.93065 5.4782 2.73901 2.73901 2.73903 3.83484 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf187.408 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf189.647 633.615 mo(that)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf207.726 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf209.962 633.615 mo(an)[4.93066 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf220.371 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf222.61 633.615 mo(author)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf251.125 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf253.364 633.615 mo(is)[2.73903 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf259.992 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf262.231 633.615 mo(female)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf289.896 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf292.135 633.615 mo(for)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf303.942 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf306.181 633.615 mo(every)[4.38239 5.20486 4.38235 3.86255 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf329.218 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf331.457 633.615 mo(jour)sh348.741 633.615 mo(nal)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf361.889 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf364.128 633.615 mo(that)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf382.207 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf384.446 633.615 mo(had)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf400.333 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf402.572 633.615 mo(at)[4.93066 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf411.337 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf413.576 633.615 mo(leas)sh429.518 633.615 mo(t)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf433.352 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf435.591 633.615 mo(1000)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf455.314 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf457.553 633.615 mo(author)sh486.068 633.615 mo(s)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf489.957 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf492.196 633.615 mo(in)[2.73901 0 ]xshUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf500.414 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.86342 0 0 -9.963 0 0 ]msf502.653 633.615 mo(our)shUUMMJN+MinionPro-Regular [9.86342 0 0 -9.963 0 0 ]msf516.924 633.615 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf71.333 645.537 mo(datas)sh94.6294 645.537 mo(et.)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf105.696 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf107.958 645.537 mo(Grey)[7.81597 3.90153 4.42662 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf129.359 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf131.62 645.537 mo(bar)sh146.035 645.537 mo(s)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf149.964 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf152.226 645.537 mo(represent)[3.90152 4.42662 5.53349 3.90154 4.42661 3.92844 4.42662 5.53349 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf192.177 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf194.439 645.537 mo(jour)sh211.898 645.537 mo(nals)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf229.107 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf231.369 645.537 mo(that)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf249.63 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf251.892 645.537 mo(hav)sh267.663 645.537 mo(e)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf272.09 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf274.351 645.537 mo(the)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf288.185 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf290.447 645.537 mo(words)[7.1933 4.98044 3.90152 5.53348 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf315.984 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf318.245 645.537 mo(\252Bioinformatics,\272)[3.32065 7.05585 2.76669 4.98044 2.76666 5.53348 3.04367 4.98044 3.90152 8.30017 4.98044 3.87357 2.76666 4.42661 3.92844 2.76669 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf390.958 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf393.22 645.537 mo(\252Computational,\272)[3.32065 7.1933 4.98041 8.30017 5.53351 5.53351 3.87354 4.98044 3.87357 2.76666 4.98044 5.53351 4.98044 2.76666 2.76666 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf467.924 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf470.185 645.537 mo(\252Computer,\272)[3.32065 7.1933 4.98041 8.30017 5.53351 5.53351 3.87354 4.42661 3.90155 2.76666 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf523.336 645.537 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf71.333 657.492 mo(\252System\(s\),\272)[3.29739 5.49474 5.2206 3.90092 3.84642 4.39561 8.24203 3.84642 3.90092 3.84643 2.74729 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf123.369 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf125.615 657.492 mo(or)[4.94555 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf134.433 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf136.679 657.492 mo(\252-omic\(s\)\272)[3.29739 3.29738 4.94556 8.24203 2.7473 4.3956 3.84642 3.90092 3.84642 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf178.495 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf180.741 657.492 mo(in)[2.7473 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf188.983 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf191.229 657.492 mo(their)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf211.587 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf213.833 657.492 mo(title.)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf234.163 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf236.409 657.492 mo(V)sh242.996 657.492 mo(ertical)[4.39561 3.87419 3.84644 2.7473 4.3956 4.94556 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf269.948 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf272.194 657.492 mo(line)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf287.579 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf289.825 657.492 mo(represents)[3.87421 4.3956 5.49475 3.87421 4.3956 3.90091 4.39563 5.49472 3.84644 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf333.398 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf335.643 657.492 mo(the)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf349.38 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf351.626 657.492 mo(median)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf382.946 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf385.192 657.492 mo(for)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf397.034 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf399.28 657.492 mo(female)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf427.028 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf429.274 657.492 mo(author)shUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf457.875 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.89322 0 0 -9.963 0 0 ]msf460.121 657.492 mo(representation.)[3.87421 4.3956 5.49475 3.87421 4.3956 3.90091 4.39563 5.49472 3.84644 4.94556 3.84641 2.74731 4.94556 5.49475 0 ]xshUUMMJN+MinionPro-Regular [9.89322 0 0 -9.963 0 0 ]msf524.52 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf526.766 657.492 mo(See)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf541.124 657.492 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf71.333 669.447 mo(als)sh82.9852 669.447 mo(o)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf87.9557 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf90.2128 669.447 mo(S1)[5.52244 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf100.706 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf102.963 669.447 mo(T)sh109.307 669.447 mo(able.)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf129.74 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf131.998 669.447 mo(B:)[7.04175 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf141.8 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf144.058 669.447 mo(Mean)[9.11182 4.41777 4.97047 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf168.08 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf170.337 669.447 mo(probability)[5.52243 3.89374 4.97047 5.52243 4.97049 5.52243 2.76114 2.76114 2.76115 3.8658 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf218.135 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf220.392 669.447 mo(that)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf238.617 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf240.874 669.447 mo(an)[4.97047 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf251.367 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf253.624 669.447 mo(author)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf282.37 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf284.627 669.447 mo(is)[2.76114 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf291.308 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf293.566 669.447 mo(female)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf321.454 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf323.711 669.447 mo(for)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf335.613 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf337.87 669.447 mo(articles)[4.97049 3.89371 3.86581 2.76114 4.41779 2.76114 4.41776 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf368.878 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf371.135 669.447 mo(in)[2.76114 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf379.419 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf381.676 669.447 mo(the)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf395.482 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf397.739 669.447 mo(\252Bio\272)[3.314 7.04178 2.76114 4.97046 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf419.141 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf421.398 669.447 mo(datas)sh444.648 669.447 mo(et)[4.41776 0 ]xshUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf452.931 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf455.188 669.447 mo(\(black)shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf481.973 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.94308 0 0 -9.963 0 0 ]msf484.23 669.447 mo(dot\))shUUMMJN+MinionPro-Regular [9.94308 0 0 -9.963 0 0 ]msf502.455 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf504.712 669.447 mo(or)[4.98044 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf513.582 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf515.844 669.447 mo(in)[2.76666 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf524.144 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf526.405 669.447 mo(the)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf540.239 669.447 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf71.333 681.402 mo(\252Comp\272)[3.32065 7.19328 4.98044 8.30017 5.53349 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf103.982 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf106.243 681.402 mo(datas)sh129.54 681.402 mo(et)[4.42661 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf137.84 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf140.102 681.402 mo(\(open)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf164.449 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf166.711 681.402 mo(square\))[3.92844 5.25742 5.53351 4.98042 3.90154 4.42661 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf198.612 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf200.874 681.402 mo(for)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf212.8 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf215.061 681.402 mo(each)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf234.428 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf236.69 681.402 mo(jour)sh254.149 681.402 mo(nal)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf267.43 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf269.691 681.402 mo(that)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf287.952 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf290.214 681.402 mo(had)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf306.262 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf308.523 681.402 mo(at)[4.98044 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf317.377 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf319.639 681.402 mo(leas)sh335.741 681.402 mo(t)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf339.615 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf341.876 681.402 mo(1000)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf361.795 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf364.057 681.402 mo(author)sh392.86 681.402 mo(s)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf396.788 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf399.05 681.402 mo(plotted)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf430.038 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf432.299 681.402 mo(agains)sh459.469 681.402 mo(t)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf463.343 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf465.604 681.402 mo(the)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf479.438 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf481.7 681.402 mo(jour)sh498.932 681.402 mo(nals)sh515.917 681.402 mo(')shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf518.648 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf520.88 681.402 mo(2014)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf540.543 681.402 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf71.333 693.357 mo(impact)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf100.825 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf103.058 693.357 mo(factor)sh127.936 693.357 mo(.)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf130.667 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf132.899 693.357 mo(Journals)[5.05238 4.9157 5.46156 3.8508 5.46156 4.9157 2.7307 0 ]xshUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf169.165 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf171.397 693.357 mo(that)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf189.421 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf191.653 693.357 mo(had)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf207.492 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf209.724 693.357 mo(computational)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf271.441 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf273.673 693.357 mo(biology)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf304.532 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf306.764 693.357 mo(articles)[4.91568 3.85083 3.82318 2.73071 4.36905 2.73071 4.36908 0 ]xshUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf337.431 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf339.663 693.357 mo(are)[4.91568 3.85083 0 ]xshUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf352.799 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf355.031 693.357 mo(included)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf391.077 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf393.309 693.357 mo(in)[2.73071 0 ]xshUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf401.501 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf403.734 693.357 mo(both)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf423.39 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.83348 0 0 -9.963 0 0 ]msf425.622 693.357 mo(datas)sh448.616 693.357 mo(ets)sh460.685 693.357 mo(.)shUUMMJN+MinionPro-Regular [9.83348 0 0 -9.963 0 0 ]msf463.416 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf465.648 693.357 mo(An)[7.47028 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf478.652 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf480.914 693.357 mo(ordinary)[4.98044 3.90152 5.53351 2.76666 5.53351 4.98044 3.90152 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf517.769 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf520.03 693.357 mo(leas)sh536.133 693.357 mo(t)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf540.006 693.357 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf71.333 705.807 mo(squares)[3.92844 5.25742 5.53349 4.98044 3.90153 4.42661 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf103.289 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf105.551 705.807 mo(regression)[3.90153 4.42661 4.98044 3.90153 4.42661 3.92844 3.92844 2.76666 4.98044 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf148.325 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf150.586 705.807 mo(was)[7.19328 4.98044 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf166.689 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf168.95 705.807 mo(per)sh182.812 705.807 mo(for)sh194.738 705.807 mo(med)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf212.998 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf215.26 705.807 mo(for)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf227.185 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf229.447 705.807 mo(each)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf248.814 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf251.076 705.807 mo(datas)sh274.372 705.807 mo(et.)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf285.439 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf287.7 705.807 mo(Bio:)[7.05585 2.76669 4.98044 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf305.27 705.807 mo(\000\001)sh%ADOBeginSubsetFont: DIAAAA+CMMI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /DIAAAA+CMMI10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 58 /period putdup 80 /P putdup 109 /m putdef/FontBBox {-32 -250 1048 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 442 453 466 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [72] def/StemSnapH [25 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D239BCB61DC78D83A8F223F832> |-/P <1C60D8A8C9B677ECB1F5884EF202194D27AFDA20C9C5AF9717AEDDA8FACCFA5CE5F06E7E735F3308B4CA613864C8BB9E998C2D16EBC620C6B43596E1DD40839888CA51D52E708072E18AA08B28E3CB1E6EF21FAD99F857CC70EE52D6669FD4FEF6D378C3644D9B3C83FB9CAAC301898C0568C7EDDC149173AA0D6632645524A8E317AEDEA6E137E747B687221C612ED78EEB9D5BC26FBD4832935A8A744A79B07DF310B6BFAA137B534BCCDB0286BC5B1A9F8DB00E7C57> |-/m <1C60D8A8C9B5907D10A606D745C9CB74E6BB88A0F3A9F0F60CD6AC0753DE1078F4F9FDB6B815479F3F8E4C08C2277611060995694159FCC2D78EC50D6606F47BAC8A1398DC80C5E684AC883370A5C0C368E90D6EC6CE9F28F4FF49EB4CD9003CC7F16FD0A458554531F31DF07949099D9F289F893C6C0EA6573FB2150C2F087255EF81A7EEB3F17E2AAA817353178C1356798885D696ECA769BAF77B77673C710522BBDF0D2C2EE2D19E2E6FF3F81BFD0244B25EB4D4D7D82E1EC8E49E10740271118963D0C05218ACE6C68295346EB12E8E166BADE2CEAD64A82CCCD6127BF1A62C2509EE150842123EC00626CE2680D411C5A10661C74C5C04837F5760E283E665B33789D5E578DC0371410F32760EB96A60355BA38A71507B81967F128B5C> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJP+CMMI10 /DIAAAA+CMMI10 findfont ct_VMDictPut/UUMMJP+CMMI10*1 [58{/.notdef}rp /period 21{/.notdef}rp /P 28{/.notdef}rp /m 146{/.notdef}rp]UUMMJP+CMMI10 nfUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf307.532 705.807 mo(m)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf316.279 705.807 mo(\000\001)sh%ADOBeginSubsetFont: XCAAAA+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /XCAAAA+CMR10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMR10.) def/Weight (Medium) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdup 50 /two putdup 52 /four putdup 53 /five putdup 54 /six putdup 55 /seven putdup 56 /eight putdup 57 /nine putdup 61 /equal putdef/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings10 dict dup begin/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C12484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A07BD51606BCA866C4BD24CA34E86B9CA5A529B664F3EEDB6B4AF8A2B994DB57B49473E162231CB943675FE63E9B92B8AEBB62FB22456EC4173C66EF6C2F34FFEC22ACAE77FFFAAD70F3754CADC0D2CF63CB6D286D930AEA5A613E5AB9CB004BEAEBADDD070EDAF4FF25FDB6421F540D58D2C7A3FC40290CBCF831BE1B89B7F> |-/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065FCDD01CF53F54AF89DAF22339F0A467CEB54960C4097888AD7CBC676C4076733D124E7B4C79B6D0E020E27E56B7A34848B450E2A23F2DF3103BCB5E75D289FAF3FD67A12C99B2EB0A8390A7DAB0DD8B7BFBE34B66044D4D46D3CB580B3DAECD8E50CD2549B4550A6A6B131A61C4> |-/five <1C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13CEDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9B18ADEA5D4AF0261ABF060D3E283C7B3B5EB39FF499721FD51203AE59E3BEA257DFD3E472FEF67221488EC8D1F355E2FAD057CA44A8B4BAD6C6C719C164907CBF9A6CC770DB0C7E58A37D2385E23F576BCFF94FFBFD8ADD4C5E6C32CD83ACEB77472D00FE1A4DC66393A99AC6BBD252B04C98B710149EA42B66ACE89D4FC4393F3A09165DF477ABCB0E8A8DB21E4278CA219EBCC9B067F95E336B85E37D444AD601D63D5ECEDC6A300696D98ABBC6ACC6E54D428BA49C3B1F> |-/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0FF8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B5DC520FCB2B0B7183A59B91F9C6B76BCB8A8CE135881FEEEB2BD853CC29FB7FDF436E095CF25C0CF3D1030E991D37D2BB2A05DD251695665BEB980DCF70EB0EFACB10E78F2D22C879E92110E4963EE6051EA84F4D334> |-/seven <1C60D8A8C9B7A73D3B2C65B72E385362D3FF7D42FC1474C3A39537FCE1B11D49C7F4AB33C92C477E32DCC2F1BD151153AF4EE29C83442C1DFE7C2987EA59B8FDB804F00FC474C14A4DFC5A3D044493631292AC23CA9773EED32B6950E181E1AF2402423A225C4B964BA7C80C0A352DE0DDD502> |-/eight <1C60D8A8C9B7A73D3B2B97F1414E4E14F801A059892814FA42E4E2C80EFDA659D9BB77F349463F4A00D8ED33975855544E68ADA715C46B48E5214EC1478071E2CA54580909701967B928DD6D384659775DC9744471AF4209ABE86CCF54E84B03EB8981900A33E230A5E176029A4F3431D5460DA2A76659C526F48B2652E37466C39C5889089BE6A19F3137FC6D1B485B848C27C668BF6C2B18756DC955F5DB5ABF7A74FD3DEC5789AB27D98224E42837> |-/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC855A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B6058F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F0889C3AE9CB13C1ACCD104A4ADC6B007505E3B778FEDE19DEF83A3068F5B724ADA3C344D842CC2CBF224CC820F9BF9DFC7E3B557C2AF89D9733BA75FFB6FA3D5E09792EE955B766D3FBD4F37E75E41F5A464FD3C1DC7611C4A6> |-/equal <1C60D8A8C9B6FC2D989577693E56B5D5D9CAF0920CAA1C7CAC692E5993F0507AA10E6DD4C22E48360AB64AABC8F79D72A37E3395EFF87B7331B16AA5497F9A03CF7F30718A4F8E51FE4C555962B834> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJQ+CMR10 /XCAAAA+CMR10 findfont ct_VMDictPut/UUMMJQ+CMR10*1 [48{/.notdef}rp /zero /.notdef /two /.notdef /four /five /six /seven /eight /nine 3{/.notdef}rp /equal 194{/.notdef}rp]UUMMJQ+CMR10 nfUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf318.541 705.807 mo(=)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf326.282 705.807 mo(\000\001)sh%ADOBeginSubsetFont: WCAAAA+CMSY10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /WCAAAA+CMSY10 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY10.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /minus putdef/FontBBox {-29 -960 1116 775} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 705] def/OtherBlues [-135 -124] def/BlueScale 0.04379 def/StdHW [40] def/StdVW [40] def/StemSnapH [40 56] def/StemSnapV [40 56] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/minus <1C60D8A8C9B6FC2D98F64FA8A84856380510A8B89CD4DE936C2002F9CA66334C70459EFC1D8016D52F4ACC8D584A> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJR+CMSY10 /WCAAAA+CMSY10 findfont ct_VMDictPut/UUMMJR+CMSY10*1 [32{/.notdef}rp /minus 223{/.notdef}rp]UUMMJR+CMSY10 nfUUMMJR+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf328.544 705.807 mo( )shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf336.284 705.807 mo(0)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf341.266 705.807 mo(:)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf344.026 705.807 mo(00264)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf368.934 705.807 mo(,)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf371.7 705.807 mo(\000\001)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf373.962 705.807 mo(P)sh%ADOBeginSubsetFont: GIAAAA+CMMI7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /GIAAAA+CMMI7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMMI7.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 62 /greater putdup 90 /Z putdup 122 /z putdef/FontBBox {-1 -250 1171 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-20 0 431 441 451 463 683 703] def/OtherBlues [-204 -194] def/BlueScale 0.04379 def/StdHW [32] def/StdVW [81] def/StemSnapH [32 36] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/greater <1C60D8A8C9B5822BBFFC89715034B8A68FE7DBB78831248DCE588C37C45851A73F7692D4143EF3B32D843E92E06AC029E6C25B4C9AA67FB77BD827E0A5BFDF97718729254E3868F5660F4E8B627456694E6D987857047A2A0E0FD9A0895E> |-/Z <1C60D8A8C9B6FF86896B7328288CDE91291009136DE2797A54CC6CD7C8C592B625D81665476F5AE4FBA2ADD40B65182181142DE0B2FF353582277FB273288944873BB5B2BA1620C6F4F13E3C21F36874AD2EB970ABB54635802E69D40E131F8E886F40FAB7BF5E47BBEFE90C4F7B5DA3C6D4D2CD0279281512C1D9AAF46AF5778DE96162B409D02743D372A2159A94DD1F> |-/z <1C60D8A8C9B79AB824C3FF06301A11B44795EBA132908BDDD157BBBE0CEE242C8D69ECA919CEAA1853464E661EEFE99713CFB373FBC791CF0F923975C3C8CA969B488CFDBF450146E96B47D88279A8ACAB4897DE2A2F344119285257312A0ECCE9D82E1EDE38CDC80CB1A5FA2628A3E23F4ACCEFCBA72BB071DC9B3AAFB5059999B7954F447F8644C686527C93D959E189513968B66307DDC94090F443D1B8FD2FB14E5E02EC5D78F32DFAE74FD66E8EB50A6097867557C006A987C1082B1B34FF30E7D77AA8693D33679BA7956B4DE6613D4EA601> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJS+CMMI7 /GIAAAA+CMMI7 findfont ct_VMDictPut/UUMMJS+CMMI7*1 [62{/.notdef}rp /greater 27{/.notdef}rp /Z 31{/.notdef}rp /z 133{/.notdef}rp]UUMMJS+CMMI7 nfUUMMJS+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf380.358 707.606 mo(Z>)[5.42853 0 ]xsh%ADOBeginSubsetFont: CDAAAA+CMSY7 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /CDAAAA+CMSY7 def/FontInfo 7 dict dup begin/Notice (Copyright \\050c\\051 1997, 2009 American Mathematical Society \\050<http://www.ams.org>\\051, with Reserved Font Name CMSY7.) def/Weight (Medium) def/ItalicAngle -14.04 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 106 /bar putdef/FontBBox {-15 -951 1251 782} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-24 0 683 708] def/OtherBlues [-139 -127] def/BlueScale 0.039625 def/StdHW [49] def/StdVW [49] def/StemSnapH [49 69] def/StemSnapV [49 69] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/bar <1C60D8A8C9B819470F62B1F6A019795978A8DB5839AED447C04AF9400EE9DEB2A6D2EE55EADDF7C0257A80E3EC0AD87A78CC> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/UUMMJT+CMSY7 /CDAAAA+CMSY7 findfont ct_VMDictPut/UUMMJT+CMSY7*1 [106{/.notdef}rp /bar 149{/.notdef}rp]UUMMJT+CMSY7 nfUUMMJT+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf392.004 707.606 mo(j)shUUMMJS+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf394.37 707.606 mo(z)shUUMMJT+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf398.169 707.606 mo(j)shUUMMJN+MinionPro-Regular [6.974 0 0 -6.974 0 0 ]msf400.535 707.606 mo(\000\001)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf402.116 705.807 mo(=)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf409.858 705.807 mo(\000\001)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf412.12 705.807 mo(0)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf417.101 705.807 mo(:)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf419.86 705.807 mo(0022)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf439.786 705.807 mo(.)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf442.553 705.807 mo(\000\001)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf444.814 705.807 mo(Comp:)[7.1933 4.98044 8.30014 5.53351 0 ]xshUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf473.588 705.807 mo(\000\001)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf475.85 705.807 mo(m)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf484.598 705.807 mo(\000\001)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf486.859 705.807 mo(=)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf494.601 705.807 mo(\000\001)shUUMMJR+CMSY10*1 [9.963 0 0 -9.963 0 0 ]msf71.333 717.762 mo( )shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf79.074 717.762 mo(0)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf84.0555 717.762 mo(:)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf86.815 717.762 mo(000789)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf116.704 717.762 mo(,)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf119.471 717.762 mo(\000\001)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf121.736 717.762 mo(P)shUUMMJS+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf128.129 719.561 mo(Z>)[5.42854 0 ]xshUUMMJT+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf139.775 719.561 mo(j)shUUMMJS+CMMI7*1 [6.974 0 0 -6.974 0 0 ]msf142.141 719.561 mo(z)shUUMMJT+CMSY7*1 [6.974 0 0 -6.974 0 0 ]msf145.94 719.561 mo(j)shUUMMJN+MinionPro-Regular [6.974 0 0 -6.974 0 0 ]msf148.306 719.561 mo(\000\001)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf149.888 717.762 mo(=)shUUMMJN+MinionPro-Regular [9.963 0 0 -9.963 0 0 ]msf157.629 717.762 mo(\000\001)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf159.891 717.762 mo(0)shUUMMJP+CMMI10*1 [9.963 0 0 -9.963 0 0 ]msf164.872 717.762 mo(:)shUUMMJQ+CMR10*1 [9.963 0 0 -9.963 0 0 ]msf167.631 717.762 mo(568)shUUMMJO+SFRM1000*1 [9.963 0 0 -9.963 0 0 ]msf182.576 717.762 mo(.)sh/1 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: IIAAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /IIAAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000006546670676d0000000000000780000005ee
676c7966fc8e64e3000087880000453268656164d7c8e4bb00000d700000
0036686865610000000000000da800000024686d74780000000000000dcc
000034d46c6f636103824dd8000042a0000034d86d617870000000000000
7778000000206e616d65176fbb8600007798000004307072657000000000
00007bc800000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259592d2cb0024354584b
53234b515a58381b2121591b21212121592d0000000100000005028f13b6
d80a5f0f3cf5081b080000000000a2e3272a00000000c3047090faaffd67
1000080c00000009000100010000000000010000073efe4e00431000faaf
fa7a1000000100000000000000000000000000000d350600010000000000
0239000002390000023900b002d7005e0473001504730049071d00770556
00580187005a02aa007c02aa007c031d004004ac0072023900aa02aa0041
023900ba0239000004730055047300df0473003c047300560473001a0473
00550473004d047300610473005304730055023900b9023900aa04ac0070
04ac007204ac00700473005a081f006f0556fffd0556009605c7006605c7
009e055600a204e300a80639006d05c700a4023900bf0400003705560096
0473009606aa009805c7009c063900630556009e0639005805c700a10556
005c04e3003005c700a105560009078d0019055600090556000604e30029
0239008b023900000239002703c100360473ffe102aa00590473004a0473
008604000050047300460473004b02390013047300420473008701c70088
01c7ffa20400008801c7008306aa00870473008704730044047300870473
004802aa00850400003f02390024047300830400001a05c700060400000f
040000210400002802ac0039021400bc02ac002f04ac00570556fffd0556
fffd05c70068055600a205c7009c0639006305c700a10473004a0473004a
0473004a0473004a0473004a0473004a040000500473004b0473004b0473
004b0473004b023900bd023900230239ffe5023900090473008704730044
047300440473004404730044047300440473008304730083047300830473
008304730049033300800473006b0473001b0473005102cd006d044c0001
04e3009905e5000305e50003080000e102aa00de02aa003d0464004e0800
00010639005305b4009a0464004e0464004d0464004d0473fffd049c00a0
03f4003805b4007a069600a1046400000231000002f6002f02ec002d0625
007f071d004404e3008104e3009e02aa00e804ac0072046400540473002e
0464003304e5001a047300860473008c080000ef0556fffd0556fffd0639
006308000081078d00520473fffc0800000002aa005302aa004701c70080
01c7006c0464004e03f4002f04000021055600060156fe390473ffe402aa
005c02aa005c040000170400001704730049023900b901c7006c02aa0047
080000250556fffd055600a20556fffd055600a2055600a20239008d0239
ffe0023900040239001506390063063900630639006305c700a105c700a1
05c700a1023900c602aa001902aa000602aa001d02aa002e02aa00e502aa
00a202aa006b02aa003a02aa004b02aa00280473000001c700030556005c
0400003f04e3002904000028021400bc05c7fffd04730049055600060400
00210556009e0473008704ac007204ac00a102aa006b02aa001902aa0021
06ac006b06ac006b06ac0021047300000639006d04730042023900b10556
005c0400003f05c700660400005005c700660400005004730046046bffe1
02aa00ee0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7
fffd055600a20473004b055600a20473004b0473009601c7004204730096
025500880473009a02ac008305c7009c0473008705c7009c047300870639
00630473004405c700a102aa008505c700a102aa003c0556005c0400003f
04e300300239002404e300300300002305c700a10473008305c700a10473
008304e300290400002804e3002904000028046800a40639006006620055
04a00048047400480391006204f000440329002e05300048046bffe10400
00b002eb005208c000330800004f040000990800004f040000990800004f
040000980400009807d5016a05c0009e04ab007204d5009d04ac007104d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
040000250600005505e100bf038d008904d5ffd90180008002d500860715
00610296000f04d5009202d6008302d6008304d500b202d600700556fffd
0473004a05c700660400005005c7006604000050055600a20473004b0556
00a20473004b055600a20473004b0639006d047300420639006d04730042
0639006d0473004205c700a40473008705c7001f047300060239ffce0239
ffce0239ffe40239ffe40239fff60239fff50239004b01c7001904000037
01c7ffa20556009604000088040000860473009601c7fffa05c7009c0473
008705c900a50473008b0639006304730044063900630473004405c700a1
02aa006b0556005c0400003f04e300300239000c05c700a10473008305c7
00a10473008305c700a10473008305c700a104730083078d001905c70006
055600060400002101c700890556fffd0473004a08000001071d00440639
005304e30081023900b9078d001905c70006078d001905c70006078d0019
05c70006055600060400002101c7008a02aaffe10473001b04cd005a06ac
006b06ac002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea
0557ffff0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7
ff780556fffd055600960558fffe055600a204e3002905c700a4023900bf
055600960558000b06aa009805c7009c0533006d0639006305c700a40556
009e04f2009404e30030055600060556000906af007f05fb006102390004
0556000604a00048039100620473008b01c7006b04600088049a008c0400
0019038700480473008b0473005c01c700890400008604000018049c00a0
0400001a0395005c04730044048d008303db0056046000880433001105b4
007a063f005701c7ffc9046000880473004804600088063f0057055700a2
06eb0032045500a105c000640556005c023900bf02390004040000370875
000d081500a406d5003104a900a10515000a05c000a00556fffd054000a7
05560096045500a1056b0000055600a20763000704d5004e05c000a105c0
00a104a900a10540001206aa009805c700a40639006305c000a00556009e
05c7006604e300300515000a061500520556000905eb009f055500570755
00a1078000a106550000071500a8054000a505c00055081500a405c7001a
0473004a0495005b0440008802eb008804ab00000473004b055afffb03ab
003204780087047800870380008604ab00180580008c046b008804730044
04550088047300870400005003aa0026040000210695004b0400000f0495
008a042b0045066b008d0695008d0500002805c0008b042b008404150030
060000890455001f0473004b0473000002eb00890415004b0400003f01c7
00880239000901c7ffa20740001306800083047300000380008604000021
046b008803e900a1034a008808000041089500a00585002d000001010000
001e0000003100000031000001010000007e0000007e0000008c0000008c
000001010000001000000101000001210310007d0000008c023300d20000
030b0000ff04023900b90481006904560032033100190411002d04d10096
01f9009b030f005f04ca009b04b8008c01f9009b0413002803b0005003b4
003c04ca009b04cf005001f9009b02d2003c0498005a043c00190488006e
045f007303b1001903d4000a0466009604130028058e00640524002803f2
009b03f2009b03f2009b01e3005a0356005a0686009b01f9ffac04130028
0413002803b4ff5703b4ff570448002d058e0064058e0064058e0064058e
006404810069048100690481006904560032033100190411002d04d10096
024b0000034a000004b8008c024b00000413002803b0005003b4003c04cf
005002d2003c0498005a0488006e045f007303d4000a0466009604130028
058e00640524002801f9009b0456003203b00050045f0073049b003c0000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da0043034d0079
01a8ffba0000004600000046000000460000004600000048000000460000
0046000000460435017c0435012e043500b7043500810435012c043500be
043500af043500810435009a043500db04350085028d00c1043500b30600
01000600010002420036060001000435009e04350098043500cb06000100
060001000600010006000100060001000000004606000100060001000600
01000600010006000100060001000600010006000100051bffba06000100
060001000600010005b5003a05b5003a01f4ffba01f4ffba060001000600
010006000100060001000481003604350036043dffba043dffba03e9004a
03e9004a067f0014077600140327ffba041effba067f0014077600140327
ffba041effba051b003204b500240300fff7060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000300000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473004a080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d007f028d005d0600
010004ee0015034d007901a8000e01d6ffdc01a8005601d6001003750032
0375003201a8002d01d60013051b003204b5002401f4ffba01f4ffba01a8
009301d6001305b5003a05b5003a01f4ffba01f4ffba024200000300fff7
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3005f02b3005f02b3
005f02b3005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba08c9003e08c9
003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba045a002a039a00360435ffba0327ffba
064f0027064f00270224ffba021affba04a7004604a700460224ffba021a
ffba04cf002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba
01a8ffba02b4002302b400230327ffba0327ffba043500450435004501f4
ffba01f4ffba024200360300fff7039affba0327ffba0375003203750032
051b003204b50024051b003204b5002401f4ffba01f4ffba045a004004ce
0049045a002604ce0039045a005304ce004a045a005304ce004a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000030060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0100ffba0800ffba1000ffba06dc0063053f004406d500a1055b00830000
fddc0000fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d
0000fd110000fc670000fd9d0000fbf50000fc720000fed50000fed50000
ff02041b00a006ac006b06ac00190000feb60000fd730000fe080000fca6
0000fe530000fd110000fbc80000faf40000faaf0000fc720000fbaa0000
fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe84
0000fdc20000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000
fd580000fc900000fd150000fc2c0000fc130000fc120000fb960000fb96
01c700880556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b0239006301c7001f023900ba01c7007c
063900630473004406390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406dc0063
053f004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004405c700a10473008305c700a10473008306d500a1055b0083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
00830556000604000021055600060400002105560006040000210556fffd
0473004a0239ffe201c7ffb0063900630473004405c700a10473008305c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
0000fefe0000fefe0000fefe0000fefe0455fffd02eb000c07630007055a
fffb04a900a10380008604a900a10380008605c700a4046b00880473fffd
040000140473fffd04000014055600090400000f05550057042b00450555
00a1047300870605006304730055063900600473004405b5003a01f4ffba
0224ffba021affba04a7004601f4009e01f4001001f4001b01f4001001f4
006b01f4fff90227ffce0000000f0000fff502aa00a402aa00a40000000e
00000056000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8
001d01d6fff501a8009301d6001303750032037500320375003203750032
051b003204b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba0481003604350036043dffba043dffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3
005f02b3003802b3003802b3004902b3004903e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e
08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435
ffba0327ffba064f0027064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba064f0027064f00270224ffba021affba064f
0027064f00270224ffba021affba064f0027064f00270224ffba021affba
04a7004604a7004604a7004604a70046093e0032093e00320740ffba0740
ffba067f0014077600140327ffba041effba04cf002d04cf002d0327ffba
0327ffba04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327
ffba0327ffba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba040d0047
040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d
0047040d004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba
043500450435004501f4ffba01f4ffba0435004504350045043500450435
0045043500450435004501f4ffba01f4ffba043500450435004504810036
04350036043dffba043dffba024200360300fff7031a001a031a001a031a
001a03750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
003203750032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba
0375003203750032051b003204b5002401f4ffba01f4ffba051b003204b5
0024067f0045067f0045067f0045067f004501a800280000fe290000fea2
0000ff300000ff1d0000ff120000ff920000fe7e08fc003208ad00320000
ffb50000ffb60000feed0000ff640000fe7e0000ff9f018d000002f6fffd
0000fe820000ff1004cd00320000ff580000ff580000ff640692003e0692
003e043fffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a
039a00360435ffba0327ffba034d007902b400230242003601f4ffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d067f001407760014
01f9009b0000fed902bc000003f2009b045afff504cefff5045a005304ce
004a045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a04350071043500ad045a000f04ce000f0473
001406110014054000a7047300860540000a0473000a05c7005105c70066
0400005005c7fffd067a00140540004a04730046047400480556006e04d5
005304e3ffc40639006d04fe000f070c008701c700830239001f05560096
0400008801c7001504000018072000a405c7ffb80473008b0639006006f2
00630557004406090014047300860556009e0556006b0400004f04f20094
030b00440239002404e300140239002404e3003005fb006105c700a1062e
00140400002104e300290400002804e3002904e30031045c0044045c003f
0473003c0473005503ab003203e5002404730087021400bc034e00bc04ac
0072023900b00aaa009e09c7009e08640046087f009606aa0096039c0083
09c7009c078e009c062b0087047300550556fffd0473004a0000fefe0556
fffd0473004a08000001071d00440639006d0473001a0639006d04730042
05560096040000880639006304730044063900630473004404e30029045c
004c01c7ffa20aaa009e09c7009e086400460639006d04730042084600a4
04f2009e05c7009c047300870556fffd0473004a0556fffd0473004a0556
00a20473004b055600a20473004b0239ff8a0239ff64023900040239fff6
0639006304730044063900630473004405c700a102aaffcc05c700a102aa
006805c700a10473007605c700a1047300830556005c0400003f04e30030
02390024045c0051037e001305c700a40473008705a600a404d6005e0486
005e04e30029040000280556fffd0473004a055600a20473004b06390063
047300440000fefd06390063047300440639006304730044063900630473
004405560006040000210473005704730048047300860473008604000013
0400005004730046047300460473005505e9005503ab004903ab0032050d
0032040f00440239ffb90473004204730042047800500402001904ef0019
0473008b047300870473008701c7001901c7008901c70089029e0000026e
001401c700830493008306aa008406aa008406aa00870473ffa60473008b
046c00870473004406530044063f00570466004402aaffe402aaffe402aa
ffe402aa008502aa008502aa008502aaffe40455008a0455008a0400003f
01c7ffa20214ffb901c7ff7202cb00000239000f0239002404730019048c
0044046000880400001a05c7000604000018042800190400002804540028
045c004c045c007904000024040000500400002404000050063900630440
0088040f004904780050046b0088032e000004000008033b008804730048
040000240400005007b7004607400046080b004605b30024036f002405c0
0024061c0013054a0083050f008303e2001e043800630311006403110064
0146ffce01eb006401eb000001eb000002ea006403d90000029100000187
005a02d7005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca0032
02ca003204ac007004ac007004ac006504ac006502aa012102aa00de02aa
005902aa012102aa001d02aa005902aa00de023900b6023900b602aa00fb
02aa00fb02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb0294
00000142006402b8003202a0000002ca0032031000960310009603100096
031000960310009602aa006202aa006202aa002802aa001d02aa00470457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000fec10000fec60000fdac
0000fed80000ff920000fee90000ff4c0000fea00000fec40000ffce0000
ff660000fea00000fed80000fed80000ff970000ff980000ff990000fff4
0000ff420000ff420000ff440000ff5f0000fe870000ffec0000ffa60000
ff510000ff510000ff510000fec90000ff1c000000000000fee90000ff4c
0000ff930000ff2a0000ff560000ffce0000fe870000febb0000fec40000
fec40000fed80000fed80000feb30000fec90000fdad0000fdac0000feb3
0000fec90000fdad0000fe160000fee60000ffa60000fe870000ff440000
feba0000ff230000ff9a0000fdac0000fe88000000000000feb00000ff98
0000fe930000ffa60000fe870000fdac0000ff660000ff440000feb00000
feb00000feb00000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb50000feb50000ffc30000feae0000fedc0000fec70000fec80000
fedc0000fe1e0000ff420000ff510000feb70000feb002aa00de02aa0059
02aa00fa049a008c04600088062e001407aa0000062e0014047b004c063f
005704cf0044063900630473004405c700660400005004e300a8033b0088
04ff0000043c0032060d000a049d0042072000a406aa0084056500630473
008b056400a40400000a0556006b0556006b04e0000504c5001905e5005f
046e004403b600140347002804cf00440495005b0400005001c7ffa20639
00600389004d03890050055600a205c000a10473004b047800870ab4006d
04fe00100639001404e70014079900bf05b500880558000b0400001a072e
00bf0590008806a10078057b007a086d00bf06f0008804d5006603ab001f
065f0039058200480639006004730044066d0009050c001a066d0009050c
001a0b010063091c004406aa005c04e600440987006d06d000500000fe37
0ab4006d04fe001005c7006604000050040700140000fea60000febc0000
feaa0000fead0000fc2b0000fc4c05c000a10478008705400004042b0014
0556009e04730087055d00a40464008804d5004e03ab003204a900040380
000005ef002904490028070900a4052f0088091800a006f6008806060066
042b005005c700660400005004e3003003aa002607670031058700260555
0057042b004506e4000a0554000a06e4000a0554000a023900bf07630007
055afffb055700a1046800860540001204ab001805c700a4046b008805c7
00a4046b008805550057042b004506aa00980580008c02aa002e0556fffd
0473004a0556fffd0473004a08000001071d0044055600a20473004b0605
00630473005507630007055afffb04d5004e03ab003204d5004e045c004c
05c000a10478008705c000a1047800870639006304730044063900600473
004405c0004a0415002b0515000a040000210515000a040000210515000a
0400002105550057042b0045071500a805c0008b0540004a0473004607bf
004a0703004607a6006606860053054d00660413005307c3001207470018
084600a4070700880639006d0478005005f90030055300260000ff430000
fec90000ff770000ffb00000ff470000ff560000ff740000fed70000feac
000000000000ff520000ff56000000000000feac0000fd9a000000000000
ff6a0000ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef
0000ff430000ff690000ff7c000000000000fdae0000ff8c000001020000
fefe0000fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd
0473004a05560096047300860556009604730086055600960473008605c7
00660400005005c7009e0473004605c7009e0473004605c7009e04730046
05c7009e0473004605c7009e04730046055600a20473004b055600a20473
004b055600a20473004b055600a20473004b055600a20473004b04e300a8
023900130639006d0473004205c700a40473008705c700a40473008705c7
00a40473008705c700930473006805c700a4047300870239ffdf01c7ff92
023900200239000605560096040000880556009604000088055600960400
00880473009601c7007e0473009601c7ffb90473009601c7ffa504730096
01c7ffa306aa009806aa008706aa009806aa008706aa009806aa008705c7
009c0473008705c7009c0473008705c7009c0473008705c7009c04730087
063900630473004406390063047300440639006304730044063900630473
00440556009e047300870556009e0473008705c700a102aa008505c700a1
02aa008505c700a102aa005e05c700a102aa00260556005c0400003f0556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
04e300300239002404e300300239002404e300300239ffff04e300300239
000e05c700a10473008305c700a10473008305c700a10473008305c700a1
0473008305c700a104730083055600090400001a055600090400001a078d
001905c70006078d001905c70006055600090400000f055600090400000f
055600060400002104e300290400002804e300290400002804e300290400
0028047300870239000305c70006040000210473004a01c7008904a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
039100620391006203910062039100620391006203910062061e0000061e
0000076c0000076c0000076c0000076c00000473008b0473008b0473008b
0473008b0473008b0473008b0473008b0473008b068f0000068f0000081f
0000081f0000081f0000081f0000081ffff3081ffff301c7008101c70081
01c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301
0000049100000491000004910000049100000491fff30491fff304730044
0473004404730044047300440473004404730044069d0000069d0000082d
0000082d000007c9000007c9000004600088046000880460008804600088
046000880460008804600088046000880682000007ae00000812000007ae
0006063f0057063f0057063f0057063f0057063f0057063f0057063f0057
063f0057065f0000065f000007ef000007ef0000078b0000078b0000078b
ffff078bffff04a0004804a0004803910062039100620473008b0473008b
01c7ffe601c7006804730044047300440460008804600088063f0057063f
005704a0004804a0004804a0004804a0004804a0004804a0004804a00048
04a000480556fffd0556fffd068200130682001306820013068200130682
0056068200560473008b0473008b0473008b0473008b0473008b0473008b
0473008b0473008b068f0000068f0000081f0000081f0000081f0000081f
0000081ffff3081ffff3063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd0556fffd0556fffd0556
fffd02aa00e502aa00fd02aa00e502aa000602aa00060473008b0473008b
0473008b0473008b0473008b068200000682000006f3000006f3000005c7
00a402aa001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca
01c7ff9301c7ff930239001a0239fff5036500000365000002aa001302aa
001302aa000604600088046000880460008804600088048d0083048d0083
0460008804600088055600060556000606e6000007180000061e000002aa
ffea02aaffea02aa0059063f0057063f0057063f0057063f0057063f0057
07650000069d000007270000065f000005fb006102aa00de02aa00e50473
000d05c7006605c7006606aa008705c70024095000a1078d00190556001f
04e30030080000290400003004c100660000ff530000ff530000ff530000
ff5301c7001901c7ffa2042b0005055600110574004602cbffa3057a0087
02f0ffc8057f000a057f000a02aa008402aa008402aa00c902aa00c902aa
00a002aa005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ffa50000
fed80000ff230000ff720000ff720000fee70000ffa50000ff530000ff53
0000ff530556009e0473008703f8001905fb0019071d0044044000190400
0050046900870469001903eb008703ab003201c700880361004104000088
033600100580008c04780087047300440400001304de004404de004404de
000d078d005003a800440473004404730044042b00840455001f0455001f
03aa00260460008804c6004405de004404c600440400001a05c700060400
002803ab0032036b003f04db001f02eb00880400001a04550088042b0084
05b4007a04ab001803a00000054f0000035100320351ffd1039800320348
00320348003203f80032036e0032015600690284002d0366003202d00032
0415003203710032036f003204180032030f003203590032039c00320376
0031036f003204fb000002fa003202fa00320304003204cc003203050064
0305003202f9003202f90032028c0032028c0032030400320142006402b6
006404950064030f00640305003202d50032030500320305003203060064
01c20032030f006403420032049500640292000003200000031500640292
0000030600320385003202bf00000142006401eb0064030f006402920000
0315006402920000030900320385003202bf000005ed00460a6600460613
00460689ffba0541ffba01e9003c045a00110000ff0d0000ff350000fece
0000feb70000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3
005f03e9004a03e9004a039affba0327ffba039affba0327ffba05ad0069
053d002d05fd009604dc005004e0003c05f6009b053f00280650002804ac
00720000fe3b0000fe660000fe660473fffc02aa005302d5ffce01a8ffba
01a8ffba01a8ffba01a8ffba0658001509c5004704000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5000305c7006606aa00980580008c074400830718
0046071800480556fffd05c70066040000140473000a04e300300400004f
0400002804a5001d000001020000ff420000febf0000ff3a0000ff53048d
000a05c7005105c7006605c70051045500a102eb00880000ff430000ff04
0000ffac02d200960000ff37021affba0250001e0000ff3a0000ff5b0000
ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff96
01f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba02b3003202b3003202b3005f02b3005f03e9
004a03e9004a0692003e0692003e043fffba043fffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba045a002a039a
00360435ffba0327ffba064f0027064f00270224ffba021affba064f0027
064f00270224ffba021affba067f0014077600140327ffba041effba067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
02b4002302b400230327ffba0327ffba02b4002302b400230327ffba0327
ffba043500450435004501f4ffba01f4ffba043500450435004501f4ffba
01f4ffba043500450435004501f4ffba01f4ffba040d0047040d004701a8
ffba01a8ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e
043fffba043fffba0473ff93047300460239ffbf06aaffd50473ffb70473
ff9102aaffa402aaffa40400ffff0239ffb90400002804730089030b0064
047400480649002401c7001901c700190473001e0460001e048c000a0473
0086047300460239001305b400420400008801c7fffc06aa00870473008b
0473008702aafffb0400003f0318ffa20400001a0400000f040000280473
004a04730048047300460473004b03ab004903ab00320534005501c70088
0400001301c7ffa204730083045c004c0304006402d5003202c9003302fc
0032028c003201d5003201d5000003040032031100640142001901420064
0142006401420019022a0000014200640142000902330064049300640493
0064030fffc9030f0064030e0064030500320300003202b800320142ffca
01c20032030f001d031a00320306006402d400640292000002de003202de
003202de003202f4003202ea00320000febc0000febc0000ff730000fea9
023900b902fa003202f900320305003202a0000002f900320639006d0556
fffd0473000f05c7006602aa004104a0004804a0004804a0004804a00048
04a0004804a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7
ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb046000880460008804600088
046000880460008804600088046000880460008801c7ffab01c7ffab01c7
ffbb01c7ffbb04600088046000880460008804600088045a005304ce004a
03a000130556001105c700290558000b055600a20473004b0400003301c7
ffa205e600630473004805c7000002aa000f055600060400002104000013
040000500400001301c700830455fffd02eb0001055600090400000f0556
00090400000f04d5005303ab00490540001204ab00180000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b
000a03eb004c040000130473000a01c700150473fff40556001105c700a1
047300190239ff8b05c700a404730087055600960400008804e300290400
00280400003b049e00a403670088053000480000ff530000ffbc0000fefe
0000fefe0000fea40000fea401c70088000000000000002a0000002a0000
002a0000002a0000002a0000002a0000002a0000002a0000002a0000002a
0000002a0000002a0000002a0000002a0000002a0000002a0000002a0000
0066000000d6000002920000036e0000059800000772000008d200000a8c
00000c6200000d0e00000fa2000011d6000011d6000011d6000011d60000
11d6000011d6000011d6000011d600001380000015180000165200001652
00001652000017080000170800001708000017ec000017ec00001a220000
1a2200001a2200001bcc00001d0000001e0600001ffa00001ffa000022a4
000022a4000022a4000022a4000022a4000022a4000022a4000022a40000
22a4000022a4000022a4000022a4000022a4000022a40000257600002576
0000272a000028de00002a9c00002bf000002bf000002d9400002e880000
2e8800002e8800002f84000031b40000337a0000353c0000370000003700
0000380600003bae00003cd200003e7000003e70000042da000042da0000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
453200004532000045320000453200004532000045320000453200004532
000045320000453200004532000045320000453200004532000045320000
4532000045320000453200004532000100000d3500f2003c009d00070002
0010002f005600000468041d000500020000000e00ae0000000300000000
006a0000000000030000000700ba006a0001000000000000003501240001
000000000003000e01590001000000000004000e01670001000000000006
000e01750001000000000007005d01830003000104090000006a01e00003
000104090001001c024a0003000104090002000e02660003000104090003
001c02740003000104090004001c02900003000104090006001c02ac0003
00010409000700ba02c800a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00410072
00690061006c00200069007300200061002000740072006100640065006d
00610072006b0020006f006600200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002ea9203230303620546865204d6f6e6f7479706520436f72706f726174
696f6e2e20416c6c205269676874732052657365727665642e5351595154
422b417269616c4d545351595154422b417269616c4d545351595154422b
417269616c4d54417269616c20697320612074726164656d61726b206f66
20546865204d6f6e6f7479706520436f72706f726174696f6e20696e2074
686520556e697465642053746174657320616e642f6f72206f7468657220
636f756e74726965732e00a9002000320030003000360020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00530051
0059005100540042002b0041007200690061006c004d0054005200650067
0075006c00610072005300510059005100540042002b0041007200690061
006c004d0054005300510059005100540042002b0041007200690061006c
004d0054005300510059005100540042002b0041007200690061006c004d
00540041007200690061006c002000690073002000610020007400720061
00640065006d00610072006b0020006f006600200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200069006e002000740068006500200055006e0069
007400650064002000530074006100740065007300200061006e0064002f
006f00720020006f007400680065007200200063006f0075006e00740072
006900650073002e00>
<b900540328b326181fd0bc032900e0032900020329b22b1d1fb90327031d
b23b1f40b80323b31215320f412d03200001002f0320000100200320006f
032000af032000bf03200004005f031e00010010031e007f031e0080031e
00af031e00bf031e00d0031e00060000031e0010031e0020031e006f031e
009f031e00e0031e0006031d031cb2201f1041270319007f03190002000f
031700ef031700ff03170003001f0317002f0317004f0317005f0317008f
0317009f03170006000f0317005f0317006f0317007f031700bf031700f0
0317000600400317b2923340b80317b28b3340b80317b36a6c3240b80317
b2613340b80317b35c5d3240b80317b357593240b80317b34d513240b803
17b344493240b80317b23a3340b80317b331343240b80317b32e423240b8
0317b3272c3240b80317b312253280b80317b30a0d32c04116031600d003
16000200700316000102c4000f0101001f00a0031500b003150002030600
0f0101001f00400312b32426329fbf03040001030203010064001fffc003
01b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11
329f414a02e200af02e200bf02e2000302e202e202e102e1007f02e00001
001002e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e0
02df02df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf
02dd00ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f
02dc000202dc02dc001002db000102db02db000f02da000102da02daffc0
02d3b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2
171b32b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb03
22003e00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d4
00b002d40002000002d4001002d4002002d4005002d4006002d4007002d4
0006006002d6007002d6008002d6009002d600a002d600b002d600060000
02d6001002d6002002ca002002cc002002d6003002d6004002d6005002d6
000802d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c800
17001f02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02
c6b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b3
24121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf
008f02bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800
001f02a600a20800406a1f4026434932402043493240263a3d3240203a3d
329f209f26024026969932402096993240268e923240208e92324026848c
324020848c3240267a813240207a813240266c763240206c76324026646a
324020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb7
24271f374f6b0120410f0277003002770040027700500277000402770277
027700f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc018052
0180a201806501807e01808101803c01805e01802b01801c01801e018040
0180bb0138000100800140b40180400180bb013800010080013940180180
ca0180ad018073018026018025018024018020013740b80221b2493340b8
0221b2453340b80221b341423240b80221b33d3e320f410f0221003f0221
007f0221000300bf022100cf022100ff0221000300400221b320223240b8
0221b3191e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02
c3008f02c300df02c30004002f02c3006002c300cf02c30003000f02c300
3f02c3005f02c300c002c300ef02c300ff02c3000600df02220001008f02
220001000f0222002f0222003f0222005f0222007f022200ef0222000600
bf022100ef02210002006f0221007f022100af02210003002f0221003f02
21004f0221000302c302c30222022202210221401d101c102b1048038f1c
010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d00
094109028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226
bb1f41150197001e0401001f013900260125001f013800730401001f0135
001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e
001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51c
b802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61f
b91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b
1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f44
1c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301c
bb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b8
0168402c07960758074f07360732072c0721071f071d071b071408120810
080e080c080a080808060804080208000814b8ffe0402b00000100140610
000001000604000001000410000001001002000001000200000001000002
010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b
58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358
b900010111858d1bb900010128858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa
1d59b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f0
45445958b9033e01f2455258b901f2033e4459594bb8015653205c58b900
2001f14544b9002601f145445958b9081e0020455258b90020081e445959
4bb8019a53205c58b9002501f24544b9002401f245445958b90909002545
5258b9002509094459594bb8040153205c58b173244544b1242445445958
b917200073455258b9007317204459594bb8040153205c58b1ca254544b1
252545445958b9168000ca455258b900ca16804459594bb03e53205c58b1
1c1c4544b11e1c45445958b9011a001c455258b9001c011a4459594bb056
53205c58b11c1c4544b12f1c45445958b90189001c455258b9001c018944
59594bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258
b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c45
6523456023456560234560b08b766818b080622020b163594565234520b0
03266062636820b003266165b059236544b063234420b13b5c4565234520
b003266062636820b003266165b05c236544b03b2344b1005c455458b15c
406544b23b403b4523614459b347503437456523456023456560234560b0
89766818b080622020b134504565234520b003266062636820b003266165
b050236544b034234420b147374565234520b003266062636820b0032661
65b037236544b0472344b10037455458b137406544b24740474523614459
004b5342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
7475737500184569444569444569447373737374757374752b2b2b2b7475
2b2b2b2b2b73737373737373737373737373737373737373737373737373
2b2b2b45b0406144737400004bb02a534bb03f515a58b1070745b0406044
59004bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a
515a58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc0
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b43
5c58b9008002bbb301401e017400735903b01e4b5402b0124b545ab01243
5c5a58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b73
7373732b2b2b2b2b002b2b2b2b2b2b004569447345694473456944737475
456944734569444569444569447374456944456944732b2b2b2b2b732b00
2b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b737475737475
2b2b2b742b2b000000>
[15985 1731 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 42 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>IIAAAA+ArialMT AddT42Char 
2 214 19 <00020055ffe7041105c00010001d0155b10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb4062019101c
b8fff0b202200bbeffe00016ffe00012ffe0000fffe0406204068702880b
880fc90e0509070b180245134c154a19431b54135c155c19521b6b076b0b
63136c156b19601b79027706760b7a0f870698079610c918da02d606d60b
db0f1a1a1e0405141e0d0d17730940212334300901000910090209901f11
7300b8ffc0400e212334200040000200901ec78b182b10f65d2bed10f65d
712bed003fed3fed3130015d71005d003838383838013838385959131012
363332161612151002062322272613101633323611102623220706556bd3
a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d30104013dac5fb3
feffdafefefec3ad98b7019dfe97eff00168016aee698600>IIAAAA+ArialMT AddT42Char 
2 878 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>IIAAAA+ArialMT AddT42Char 
2 1906 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>IIAAAA+ArialMT AddT42Char 
2 2700 25 <0002004dffe7041505c0001d002a014fb10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d0d06552120
0d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b
01d35f000100b802684009051e1b05221e140d01b80138401200b5257310
40212334301001001010100210b8fff0b70c0c065510902c0aba0138001e
013940163f175f176f177f170417160c0c065517160d0d065517b80224b3
2bc78b182b10f62b2b5deded10f62b5d712bedf4ed003fed3fedfd5de411
12392f5ded313001383838382b2b2b2b015d005d59010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>IIAAAA+ArialMT AddT42Char 
2 3342 27 <00030053ffe7041905c00017002300300200b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
1222b8ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0401e2920
0c001e18000c1b1e2ea02e012e12211e0605281e120d1e73bf090109b802
6740102b730f40202334300f01000f100f020fb80191b6321873b0030103
b80267b2247315b8ffc0400e2123342015401502159031c78b182b10f65d
2bedf45ded10f45d712bedf45ded003fed3fed12395d2fed393901111239
393130013838383838383838015d72710071595901262635343633321615
140607161615140023220035343613141633323635342623220603141616
333236353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef6916286
6b6885896667883a49905381a8ad827fa7031b29986aa0dadfa06697292c
c488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa800
>IIAAAA+ArialMT AddT42Char 
2 4566 36 <0002fffd0000055905ba0007000e0167b6010e0f10025502b8fff2b40f10
025502b8fff8b40d0d065502b8fff440590c0c0655090c0c0c0655050c0c
0c06552f10301067086809601088039010c905c606c010f0100b08055901
56025010680bb010f30cf30df30e09040c040d040e030b0a090504040c0d
0e080607070c09050408060c07010000b8fff8400f0c0c02550020070c14
07070c020303b8fff840150c0c02550320040c1404040c091e0505081e06
0306b80270400900080ce94002010202ba010b0001010b40120c20006507
03525004cf04df040390040104b80101400b500cc007df0c03900c010cb8
010140100f07cf07027f0780070207930fd6d7182b10f45d7119f45d71f4
5d7118ed10ed1a1910eded00183f3c1aed3fe43c10ed3c10ed87052e2b2b
7d10c4872e182b2b7d10c401111239391139398710c4c40ec4c4870510c4
c40ec4c43130014bb00b534bb01e515a58b4040f030807bafff00000fff8
38383838590172715d2b2b2b2b2b2b230133012303210313210326270607
030233d10258ddabfd9ba1d901f19946221c3305bafa4601bcfe44025a01
96b9778d8b00>IIAAAA+ArialMT AddT42Char 
2 4992 37 <00030096000004e905ba0011001d002a0113b90004fff440470b0b065504
044623562366237309840906691a75057009730b8305830b062716090318
272a1e161d090913121e2a2a2929001c1d1e0201021f1e1e110008182606
0c1010025506b8ffe640330f0f025506120d0d025506060c0c025506080b
0b0655060c0c0c065506140d0d0655065425260c1c101002550c0a0d0d02
550cb8fff440150b0b06550c1a2c1d1e200120000100201010025500b8ff
f6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8fffab40c
0c065500b8fff0400a0d0d0655005d2b3b5c182b10f62b2b2b2b2b2b5d3c
fd3c4e10f62b2b2b4dedf42b2b2b2b2b2b2bed003f3cfd3c3f3cfd3c1239
2f3c10fd3c392f1139111239011217393130015d005d2b33112132161615
140607161615140e0223012132373636353426262321112132373e023534
26262321960226a8cb736667858f5780c18cfe93013d81384a4b46829efe
db016d5e26435a3a54958cfead05ba59b9655ea63327bc8067b160310352
1116664d496f29fba0070c386b4652793100>IIAAAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>IIAAAA+ArialMT AddT42Char 
IIAAAA+ArialMT /CharStrings get begin
/period 17 def
/zero 19 def
/two 21 def
/four 23 def
/six 25 def
/eight 27 def
/A 36 def
/B 37 def
end
IIAAAA+ArialMT /Encoding get
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 65 /A put
dup 66 /B put
pop
end
%ADOEndSubsetFont
/UUMMJU+ArialMT /IIAAAA+ArialMT findfont ct_VMDictPut/UUMMJU+ArialMT*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B 189{/.notdef}rp]UUMMJU+ArialMT nfUUMMJU+ArialMT*1 [18 0 0 -18 0 0 ]msf74.3125 98.3088 mo(A)sh74.3125 329.627 mo(B)shUUMMJU+ArialMT*1 [9 0 0 -9 0 0 ]msf89.2456 122.099 mo(0.8)[5.004 2.502 0 ]xsh89.2456 163.535 mo(0.6)[5.004 2.502 0 ]xsh89.2456 204.971 mo(0.4)[5.004 2.502 0 ]xsh89.2456 246.407 mo(0.2)[5.004 2.502 0 ]xsh89.2456 287.843 mo(0.0)[5.004 2.502 0 ]xsh%ADOBeginSubsetFont: KIAAAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /KIAAAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000075a6670676d00000000000008880000056b
676c7966d6997db700008e580000325668656164d812f94f00000df40000
0036686865610000000000000e2c00000024686d74780000000000000e50
000034d46c6f6361028d208000004324000034d86d617870000000000000
77fc000000206e616d65cbd338c30000781c000004677072657000000000
00007c84000011d267646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002affc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200004
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440000404154403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0c05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b0035158b00425b00425012046b0106048
2046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b8fff060482046b8fff060
48590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b5323
4b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b212159
2d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab902a702a78a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b20201024360425959
2d00000100000005028f441a48255f0f3cf50819080000000000a2e33c1d
00000000c3047092fafafcfd100008150001000900010001000000000001
0000073efe4e00431000fafafa7a10000001000000000000000000000000
00000d350600010000000000023900000239000002aa00b803cb00700473
001204730046071d005905c7005a01e7005c02aa006b02aa0043031d001c
04ac00550239007502aa0073023900930239fffd04730056047300a20473
00330473004d047300260473005b04730057047300570473005304730041
02aa00c902aa00aa04ac005f04ac005504ac005f04e3006a07cd003d05c7
000005c7009605c7006105c700940556009504e300970639006205c70096
0239008c0473002305c7009904e3009d06aa009105c70098063900590556
00950639005905c700960556004a04e3002c05c700930556ffff078d0007
055600000556fffd04e3001602aa00920239fffd02aa002604ac00730473
ffed02aa002a0473004904e300870473005504e300540473004102aa0018
04e3005404e30092023900930239ffa20473008902390093071d007e04e3
009104e3005204e3008b04e3005b031d00870473003002aa001f04e3008d
0473000b063900090473000c0473000e04000022031d003c023d00b0031d
002d04ac004305c7000005c7000005c700610556009505c7009806390059
05c700930473004904730049047300490473004904730049047300490473
005504730041047300410473004104730041023900920239ffe90239ffcd
0239ffd004e3009104e3005204e3005204e3005204e3005204e3005204e3
008d04e3008d04e3008d04e3008d0473004403330056047300540473000d
0473003b02cd00420473fffe04e3008b05e5fff705e5fff7080000d802aa
00bb02aa0005046400310800ffaa0639003f05b40098046400320464003c
0464003c04730001049c006f03f4002c05b4007a069600a1046400000231
000002f6002502ec001a06250037071d005804e3005704e3006502aa00c3
04ac0055046400540473ffec0464001f04e5001a047300600473006a0800
00c905c7000005c700000639005908000048078d00580473fffc08000000
040000840400006902390098023900720464003103f4002f0473000e0556
fff70156fea90473ffe002aa004b02aa004b04e3001f04e3001f04730044
0239009302390075040000710800000105c700000556009505c700000556
0095055600950239006a0239ffae0239ffbf0239ffc10639005906390059
0639005905c7009305c7009305c700930239009302aa000302aafff302aa
001302aa001a02aa00cd02aa009102aa002602aa006002aa003902aa0003
04e3000a0239000a0556004a0473003004e3001604000022023d00b005c7
fffd04e300530556fff70473000e0556009504e3008b04ac005504ac006d
02aa005b02aa001902aa002806ac005c06ac005c06ac0028047300000639
006204e300540239008c0556004a0473003005c700610473005505c70061
0473005504e30054046bffed02aa00c805c700000473004905c700000473
004905c7009405c0005105c7fffd05560095047300410556009504730041
04e3009d0239007904e3009d0315009504e3009a03d5009005c7009804e3
009105c7009804e300910639005904e3005205c70096031d008705c70096
031d00500556004a0473003004e3002c02aa001f04e3002c03d5001e05c7
009304e3008d05c7009304e3008d04e300160400002204e3001604000022
04cf009a063900560691005604eb004e04da004e03cc004e0579004e0392
003005b9004e046bffed04d500b8032b004f08c000290800004f04000099
0800004f040000990800004f040000980400009807d5016a05c7008f04ab
005504d5009d04ac005504d5022204d5010505abffe9050001c905ab027e
05abffe905ab027e05abffe905ab027e05abffe905abffe905abffe905ab
ffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
027e05ab01c005ab01c005abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905ab02d605ab006605abffea05d5ffff
04d500920800000007eb013007eb012007eb013007eb012004d500b204d5
008004d5002a082b0198086b01b807550010060000f40600006f0440003a
0540003704c0003f0415004004000025060000550647008c0473009005ab
ffc701eb008d03d500860715002303e9001804d5009202d6005c02d6005c
04d500b202d6004d05c700000473004905c700610473005505c700610473
005505560095047300410556009504730041055600950473004106390062
04e300540639006204e300540639006204e3005405c7009604e3009205c7
000504e300190239ffba0239ffbb0239ffda0239ffda0239ffe10239ffe2
0239004802390047047300230239ffa205c70099047300890473008d04e3
009d0239ffed05c7009804e3009105c9009c04e3008e0639005904e30052
0639005904e3005205c70096031d002a0556004a0473003004e3002c02aa
000705c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d078d0007063900090556fffd0473000e0239008d05c700000473
00490800ffaa071d00580639003f04e3005702aa00c9078d000706390009
078d000706390009078d0007063900090556fffd0473000e0239009502aa
ffd70473000d04cd005a06ac005c06ac002906ac003006ac002f02aa00bc
02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb03caffbb0699
ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c0000005560095
04e3001605c700960239008c05c700990556000006aa009105c700980526
00660639005905c7009a0556009504cd005a04e3002c0556fffd05560000
06790056066a00620239ffcc0556ffff04eb004e039c004e04e3008e0239
008204a8006c04e200900473000f03af004e04e3008e0453004e02390093
0476008e0473000f04e500900473000b0390004e04e3005204f300760429
004e04a80076049b00110607007606c2004e0239ffcd04a8007604e3004e
04a8007606c2004e055a00970715002f048900a405b100580556004a0239
008c0235ffca0473002308c0001a0880009d0700003704e2009a04fa0000
05c0009905c7000005c0009b05c70096048900a405b3fffa05560095073b
00170503002c05c0009905c0009904e2009a059d002006aa009105c70096
0639005905c000990556009505c7006104e3002c04fa000006d400590556
000005d8009a059f007d080a009a0827009a06f5001a07d5009d05c0009b
05b100570840009605c000040473004904f1005c04eb0096035500880514
fff90473004105acffff03fa001804eb008c04eb008c0401008805150019
05eb009b04d5008804e3005204d5008804e3008b0473005503eb00150473
000e070000540473000c04eb008904a5007206ab008c06c0008d05d50028
06d5009504eb0099046b003806d5009104abfffb0473004504e300000355
0088046b005104730030023900930240ffd00239ffa207c000180740008c
04e30000040100880473001204d5008803e50096039300880800004108eb
00a306200030000001010000001e0000003100000031000001010000007f
0000007e0000008c0000008c000001010000001000000101000001210393
007d0000008c026500c8000003020000ff0102aa00c904a90059049b0041
03a7000a0466003204ea0082022f0087034e005a04ed00870503007d022f
0087042c002803ed004b03f8004104e30087050a0037022f00870316004b
04e800500459000a04c0006404b2006403ff000a0418000a04950082042c
002805b8005a0563002d045e0087045e0087045e00870236005004090050
068b0087022fffac042c0028042c002803f8ff1603f8ff160479003205b8
005a05b8005a05b8005a05b8005a04a9005904a9005904a90059049b0041
03a2000a0466003204ea008202950000038100000503007d02950000042c
002803ed004b03f80041050a00370316004b04e8005004c0006404b20064
0418000a04950082042c002805b8005a0563002d022f0087049b004103ed
004b04b2006404db00410000ffdc0000ff250000ffdc0000fe51028d00ab
028d00a002da004303c0007e0196ffba0000004600000046000000460000
004600000048000000460000004600000046047e0188047e0150047e0104
047e009e047e012d047e00ea047e00d5047e009c047e00bc047e00ee0435
0085028d00c1043500b3060001000600010002be005806000100047e00a5
047e00bd047e00de06000100060001000600010006000100060001000000
004606000100060001000600010006000100060001000600010006000100
0600010004e6ffba0600010006000100060001000532003905320039022c
ffba022cffba06000100060001000600010006000100049e003404780030
0430ffba0430ffba0376000a0376000a060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba05280097046f000a03520003
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
000000300000004600000046000000400000004606000100060001000000
ffdc0000fe510000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ffdc0000ff160000ffdc0000ff200000
ffdc0473002d080000000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d007f028d00670600010005a0002e03c0007e01e800000207ffc3
01bc005e01e0fffa039c0006039c000601bc005e01e0001a05280097049e
0011022cffba022cffba01bc008801e0001a0532003905320039022cffba
022cffba02be0036035200030532003905320039022cffba022cffba0532
003c0532003c022cffba022cffba049e0034047800300430ffba0430ffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba02be006902be006902be006902be00690376000a0376000a0376000a
0376000a073200400732004004deffba04deffba073200400732004004de
ffba04deffba0880004008800040062cffba062cffba0880004008800040
062cffba062cffba0430ffba0430ffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0610002f0610002f0270ffba0298ffba04e6
002704e600270270ffba0298ffba045400290454002902e2ffba02e2ffba
039c0023039c002301e0ffba01e0ffba02e2002102e200210352ffba0352
ffba0454003e0454003e022cffba022cffba02be00580352000303c0ffba
039cffba039c0006039c000605280097046f000a05280097049e0011022c
ffba022cffba0454000004c4000003e400220454001a03e400220454001a
03e400220454001a06000100060001000000004600000046060001000600
010006000100000000460000004606000100060001000000004800000046
060001000600010006000100000000460000004600000046000000460000
004000000030060001000000004600000046060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100028d00ca028d
00c7028d00c6060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010002be00690100ffba0800ffba1000ffbb06d3005905b0
005206a3009305cb008d0000fd880000fbc10000fc5f0000fe310000fcad
0000fd550000fe260000fdf10000fd180000fc690000fd950000fbe00000
fc700000fed40000fecd0000fea0041b007806ac005c06ac00190000fe45
0000fd550000fda60000fc5f0000fe250000fd180000fbe00000fafa0000
fb360000fc700000fb870000fb9b0000fcce0000fc540000fbc30000fc94
0000fbf50000fdb00000fe590000fd7e0000fc820000fd340000fe500000
fe460000fcd10000fd3e0000fd020000fc3a0000fce90000fc260000fc07
0000fc2f0000fb9e0000fb760239009305c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c70000047300490556009504730041
055600950473004105560095047300410556009504730041055600950473
00410556009504730041055600950473004105560095047300410239006a
0239005d0239008c023900930639005904e300520639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e3005206d3005905b0005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005205c7009304e3008d05c70093
04e3008d06a3009305cb008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d0556fffd0473000e0556fffd0473000e
0556fffd0473000e05c70000047300490239ffca0239ffca0639005904e3
005205c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d0000fef90000fef90000fef40000feef0489
fffd03550007073b001705acffff04e2009a0401008804e2009a04010088
05c7009604d5008804730001047300120473000104730012055600000473
000c059f007d04a50072059f009c04e3009205cf00590473004c06390056
04e3005205320039022cffba0270ffba0298ffba04e60027022c0065022c
0016022c0016022c0011022c0043022cffd20000fef00000000f0000fff5
02aa009002aa0090000000000000005e0000005e0000ffcb01bc000f01e0
ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0001a039c0006
039c0006039c0006039c000605280097046f000a0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba0532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba049e0034047800300430ffba0430ffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba049e0034047800300430ffba0430ffba02be004f02be004f02be0069
02be006902be006902be006902be004f02be004f02be006602be006602be
006902be006902be006902be006902be002f02be002f02be002202be0022
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a073200400732004004deffba04deffba073200400732004004de
ffba04deffba073200400732004004deffba04deffba0880004008800040
062cffba062cffba0880004008800040062cffba062cffba0430ffba0430
ffba0454003403c000460454ffba02e2ffba0610002f0610002f0610002f
0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610002f0610
002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba04e6002704e6002704e6002704e60027093e
0032093e00320740ffba0740ffba060e00290708002902e2ffba0456ffba
045400290454002902e2ffba02e2ffba045400290454002902e2ffba02e2
ffba045400290454002902e2ffba02e2ffba060e00290708002902e2ffba
0456ffba060e00290708002902e2ffba0456ffba060e00290708002902e2
ffba0456ffba060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba039c0023039c002301e0ffba01e0ffba039c0023039c
002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0ffba039c0023
039c002301e0ffba01e0ffba0454003e0454003e022cffba022cffba0454
003e0454003e0454003e0454003e0454003e0454003e022cffba022cffba
0454003e0454003e049e0034047800300430ffba0430ffba02be00580352
0003031a001a031a001a031a001a039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c000605280042046fffd905280097
046f000a022cffba022cffba039c0006039c000605280097046f000a022c
ffba022cffba05280097046f000a067f0044067f0045067f0044067f0045
01a800280000fe290000fe8c0000ff250000ff230000fefa0000ff7a0000
fe5908fc003208ad00320000ffb50000ffb60000fef00000ff590000fe59
0000ff8c01b4000002f700000000fe850000ff0704cd00320000ff580000
ff580000ff59073200400732004004deffba04deffba0880004008800040
062cffba062cffba0454003403c000460454ffba02e2ffba03c0007e02e2
002102be0058022cffba0290ffba01f4002f01f4003b01f4001201f400b1
01f4006d060e002907080029022f00870000fec803500000045e008703e4
fff50454fff503e400220454001a03e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a047e0072047e
00bd03e4000f0454000f04e3001b06b1001e05c0009b04e3008705c0000a
04e3000a05c7006905c700610473005505c7fffd06b3001e05c0005c04e3
005404da004e055600660503006f04e3ffac063900620518000207720092
023900930239000705c70099047300890239001b0473000f07ef009605c7
ffad04e3008e063900560718005905f300550641001e04e3008b05560095
055600640473006304cd005a02e1001e02aa001f04e3001802aa001f04e3
002d066a006205c70093062900000473000e04e300160400002204e3003a
04e300590436002a04360039047300330473005b03fa001e04a2001f04e3
008b023d00b003fb00b004ad005602aa00b80aaa009409c7009408e30054
0956009d071c009d047200930a3a009808000098071c00910473004c05c7
0000047300490000fefe05c70000047300490800ffaa071d005806390062
04e300240639006204e3005405c70099047300890639005904e300520639
005904e3005204e3003a043600220239ffa20aaa009409c7009408e30054
0639006204e30054084300960552009505c7009804e3009105c700000473
004905c7000004730049055600950473004105560095047300410239ff37
0239ff2d0239fff40239ffe60639005904e300520639005904e3005205c7
0096031dffcd05c70096031d008005c7009304e3006705c7009304e3008d
0556004a0473003004e3002c02aa001f049e002e0429004905c7009604e3
0092059f009c050c0052050c005204e300160400002205c7000004730049
05560095047300410639005904e300520000fefd0639005904e300520639
005904e300520639005904e300520556fffd0473000e0473004504e30054
04e3008204e30087047300340473001404e3005404e300540473004c0641
004c03fa004f03fa001805870018048a005202aaffc404e3005404e30054
04b000520473000f04ce000f04e3008a04e3009204e300920239001b0239
00930239009302a8000002d900140239009304d40093071d0085071d0085
071d007e04e3ffa604e3009104eb008c04e3005206ab005206c2004e05ff
0052031dffe6031dffe6031dffe6031d0087031d0087031d0087031dffe6
04ab008a04ab008a0473003002aaffc402aaffc402aaff9b0451001e02aa
001902aa001f04e3001b04f8004904a8009104730012063900090473000f
0491000f0400002205700022043600220436002204730042047300550473
0042047300550639005904eb0096048a004f04b0005204d5008803ab001e
04730014039e008804e3005b0473004204730055083f00540789005409af
00540682001f0446001f0698001f06f4001806350093058a00930445001e
0482008802f1003202f10032018effe20204003202040000020400000300
0032042f000002e2000001e7005c03cb0070023900980239007502390094
02aa00f302aa00f3030000320300003204ac005f04ac005f04ac002a04ac
002a02aa012102aa00bb02aa002a02aa012102aa001302aa002a02aa00bb
02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a602aa00a602aa
001302aaffe102aafffb02ed0000012100320302003202ee000003000032
031000960310009603100096031000960310009602aa006202aa006202aa
000302aa001d040000690457009604570096045700960457009604570043
04570043045700430457004304570043031000430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310002f0457001a0457001a0457001a0457001a0457001a0310
001a04570042045700420457004204570042045700420310004204570096
045700960457009604570096045700420457004204570042045700420457
0042031000420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f0310002f045700260457
002604570026045700260457002603100026045700420457004204570042
045700420457004203100042045700960457009604570096045700960457
004204570042045700420457004204570042031000420457002604570026
045700260457002604570026031000260457002304570023045700230457
002304570023031000230457002f0457002f0457002f0457002f0457002f
0310002f0457004b0457004b0457004b0457004b0457004b0310004b0457
009604570096045700960457009604570042045700420457004204570042
04570042031000420457001a0457001a0457001a0457001a0457001a0310
001a0457002404570024045700240457002404570024031000240457002f
0457002f0457002f0457002f0457002f0310002f0457004e0457004e0457
004e0457004e0457004e0310004e04570096045700960457009604570096
0000feaf0000febf0000fdb50000fec80000ff780000feb10000ff3d0000
fe6f0000feae0000ffce0000ff660000fe6f0000fec80000fec80000ff68
0000ff680000ff68000000000000ff1f0000ff1f0000ff440000ff5f0000
fe870000ffec0000ff9c0000ff510000ff510000ff510000febf0000ff15
000000000000feb10000ff3d0000ff6b0000fef20000ff470000ffce0000
fe870000febb0000feae0000feae0000fec80000fec80000fea60000febf
0000fdb70000fdb90000fea60000febf0000fdb50000fe1f0000fee20000
ff9c0000fe870000ff440000feba0000ff230000ff9a0000fdb90000fe3b
000000000000fea70000ff680000fe170000ff740000fe870000fdb90000
ff660000ff440000fea70000fea70000fea70000ff030000ff520000fd1f
0000ff530000ff530000ff530000feb10000feb00000ffa10000fe8c0000
feb80000feaf0000fea20000feba0000fdf40000ff190000ff2d0000fe8c
0000fe8802aa00bb02aa002a02aa00c804e2009004a80076062900000802
00000629000005ff005206c2004e056900140639005904e3005205c70061
0473005504e30097039e008806030000043c001d066f000a04e2000a07ef
0096071d0085059f007d04e3008a059f009c04d7000a0556006405560064
0524001404d4000a05e1005504a0004b040e0014038400280569001404f1
005c047300550239ffa20639005603d4005103d400510556009505c00099
0473004104eb008c0a3d0059063a001406f4001a059f001b07ce008c065e
0093055600000473000b0768008c066700930679005606070076089e008c
07d800930503004603fa004306790056060700760639005604e300520685
ffff052c000b0685ffff052c000b0b3a005909bd005206840055051a004b
0a3d0059073500550000fe370a3d0059063a001405c700610473005504ac
000f0000fea60000feb10000feaa0000fead0000fc2b0000fc4c05c00099
04eb008c05c0001104eb001b0556009504e3008b059f009c04c900880503
002c03fa001804e200110401000d0617001a04fc00280709009605b60088
09020099075f008805c70061049f005505c700610473005504e3002d03eb
001506d2002c05830015059f007d04a5007206da000a056d000a06da000a
056d000a0239008c073b001705acffff059d009a04c80088059d00200515
001905c7009604d5008805c7009604d50088059f007d04a5007206aa0091
05eb009b02aa001a05c700000473004905c70000047300490800ffaa071d
0058055600950473004105cf00590473004c073b001705acffff0503002c
03fa00180503002c0436002205c0009904eb008c05c0009904eb008c0639
005904e300520639005604e3005205b10057046b003804fa00000473000e
04fa00000473000e04fa00000473000e059f007d04a5007207d5009d06d5
009505c0005e04e30054083e005e077a005407ad004606c4004305430046
044a0043081a002007a5001908430096076600880639006204b000520620
002d059b00150000ff430000fec90000ff770000ffb00000ff470000ff56
0000ff740000fed70000feac000000000000ff520000ff56000000000000
feac0000fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac
0000ff7f0000ff560000fdef0000ff430000ff690000ff7c000000000000
fdae0000ff8c000001020000feef0000feef0000fefd0000fef90000ff53
0000fef80000fef905c700000473004905c7009604e3008705c7009604e3
008705c7009604e3008705c700610473005505c7009404e3005405c70094
04e3005405c7009404e3005405c7009404e3005405c7009404e300540556
009504730041055600950473004105560095047300410556009504730041
055600950473004104e3009702aa00180639006204e3005405c7009604e3
009205c7009604e3009205c7009604e3009205c7004e04e3003b05c70096
04e300920239ffd20239ffd20239001b0239ffce05c700990473008905c7
00990473008905c700990473008904e3009d0239009304e3009d0239ffeb
04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e06aa0091071d
007e06aa0091071d007e05c7009804e3009105c7009804e3009105c70098
04e3009105c7009804e300910639005904e300520639005904e300520639
005904e300520639005904e300520556009504e3008b0556009504e3008b
05c70096031d008705c70096031d008705c70096031d008705c70096031d
00590556004a047300300556004a047300300556004a047300300556004a
047300300556004a0473003004e3002c02aa001f04e3002c02aa001f04e3
002c02aa001f04e3002c02aa001f05c7009304e3008d05c7009304e3008d
05c7009304e3008d05c7009304e3008d05c7009304e3008d0556ffff0473
000b0556ffff0473000b078d000706390009078d00070639000905560000
0473000c055600000473000c0556fffd0473000e04e300160400002204e3
00160400002204e300160400002204e3009202aaffde063900090473000e
047300490239008d04eb004e04eb004e04eb004e04eb004e04eb004e04eb
004e04eb004e04eb004e05c7000005c7000006f3fff206f3000006f3fff2
06f3000006f3004306f3004303cc004e03cc004e03cc004e03cc004e03cc
004e03cc004e061efff2061e000007aefff207ae000007aefff207ae0000
04e3008e04e3008e04e3008e04e3008e04e3008e04e3008e04e3008e04e3
008e068ffff2068f0000081ffff2081f0000081ffff2081f0000081f0014
081f001402390090023900900239ffb60239ffc40239ffde0239ffec0239
ffb30239ffc00301fff2030100000491fff2049100000491fff204910000
049100140491001404e3005204e3005204e3005204e3005204e3005204e3
0052069dfff2069d00000855fff20855000007c9fff207c9000004a80076
04a8007604a8007604a8007604a8007604a8007604a8007604a800760682
000007fe00000862000007aefff306c2004e06c2004e06c2004e06c2004e
06c2004e06c2004e06c2004e06c2004e06cefff206ce00000886fff20886
000007fafff207fa000007fafff307fafff304eb004e04eb004e03cc004e
03cc004e04e3008e04e3008e0239ffe70239008d04e3005204e3005204a8
007604a8007606c2004e06c2004e04eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f3
000006f3fff206f3000006f3004306f3004304e3008c04e3008c04e3008c
04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2068f0000081f
fff2081f0000081ffff2081f0000081ffff3081ffff306c2004e06c2004e
06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce
00000886fff20886000007fafff207fa000007fafff307fafff304eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c7
000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa00dc02aafff3
02aafff304e3008c04e3008c04e3008c04e3008e04e3008c06e6000006e6
0000075700000757000005c7009602aafff202aafff202aafff30239ffe5
0239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe80239ffde03c9
000003c9000002aa000002aa000002aafff304a8007604a8007604a80076
04a8007604f3007604f3007604a8007604a800760556fffd0556fffd06e6
ffd8074affdd061e000003b8fff403b8fff402aa002a06c2004e06c2004e
06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd106ceffdd066a
006202aa00bb02aa00dc0473000a05c7006105c70061071d007e05c70021
09cd0096078d000705c7002004e3002d08b000140400003004c100660000
ff530000ff530000ff530000ff530239001b0239ffa20473000005560012
06b3005403fe005706ab0091040c001f05d6ffe605d6ffe602aa008402aa
008402aa00c902aa00c902aa009102aa002a02aaffc502aaffc302aafff3
02aa00c902aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa
003a0000ff730000ff9d0000fec80000ff230000ff720000ff720000fee7
0000ff9d0000ff530000ff530000ff530556009504e3008b04b500000635
0000071d006104eb000f04730055049900910499001b0401008c03fa0018
02390093040f00490476008e039e000e05eb009b04eb008c04e300520473
003404f1005204f1005204f10021078d00540492004b04e3005304e30053
04e9008c04abfffb04abfffb03eb001504a8007604e300510624005104e0
00510473000b063900090400002203df002203f2004b04ec001403550088
0473001204d5008804e9008c060700760515001903e300000591000003a2
003203a2000003a30032035500320355003204030032037c003201720055
02de003203b00032031e003204220032037700320378003204260032037a
0032035b003203ac003203770032037b0032051400000305003203050032
0321003204b600320321003203210032030200320302003202cf003202cf
0032032000320121003202ca00320484003402f2003203480032030a0032
03490032034900320320003201bc000a02f20032034200320484003202e9
0000034c000a031b003202e900000343003203da00320308000001210032
0204003202f2003202e90000031b003202e900000342003203da00320308
000005ed00460a980046061300460689ffba0541ffba01e9001e04540010
0000ff0d0000ff350000fece0000feb70000fec90000ffc70000ff4f0000
ff9e0000fef002be006902be00690376000a0376000a03c0ffba039cffba
03c0ffba039cffba05c8003905920032061600820519004b05240041060f
008705580028068f002d04ac00550000fe3b0000fe660000fe680473fffc
0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba06d0002e0984
00230400000008000000040000000800000002ab00000200000001550000
0473000002390000019a000000ab00000000000005e5fff705c7006106aa
009105eb009b0760008d07a1005407a1005b05c7000005c7006104730014
04e3001104e3002c047300390400002205290042000001010000ff420000
fead0000ff3a0000ff5304f3000a05c7006905c7006105c70069048900a4
035500880000ff430000ff010000ffac0316007d0000ff370298ffba033d
001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000ff4a0000fe9e
0532003905320039022cffb6022cffb60532003c0532003c022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be
004f02be006902be00690376000a0376000a073200400732004004deffba
04deffba0454003403c000460454ffba02e2ffba0454003403c000460454
ffba02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f
0270ffba0298ffba0610002f0610002f0270ffba0298ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba02e2002102e200210352ffba0352ffba02e2
002102e200210352ffba0352ffba0454003e0454003e022cffba022cffba
0454003e0454003e022cffba022cffba0454003e0454003e022cffba022c
ffba039c0023039c002301e0ffba01e0ffba0376000a0376000a0376000a
0376000a073200400732004004deffba04deffba04e3ffc104e3005402aa
fff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473ffff02aaffda
0400002104e3008302f0003204dc004e06fb001f0239001b0239001b04e3
001404a8001404f8001404e3008704e3005402aa00180625005404730089
02390070071d007e04e3009104e3008b031d00660473003003baffc40473
000b0473000c040000220473004904e3005404e300540473004103fa004f
03fa0018053e0051023900930473003402aaffc404e3008d043600220321
0032030a0032030a00060348003202cf003201f0000a01f0000003200032
02f100320174000a01210032012100320174000a02760000018e00320150
0032024900320484003404840032035f0000035f003202fa003203480032
04030032030200320239000001bc000a0340000a035e003202ea003202ea
003202e9000002e4003202e4003203be0032030a003202e800320000fe92
0000fe920000ff730000fe9f02aa00c903050032030200320348003202ee
0000030200320639006205c700000556001e05c7006102aa004104eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e0239
ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239ffc40239ffc4
04a8007604a8007604a8007604a8007604a8007604a8007604a8007604a8
00760239ffc90239ffc90239ffc90239ffc904a8007604a8007604a80076
04a8007603e400220454001a03df003005c7fffd05c70016055600000556
009504730041047300230239ffa20633005904e3005b05c70000031d001b
0556fffd0473000e04730034047300550473003402390093048900110355
001b055600000473000c055600000473000c0503006f03fa004f059d0020
051500190000fec60000fed40000fec60000fed40000fe5f0000fe5f0000
ff720000ff730000fee7080000000401005d0473003404e300110239001b
04e300060556fffd05c700960473004902aaffcd05c7009604e3009205c7
00990473008904e30016040000220473002804540096037c008805b9004e
0000ff530000ffbc0000fefe0000fefe0000fea40000fea4023900930000
00000000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c0000006c0000006c000000f600000180000001800000
018000000180000001ce000001ce000001ce000002d200000354000004fa
000006520000076c0000076c0000076c00000828000008280000096e0000
09c8000009c8000009c8000009c8000009c8000009c8000009c800000b42
00000caa00000de400000de400000de400000e8000000fc600000fc60000
104e000010ec000010ec000011480000139c0000139c0000139c0000146c
0000146c000015d0000015d0000015d0000015d0000015d0000015d00000
15d0000016c6000016c6000016c6000016c6000016c6000016c6000016c6
000016c6000018d4000019d000001b0c00001bfc00001e0800001f080000
20e4000021e4000022860000228600002286000022f2000024a600002590
000026800000277c0000277c0000286000002ba600002cc600002dae0000
2f0200002f02000030d80000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600003256
000032560000325600003256000032560000325600003256000032560000
325600003256000032560000325600003256000032560000325600010000
0d3500f2003c008f000600020010002f0055000006fa02c2000500020000
000e00ae0000000300000000006a0000000000030000000700ba006a0001
000000000000003501240001000000000003001301590001000000000004
0013016c00010000000000060013017f0001000000000007005d01920003
000104090000006a01ef0003000104090001002602590003000104090002
000e027f00030001040900030026028d0003000104090004002602b30003
000104090006002602d9000300010409000700ba02ff00a9002000320030
0030003600200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e00200069006e00200074006800650020
0055006e0069007400650064002000530074006100740065007300200061
006e0064002f006f00720020006f007400680065007200200063006f0075
006e00740072006900650073002ea9203230303620546865204d6f6e6f74
79706520436f72706f726174696f6e2e20416c6c20526967687473205265
7365727665642e5351595154422b417269616c2d426f6c644d5453515951
54422b417269616c2d426f6c644d545351595154422b417269616c2d426f
6c644d54417269616c20697320612074726164656d61726b206f66205468
65204d6f6e6f7479706520436f72706f726174696f6e20696e2074686520
556e697465642053746174657320616e642f6f72206f7468657220636f75
6e74726965732e00a9002000320030003000360020005400680065002000
4d006f006e006f007400790070006500200043006f00720070006f007200
6100740069006f006e002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e00530051005900
5100540042002b0041007200690061006c002d0042006f006c0064004d00
540052006500670075006c00610072005300510059005100540042002b00
41007200690061006c002d0042006f006c0064004d005400530051005900
5100540042002b0041007200690061006c002d0042006f006c0064004d00
54005300510059005100540042002b0041007200690061006c002d004200
6f006c0064004d00540041007200690061006c0020006900730020006100
2000740072006100640065006d00610072006b0020006f00660020005400
6800650020004d006f006e006f007400790070006500200043006f007200
70006f0072006100740069006f006e00200069006e002000740068006500
200055006e00690074006500640020005300740061007400650073002000
61006e0064002f006f00720020006f007400680065007200200063006f00
75006e00740072006900650073002e0000>
<b15480410d03ac00af03ac0002001003ac002003ac00a003ac0003004003
acb3070d3240b803acb312143240b803acb2162b32b9ffc003acb23a3340
b803acb32d943280bc03ab005f0033ffc003abb2553340b803abb3404432
40b803abb3333b3240b803abb32f313240b803abb2083340b803abb30714
321f411a03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f
03ab00bf03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40
b803a5b208330f411403a50001004003a500cf03a500ff03a50003002003
a500af03a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b20833
0f411b03a30001000f03a3001003a3008003a300af03a300cf03a3000500
6f03a3009f03a300ff03a30003009f03a200af03a2000203a203a1b2101f
10410a039e007f039e0002039a000f0101001fffc00398b310143240b803
99b30f1332404110039500500395000200b0034d00c0034d0002006f0391
007f03910002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020
038b0080038b000300a0038b00010020038b0040038b0002ffc0038bb313
163240b80383b20f1132b9ffc0037bb2303432b9ffc0037bb31018325041
14037800010365036e0023001f037e036e001e001f0363036e001d001f03
620364000d001fffc00340b30f1032804110033f0001033f03150029001f
034103160032001f0344031a001b001fffc00375b20e1132b9ffc00375b2
282a32410a034303180032001f030f030d0034001f03080307b2321f20bb
0340000100400388b3090b3240b80388b2101532bd038503070014001f03
800307b2171f0fbd030a002f030a0002ffc00354b3090d3290410c035400
a003540002001f036e0001009f036e00010040036eb2090b324111034503
1c0016001f036b031d0015001f0346031e0015001f03a703a10046001f03
9db3261c1fc0bb0393000100400392b3090d3240b8033eb2083340b8033e
b30d0e32c04109033e000100b0038e00c0038e0002ffc00390b326383200
412603280030032800020020037f0030037f00020010038a0030038a0050
038a006f038a007f038a009f038a000600000389003003890002002f037a
0070037700900377009f037a0004ffc00315b20f1032b9ffc00315b22428
32b903190318b2321f10bb031a0001ffc0031ab3090e3240b80318b21213
32b9ffc00318b30c0e323fbd0373004f0373000200400374b31718326fbb
032a00010040032cb3181b3240b80370b2090c32bd031703160032001fff
c00316b20e1132bd031c031e0016001f031d031eb2151fb0411f031e0001
000f031f000102ca02d00015001f02d302d5000d001f02cf02d0000d001f
02cb02d0000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b309
0c3240b802d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02
c30030001f02da02b80032001f02d902b9003f001f02d802b80064001f02
b902b80033001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ff
c002c3b22b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3
b2121632412502c202c1001c001f02d702c10024001f02c102c00022001f
02bf02c00018001f02c0027400c8001f02b50235003b001f02b40235003b
001f02c402bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c8
1fb802afb206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a00
1f02adb2261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a
02a1015801f4001f02a000d801f4001f001202a2b237c81fb80290b2bc20
1fb9029002904018374025402d40a6033025302d30a6032025202d203720
a6204110028e0005009f028b0001028b028b003700200289003002890040
028900900289b20437b041fd027400c0027400020080027400a002740002
00600274007002740002000002740010027400020080027400f002740002
003f0285004f028500020090027e0090027f009002800090028100040090
027a0090027b0090027c0090027d00040090027400900275009002770003
0070027e0070027f007002800070028100040070027a0070027b0070027c
0070027d000400700274007002750070027700030060027e0060027f0060
02800060028100040060027a0060027b0060027c0060027d000400600274
006002750060027700030050027e0050027f005002800050028100040050
027a0050027b0050027c0050027d00040050027400500275005002770003
0040027e0040027f004002800040028100040040027a0040027b0040027c
0040027d000400400274004002750040027700030030027e0030027f0030
02800030028100040030027a0030027b0030027c0030027d000400300274
003002750030027700030020027e0020027f002002800020028100040020
027a0020027b0020027c0020027d00040020027400200275002002770003
0010027e0010027f001002800010028100040010027a0010027b0010027c
0010027d0004001002740010027500100277000300e0027e00e0027f00e0
028000e00281000400e0027a00e0027b00e0027c00e0027d000400e00274
00e0027500e00277b103d041c5027e00d0027f00d0028000d00281000400
d0027a00d0027b00d0027c00d0027d000400d0027400d0027500d0027700
030030027400400274000200c0027e00c0027f00c0028000c00281000400
c0027a00c0027b00c0027c00c0027d000400c0027400c0027500c0027700
0300b0027e00b0027f00b0028000b00281000400b0027a00b0027b00b002
7c00b0027d000400b0027400b0027500b00277000300a0027e00a0027f00
a0028000a00281000400a0027a00a0027b00a0027c00a0027d000400a002
7400a0027500a0027700030090027e0090027f0090028000900281000400
90027a0090027b0090027c0090027d000400900274009002750090027700
030020027e0020027f002002800020028100040020027a0020027b002002
7c0020027d00040020027400200275002002770003028101580801001f02
8001290801001f027f00ec0801001f027e00d80801001f027d00b1080100
1f027c00a60801001f027b00820801001f027a00370801001f0277002608
01001f027500200801001f0274001f0801b21f370f41160235004f023500
5f0235006f0235009f023500af023500bf0235000700af023500cf023500
df023500ff02354022040f074f079f07af07bf0705af07e007020f064f06
9f06af06bf0605af06e0060220411b020d0001005f02350001008f023500
01007f023500ef02350002002f0235003f02350002003f0234004f023400
0202350235023402344011ed20ef2a01cf2a01bf2a01af2a018f2a014109
02470104001e001f022000370201001f0158400c263e1fd8263e1f372627
3e1fb8028eb6ec171fb226361fb801bcb226361fb80129402b26361fec26
361fb126361fa626361f8226361f3726361f3226361f2d26361f2526361f
1f26361f37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f2126
3e1f20263e1f3700161600000012110840b9020d01a6b3c50d0009b801bc
b227281fb801bbb227301fb801b8b2274f1fb801b7b227621f410901b600
270101001f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb2
1fbb1fb801a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f
0401001f0154001f0401001f0153001f0201001f0152b21f561fb80151b2
1f291fb8012bb227261f410d012a00270125001f0129015800e4001f0125
001f0401001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d0108
00270801001f0106002d0101001f0105001f0101001f0103b31fbb1fefb9
01580401400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf
25b80156400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401
001f00b001580401b51fa625891f9bb901580125b61f991f2e1f8e2db808
01b51f8d1f291f89b901580401b21f8220b802ab40131f801f301f742de4
1f731f4a1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb6
1f5025891f491fb80125b21f4725b80401400b1f461f791f401f271f3920
bc02ab001f003801580401b21f372dbc0125001f003201580125b61f2c1f
341f2a25b80801b21f5537b80111402a07f00790075b0742073b07230722
071e071d071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807
ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ff
b101018e851bb0124358b10100858d1bb900010119858d5959001816763f
183f123e113946443e113946443e113946443e113946443e11394660443e
11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1d
b0964b5358b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d
4544b9020e020d45445958b90470020f455258b9020f04704459594bb0e4
53205c58b90020020e4544b90027020e45445958b908420020455258b900
2008424459594bb8012553205c58b90026020f4544b90021020f45445958
b90a0d0026455258b900260a0d4459594bb8040153205c58b1d8204544b1
202045445958b9250000d8455258b900d825004459594bb8040153205c58
b9015800264544b1262645445958b923200158455258b901582320445959
4bb02953205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f
010d4459594bb02f53205c58b11f1f4544b1251f45445958b90135001f45
5258b9001f01354459594bb8030153205c58b11f1f4544b11f1f45445958
b91428001f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec345
6523456023456560234560b08b766818b080622020b17e754565234520b0
03266062636820b003266165b075236544b07e234420b131c34565234520
b003266062636820b003266165b0c3236544b0312344b100c3455458b1c3
406544b23140314523614459b33f3c5841456523456023456560234560b0
89766818b080622020b1583c4565234520b003266062636820b003266165
b03c236544b058234420b13f414565234520b003266062636820b0032661
65b041236544b03f2344b10041455458b141406544b23f403f4523614459
45695342014b5058b108004259435c58b108004259b3020b0a124358601b
2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342
b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f23
42b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b
2b2b2b2b2b2b2b00b01243584bb035514bb021535a58b1262645b0406144
59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b04061
4418004569444569447373737473737374737473742b2b2b2b2b2b2b2b2b
2b2b2b007373737373737373737373737373737373737373737374747474
74747474747474747474747474747474747575757374757575752b730000
4bb02a534bb036515a58b1070745b040604459004bb02e534bb036515a58
b1030345b0406044b1090945b8ffc06044592b4569440174007373732b45
69442b012b435c58400a0006000702a006a00702b9ffc00274b31a1d326f
bd0277007f02770002ffc00277b22f3132b9ffc00277b322253240b80274
b32f353240b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ff
c0b3251a1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ff
c0b6a61a1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b
737459002b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b59
2b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b
2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b
2b2b73737373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b
752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b
2b732b737374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74
752b000000>
[12887 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 108 11 <0001006bfe51026805d300100046400e280fa70302080901000910001208
bd012200090001012200000294400a09f30c9b200430040204b80296b311
a56b182b10f65dedfdf4ed10ed003f3f103c103c3130015d012326023510
13363733020215141217160265c199a0635684c089673d3523fe51e701f2
e901210102e0bdfed1fe57eea4fea89b6600>KIAAAA+Arial-BoldMT AddT42Char 
2 246 12 <00010043fe51024005d30010004940182702270a6702670a9702a702a80e
07090810000810001210bd012200000009012200000294b408f3059b0cb8
0296b3126a43182b10f6edfde4ed10ed003f3f103c103c3130015d133e03
3534020333161215140702034553443a1c6689bf97a7424bacfe51b2bef8
df75ee01a9012fd7fe1ef8d1effef4fefb00>KIAAAA+Arial-BoldMT AddT42Char 
2 4174 45 <00010023ffe703cd05ba0012005a40246908a70d0254096609690d691069
117a108910070a480b810f2d07090100020012200102b8028b4012701401
301401140bef1f0a010a1913fd75182b4e10f45d4ded4d107171f63c4dfd
3c003f3c3ffdf4e43130005d015d01211114070606232226272516171633
32363502a60127202be2b9d9ea01011705203062635205bafc60b662809b
f3eb207e344f71b2>KIAAAA+Arial-BoldMT AddT42Char 
2 5020 51 <00020095000004f805ba000f001b007740250605b914b918034705016705
d605021211250d0e0e001b10250201020f00081627af070107b8ffc0b309
0b3407b8028c40161f1d301d601d701d801d051d100f2001200030000200
b8028bb31c3153182b4e10f45d3c4dfd3c4d1071f62b714ded003f3c3f3c
fd3c12392f3cfd3c3130005d71015d331121201716161514060607062323
1902333236363534262726239501db010e527eaa62974e6ac9c1a2af7643
5e4835a005ba1621ddaf87b8691115fdd704c2fe602e624150680d0a>KIAAAA+Arial-BoldMT AddT42Char 
2 5830 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>KIAAAA+Arial-BoldMT AddT42Char 
2 7164 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>KIAAAA+Arial-BoldMT AddT42Char 
2 7688 73 <00010018000002e605d3001600b840323604012a04201020115904801805
0804bf180215161102141216110e130f00100e13010010021409080f0b01
5f0bff0b020bb80274400a0601110f1601ff160116b80274401e10000001
f00001000613140a09333f084f085008030828102f115f110211b8010440
0d0e132602145f00a016c0160216b8ffc0b6090c3416191778b902690018
2b4e10f42b713c4dfc3cfd3cfc5d3cf45d19e400183f3c3f5d713cfd5d71
3c3ffd5d7139320f0f0f0f313001715d005d133335343636333217072623
2206151533152311211123189c399975787326433e3d35d2d2fee79c0426
5086845324c41039514bddfcb7034900>KIAAAA+Arial-BoldMT AddT42Char 
2 8838 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>KIAAAA+Arial-BoldMT AddT42Char 
2 8946 80 <0001007e00000698043e0027013bb90029ffc0405d110a3f0506060c1506
160c340334083418342344024508451844230c20032f295309602980299f
29a406a707a60cb506b50cb029d029e0290e00292f2950299f29bf29df29
0629401a1c343f2950298029d029e02905072104071a1d16b80274b20a07
21b80274401e0407101111271b1c1c26270a0100060f10261211405a3560
11016f110111b80246400f1a1b261d1c405a356f1c01601c011cb80246b4
2526262701b80129b2000027b8ffc0b30f093f27b8ffc04036110a3f2740
5a352740413527403c35274024273427403a3d342f27cf27df27030f271f
27802703002720273027ff2704271928e33c182b4e10f45d71722b2b2b2b
2b2b2b3c4d10ed10fd3cf65d712b3cfd3cf6715d2b3cfd3c003f3c3f3c3c
103c103c103c3fed3fed0111123900111239313001722b715d005d012b13
211536333216173636333216171615112111342726232206061511211134
2626232206061511217e01038bc066963046a25c75a2281dfee71d27513b
682efee71e3f3641682dfee7042691a9545555545f5c4498fd59025f9e2e
3c488b96fe0202469b5a2c468499fdfc>KIAAAA+Arial-BoldMT AddT42Char 
2 9382 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>KIAAAA+Arial-BoldMT AddT42Char 
2 9616 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>KIAAAA+Arial-BoldMT AddT42Char 
2 10108 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>KIAAAA+Arial-BoldMT AddT42Char 
2 10336 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>KIAAAA+Arial-BoldMT AddT42Char 
2 11462 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>KIAAAA+Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>KIAAAA+Arial-BoldMT AddT42Char 
KIAAAA+Arial-BoldMT /CharStrings get begin
/parenleft 11 def
/parenright 12 def
/J 45 def
/P 51 def
/a 68 def
/e 72 def
/f 73 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/r 85 def
/s 86 def
/u 88 def
end
KIAAAA+Arial-BoldMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 74 /J put
dup 80 /P put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/UUMMJV+Arial-BoldMT /KIAAAA+Arial-BoldMT findfont ct_VMDictPut/UUMMJV+Arial-BoldMT*1 [40{/.notdef}rp /parenleft /parenright 32{/.notdef}rp /J 5{/.notdef}rp /P 16{/.notdef}rp /a 3{/.notdef}rp /e /f 5{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /.notdef /u 138{/.notdef}rp]UUMMJV+Arial-BoldMT nfUUMMJV+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf83.5625 199.927 mo(P\(female\))[-8.00409 -3.99591 -3.99591 -6.672 -10.6681 -6.672 -3.336 -6.672 0 ]yshUUMMJV+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf300.336 298.937 mo(Journals)[6.672 7.33191 7.33191 4.66809 7.33191 6.672 3.336 0 ]xsh444.13 127.012 mo
455.223 127.012 li
455.223 133.247 li
444.13 133.247 li
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: IIAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMJU+ArialMT gcheck setglobal} if
2 5400 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>UUMMJU+ArialMT AddT42Char 
2 7116 50 <00020063ffe705dd05d4000e001b00ca40501a0f01141014141b171b1b04
041004140b170b1b04a917b60ec60e031717181b02201d40114f134f1740
1a58055809571055115f135a175f18561a571b8b17990210191e0303121e
0b09152620070107b8ffe8b41010025507b8ffeeb40d0d025507b8fff0b4
0c0c025507b8ffeab40b0b065507b8fff4b40d0d065507b8fffa40210c0c
0655071a801d011d0f2620000100060b0b065500060c0c065500191c635c
182b4e10f42b2b5d4ded4e105df62b2b2b2b2b2b5d4ded003fed3fed3130
015d71005d5d5d7113100021320412151402042322240237100033320011
3402262322006301880136cb0146abb4feb6bfcffebaa8c8011dd7db011b
79e991cefed702ca016d019dc2fea5dcdffea0b5c8015abefef7fecf0134
011bb3010b93fee5>UUMMJU+ArialMT AddT42Char 
2 8868 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>UUMMJU+ArialMT AddT42Char 
2 10462 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>UUMMJU+ArialMT AddT42Char 
2 11248 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>UUMMJU+ArialMT AddT42Char 
2 11668 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>UUMMJU+ArialMT AddT42Char 
2 11912 79 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>UUMMJU+ArialMT AddT42Char 
2 12164 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>UUMMJU+ArialMT AddT42Char 
2 12724 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>UUMMJU+ArialMT AddT42Char 
2 13178 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>UUMMJU+ArialMT AddT42Char 
2 13628 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>UUMMJU+ArialMT AddT42Char 
2 14080 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>UUMMJU+ArialMT AddT42Char 
2 15278 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>UUMMJU+ArialMT AddT42Char 
2 15570 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>UUMMJU+ArialMT AddT42Char 
UUMMJU+ArialMT /CharStrings get begin
/C 38 def
/O 50 def
/a 68 def
/e 72 def
/h 75 def
/i 76 def
/l 79 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/t 87 def
/u 88 def
end
UUMMJU+ArialMT /Encoding get
dup 67 /C put
dup 79 /O put
dup 97 /a put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMJU+ArialMT*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two /.notdef /four /.notdef /six /.notdef /eight 8{/.notdef}rp /A /B /C 11{/.notdef}rp /O 17{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 138{/.notdef}rp]UUMMJU+ArialMT nfUUMMJU+ArialMT*1 [10 0 0 -10 0 0 ]msf461.462 132.879 mo(Other)[7.78 2.78 5.56 5.56 0 ]xsh461.462 145.359 mo(Computational)[7.22 5.56 8.32993 5.56 5.56 2.78 5.56 2.78 2.22 5.55997 5.56006 5.55994 0 ]xsh444.13 139.492 mo
455.223 139.492 li
455.223 145.727 li
444.13 145.727 li
cp
.323613 .26157 .24445 0 cmyk
f
110.371 241.653 mo
108.424 241.653 li
108.424 284.083 li
110.371 284.083 li
cp
.306767 .242435 .247623 0 cmyk
f
113.249 240.278 mo
111.302 240.278 li
111.302 284.082 li
113.249 284.082 li
cp
f
116.126 239.728 mo
114.18 239.728 li
114.18 284.082 li
116.126 284.082 li
cp
f
119.004 239.454 mo
117.057 239.454 li
117.057 284.083 li
119.004 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
121.881 237.346 mo
119.934 237.346 li
119.934 284.083 li
121.881 284.083 li
cp
.306767 .242435 .247623 0 cmyk
f
124.759 236.429 mo
122.813 236.429 li
122.813 284.082 li
124.759 284.082 li
cp
f
127.637 236.154 mo
125.69 236.154 li
125.69 284.082 li
127.637 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
130.514 236.154 mo
128.567 236.154 li
128.567 284.082 li
130.514 284.082 li
cp
f
133.392 235.33 mo
131.445 235.33 li
131.445 284.083 li
133.392 284.083 li
cp
.306767 .242435 .247623 0 cmyk
f
136.269 234.872 mo
134.323 234.872 li
134.323 284.083 li
136.269 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
139.147 232.489 mo
137.2 232.489 li
137.2 284.083 li
139.147 284.083 li
cp
f
142.024 231.114 mo
140.078 231.114 li
140.078 284.082 li
142.024 284.082 li
cp
f
144.902 229.923 mo
142.956 229.923 li
142.956 284.083 li
144.902 284.083 li
cp
f
147.78 228.823 mo
145.833 228.823 li
145.833 284.082 li
147.78 284.082 li
cp
f
150.657 228.456 mo
148.71 228.456 li
148.71 284.082 li
150.657 284.082 li
cp
f
153.535 228.456 mo
151.588 228.456 li
151.588 284.082 li
153.535 284.082 li
cp
f
156.413 228.365 mo
154.466 228.365 li
154.466 284.082 li
156.413 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
159.29 228.182 mo
157.343 228.182 li
157.343 284.083 li
159.29 284.083 li
cp
f
162.167 227.815 mo
160.221 227.815 li
160.221 284.082 li
162.167 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
165.045 227.54 mo
163.098 227.54 li
163.098 284.082 li
165.045 284.082 li
cp
f
167.923 227.174 mo
165.976 227.174 li
165.976 284.083 li
167.923 284.083 li
cp
f
170.8 227.174 mo
168.854 227.174 li
168.854 284.083 li
170.8 284.083 li
cp
f
173.678 226.44 mo
171.731 226.44 li
171.731 284.082 li
173.678 284.082 li
cp
f
176.556 225.982 mo
174.609 225.982 li
174.609 284.082 li
176.556 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
179.433 224.608 mo
177.487 224.608 li
177.487 284.083 li
179.433 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
182.311 224.516 mo
180.364 224.516 li
180.364 284.082 li
182.311 284.082 li
cp
f
185.188 224.424 mo
183.241 224.424 li
183.241 284.082 li
185.188 284.082 li
cp
f
188.066 224.424 mo
186.12 224.424 li
186.12 284.082 li
188.066 284.082 li
cp
f
190.944 224.424 mo
188.997 224.424 li
188.997 284.082 li
190.944 284.082 li
cp
f
193.821 223.966 mo
191.874 223.966 li
191.874 284.082 li
193.821 284.082 li
cp
f
196.699 222.867 mo
194.753 222.867 li
194.753 284.083 li
196.699 284.083 li
cp
f
199.577 222.683 mo
197.63 222.683 li
197.63 284.082 li
199.577 284.082 li
cp
f
202.454 222.317 mo
200.507 222.317 li
200.507 284.083 li
202.454 284.083 li
cp
f
205.332 222.225 mo
203.386 222.225 li
203.386 284.082 li
205.332 284.082 li
cp
f
208.209 221.492 mo
206.262 221.492 li
206.262 284.082 li
208.209 284.082 li
cp
f
211.087 221.309 mo
209.14 221.309 li
209.14 284.083 li
211.087 284.083 li
cp
f
213.964 221.217 mo
212.018 221.217 li
212.018 284.082 li
213.964 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
216.842 221.034 mo
214.895 221.034 li
214.895 284.083 li
216.842 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
219.72 220.117 mo
217.773 220.117 li
217.773 284.082 li
219.72 284.082 li
cp
f
222.597 220.117 mo
220.651 220.117 li
220.651 284.082 li
222.597 284.082 li
cp
f
225.475 220.026 mo
223.529 220.026 li
223.529 284.083 li
225.475 284.083 li
cp
f
228.353 220.026 mo
226.406 220.026 li
226.406 284.083 li
228.353 284.083 li
cp
f
231.23 219.567 mo
229.283 219.567 li
229.283 284.082 li
231.23 284.082 li
cp
f
234.108 219.476 mo
232.161 219.476 li
232.161 284.082 li
234.108 284.082 li
cp
f
236.985 219.201 mo
235.038 219.201 li
235.038 284.082 li
236.985 284.082 li
cp
f
239.863 219.109 mo
237.916 219.109 li
237.916 284.082 li
239.863 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
242.74 219.017 mo
240.794 219.017 li
240.794 284.082 li
242.74 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
245.618 218.926 mo
243.671 218.926 li
243.671 284.082 li
245.618 284.082 li
cp
f
248.496 218.834 mo
246.549 218.834 li
246.549 284.082 li
248.496 284.082 li
cp
f
251.373 218.834 mo
249.427 218.834 li
249.427 284.082 li
251.373 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
254.251 218.651 mo
252.304 218.651 li
252.304 284.083 li
254.251 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
257.128 218.559 mo
255.181 218.559 li
255.181 284.082 li
257.128 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
260.006 218.101 mo
258.06 218.101 li
258.06 284.082 li
260.006 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
262.884 217.918 mo
260.937 217.918 li
260.937 284.083 li
262.884 284.083 li
cp
f
265.761 217.551 mo
263.814 217.551 li
263.814 284.082 li
265.761 284.082 li
cp
f
268.639 217.185 mo
266.693 217.185 li
266.693 284.082 li
268.639 284.082 li
cp
f
271.517 216.91 mo
269.57 216.91 li
269.57 284.082 li
271.517 284.082 li
cp
f
274.394 216.635 mo
272.447 216.635 li
272.447 284.082 li
274.394 284.082 li
cp
f
277.271 216.085 mo
275.325 216.085 li
275.325 284.082 li
277.271 284.082 li
cp
f
280.149 216.085 mo
278.202 216.085 li
278.202 284.082 li
280.149 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
283.027 215.902 mo
281.08 215.902 li
281.08 284.083 li
283.027 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
285.904 215.444 mo
283.958 215.444 li
283.958 284.083 li
285.904 284.083 li
cp
f
288.782 215.444 mo
286.835 215.444 li
286.835 284.083 li
288.782 284.083 li
cp
f
291.66 215.352 mo
289.713 215.352 li
289.713 284.082 li
291.66 284.082 li
cp
f
294.537 215.077 mo
292.591 215.077 li
292.591 284.082 li
294.537 284.082 li
cp
f
297.415 214.619 mo
295.468 214.619 li
295.468 284.082 li
297.415 284.082 li
cp
f
300.292 214.252 mo
298.345 214.252 li
298.345 284.082 li
300.292 284.082 li
cp
f
303.17 213.794 mo
301.224 213.794 li
301.224 284.083 li
303.17 284.083 li
cp
f
306.048 213.703 mo
304.101 213.703 li
304.101 284.083 li
306.048 284.083 li
cp
.306767 .242435 .247623 0 cmyk
f
308.925 213.153 mo
306.978 213.153 li
306.978 284.083 li
308.925 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
311.803 212.969 mo
309.857 212.969 li
309.857 284.082 li
311.803 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
314.681 212.786 mo
312.734 212.786 li
312.734 284.082 li
314.681 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
317.558 212.694 mo
315.611 212.694 li
315.611 284.082 li
317.558 284.082 li
cp
f
320.436 212.603 mo
318.489 212.603 li
318.489 284.082 li
320.436 284.082 li
cp
f
323.313 212.603 mo
321.366 212.603 li
321.366 284.082 li
323.313 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
326.191 212.419 mo
324.244 212.419 li
324.244 284.082 li
326.191 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
329.068 212.236 mo
327.122 212.236 li
327.122 284.082 li
329.068 284.082 li
cp
f
331.946 212.236 mo
329.999 212.236 li
329.999 284.082 li
331.946 284.082 li
cp
f
334.824 212.053 mo
332.877 212.053 li
332.877 284.082 li
334.824 284.082 li
cp
f
337.701 211.228 mo
335.755 211.228 li
335.755 284.082 li
337.701 284.082 li
cp
f
340.579 211.137 mo
338.633 211.137 li
338.633 284.083 li
340.579 284.083 li
cp
f
343.457 210.495 mo
341.51 210.495 li
341.51 284.082 li
343.457 284.082 li
cp
f
346.334 210.495 mo
344.387 210.495 li
344.387 284.082 li
346.334 284.082 li
cp
f
349.211 210.128 mo
347.265 210.128 li
347.265 284.082 li
349.211 284.082 li
cp
f
352.089 209.945 mo
350.142 209.945 li
350.142 284.082 li
352.089 284.082 li
cp
f
354.967 209.762 mo
353.02 209.762 li
353.02 284.083 li
354.967 284.083 li
cp
.306767 .242435 .247623 0 cmyk
f
357.844 209.487 mo
355.898 209.487 li
355.898 284.082 li
357.844 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
360.722 209.487 mo
358.775 209.487 li
358.775 284.082 li
360.722 284.082 li
cp
f
363.6 209.395 mo
361.653 209.395 li
361.653 284.082 li
363.6 284.082 li
cp
f
366.477 209.121 mo
364.531 209.121 li
364.531 284.083 li
366.477 284.083 li
cp
f
369.355 208.571 mo
367.408 208.571 li
367.408 284.083 li
369.355 284.083 li
cp
f
372.232 207.837 mo
370.285 207.837 li
370.285 284.082 li
372.232 284.082 li
cp
f
375.11 207.746 mo
373.164 207.746 li
373.164 284.082 li
375.11 284.082 li
cp
f
377.988 207.562 mo
376.041 207.562 li
376.041 284.082 li
377.988 284.082 li
cp
f
380.865 207.471 mo
378.918 207.471 li
378.918 284.082 li
380.865 284.082 li
cp
f
383.743 206.646 mo
381.797 206.646 li
381.797 284.083 li
383.743 284.083 li
cp
f
386.621 206.646 mo
384.674 206.646 li
384.674 284.083 li
386.621 284.083 li
cp
f
389.498 206.463 mo
387.551 206.463 li
387.551 284.083 li
389.498 284.083 li
cp
f
392.375 206.371 mo
390.429 206.371 li
390.429 284.082 li
392.375 284.082 li
cp
f
395.253 206.28 mo
393.306 206.28 li
393.306 284.083 li
395.253 284.083 li
cp
f
398.131 206.096 mo
396.184 206.096 li
396.184 284.082 li
398.131 284.082 li
cp
f
401.008 205.73 mo
399.062 205.73 li
399.062 284.083 li
401.008 284.083 li
cp
f
403.886 205.455 mo
401.939 205.455 li
401.939 284.082 li
403.886 284.082 li
cp
f
406.764 205.363 mo
404.817 205.363 li
404.817 284.082 li
406.764 284.082 li
cp
f
409.641 204.905 mo
407.695 204.905 li
407.695 284.083 li
409.641 284.083 li
cp
f
412.519 204.813 mo
410.572 204.813 li
410.572 284.082 li
412.519 284.082 li
cp
f
415.396 204.813 mo
413.449 204.813 li
413.449 284.082 li
415.396 284.082 li
cp
f
418.274 204.722 mo
416.328 204.722 li
416.328 284.083 li
418.274 284.083 li
cp
f
421.151 204.63 mo
419.205 204.63 li
419.205 284.082 li
421.151 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
424.029 204.264 mo
422.082 204.264 li
422.082 284.083 li
424.029 284.083 li
cp
f
426.907 203.897 mo
424.96 203.897 li
424.96 284.083 li
426.907 284.083 li
cp
.717678 .657496 .646204 .732845 cmyk
f
429.784 203.53 mo
427.838 203.53 li
427.838 284.082 li
429.784 284.082 li
cp
f
432.662 203.255 mo
430.715 203.255 li
430.715 284.082 li
432.662 284.082 li
cp
.306767 .242435 .247623 0 cmyk
f
435.54 203.255 mo
433.593 203.255 li
433.593 284.082 li
435.54 284.082 li
cp
.717678 .657496 .646204 .732845 cmyk
f
438.417 203.255 mo
436.471 203.255 li
436.471 284.082 li
438.417 284.082 li
cp
f
441.295 203.072 mo
439.348 203.072 li
439.348 284.082 li
441.295 284.082 li
cp
f
444.172 203.072 mo
442.225 203.072 li
442.225 284.082 li
444.172 284.082 li
cp
f
447.05 202.797 mo
445.104 202.797 li
445.104 284.082 li
447.05 284.082 li
cp
f
449.928 202.705 mo
447.981 202.705 li
447.981 284.082 li
449.928 284.082 li
cp
f
452.805 202.614 mo
450.858 202.614 li
450.858 284.082 li
452.805 284.082 li
cp
f
455.683 202.614 mo
453.737 202.614 li
453.737 284.082 li
455.683 284.082 li
cp
f
458.561 202.522 mo
456.614 202.522 li
456.614 284.082 li
458.561 284.082 li
cp
f
461.438 202.431 mo
459.491 202.431 li
459.491 284.083 li
461.438 284.083 li
cp
f
464.315 202.156 mo
462.369 202.156 li
462.369 284.083 li
464.315 284.083 li
cp
f
467.193 200.689 mo
465.246 200.689 li
465.246 284.082 li
467.193 284.082 li
cp
f
470.071 200.689 mo
468.124 200.689 li
468.124 284.082 li
470.071 284.082 li
cp
f
472.948 198.582 mo
471.002 198.582 li
471.002 284.082 li
472.948 284.082 li
cp
f
475.826 198.582 mo
473.879 198.582 li
473.879 284.082 li
475.826 284.082 li
cp
f
478.704 197.299 mo
476.757 197.299 li
476.757 284.083 li
478.704 284.083 li
cp
f
481.581 197.207 mo
479.635 197.207 li
479.635 284.082 li
481.581 284.082 li
cp
f
484.459 197.207 mo
482.512 197.207 li
482.512 284.082 li
484.459 284.082 li
cp
f
487.336 197.207 mo
485.389 197.207 li
485.389 284.082 li
487.336 284.082 li
cp
f
490.214 196.932 mo
488.268 196.932 li
488.268 284.082 li
490.214 284.082 li
cp
f
493.092 195.558 mo
491.145 195.558 li
491.145 284.083 li
493.092 284.083 li
cp
f
495.969 195.374 mo
494.022 195.374 li
494.022 284.082 li
495.969 284.082 li
cp
f
498.847 194.55 mo
496.901 194.55 li
496.901 284.083 li
498.847 284.083 li
cp
f
501.725 193.633 mo
499.778 193.633 li
499.778 284.082 li
501.725 284.082 li
cp
f
504.602 193.541 mo
502.655 193.541 li
502.655 284.082 li
504.602 284.082 li
cp
f
507.48 193.267 mo
505.534 193.267 li
505.534 284.083 li
507.48 284.083 li
cp
f
510.357 191.525 mo
508.411 191.525 li
508.411 284.082 li
510.357 284.082 li
cp
f
513.234 191.525 mo
511.288 191.525 li
511.288 284.082 li
513.234 284.082 li
cp
f
516.112 188.868 mo
514.166 188.868 li
514.166 284.082 li
516.112 284.082 li
cp
f
518.99 187.86 mo
517.044 187.86 li
517.044 284.083 li
518.99 284.083 li
cp
f
521.867 186.852 mo
519.921 186.852 li
519.921 284.082 li
521.867 284.082 li
cp
f
524.745 186.852 mo
522.798 186.852 li
522.798 284.082 li
524.745 284.082 li
cp
f
527.622 185.661 mo
525.677 185.661 li
525.677 284.083 li
527.622 284.083 li
cp
f
530.5 183.736 mo
528.553 183.736 li
528.553 284.082 li
530.5 284.082 li
cp
f
533.378 169.074 mo
531.432 169.074 li
531.432 284.083 li
533.378 284.083 li
cp
f
536.255 132.875 mo
534.308 132.875 li
534.308 284.082 li
536.255 284.082 li
cp
f
.5 lw
0 lc
0 lj
10 ml
[3 3 ] 0 dsh
true sadj
323.313 284.082 mo
323.777 180.601 li
.75021 .679683 .670222 .90164 cmyk
@
2 lw
[] 0 dsh
108.058 284.082 mo
108.058 119.129 li
@
1 lw
2 lc
108.058 284.082 mo
104.555 284.082 li
@
108.058 242.844 mo
104.555 242.844 li
@
108.058 201.606 mo
104.555 201.606 li
@
108.058 160.367 mo
104.555 160.367 li
@
108.058 119.129 mo
104.555 119.129 li
@
2 lw
0 lc
108.058 284.082 mo
537.246 284.082 li
@
.5 lw
108.101 180.601 mo
109.601 180.601 li
@
[2.997 2.997 ] 0 dsh
112.598 180.601 mo
530.729 180.601 li
@
[] 0 dsh
532.228 180.601 mo
533.728 180.601 li
@
.8 lw
4 ml
[1 2 ] 0 dsh
111.326 564.186 mo
444.605 564.186 li
.895659 .848112 .507591 .675471 cmyk
@
2 lw
[] 0 dsh
105.956 564.186 mo
463.975 564.186 li
@
1.5 lw
114.553 569.186 mo
114.553 565.751 li
@
187.876 569.186 mo
187.876 565.751 li
@
261.199 569.186 mo
261.199 565.751 li
@
334.523 569.186 mo
334.523 565.751 li
@
407.845 569.186 mo
407.845 565.751 li
@
2 lw
110.956 564.186 mo
110.956 335.144 li
@
.8 lw
110.956 564.186 mo
116.326 564.186 li
@
1.5 lw
105.956 506.926 mo
111.326 506.926 li
@
105.956 449.665 mo
111.326 449.665 li
@
105.956 392.405 mo
111.326 392.405 li
@
105.956 335.144 mo
111.326 335.144 li
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: IIAAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMJU+ArialMT gcheck setglobal} if
2 658 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>UUMMJU+ArialMT AddT42Char 
2 1432 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>UUMMJU+ArialMT AddT42Char 
2 2258 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>UUMMJU+ArialMT AddT42Char 
2 3170 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>UUMMJU+ArialMT AddT42Char 
UUMMJU+ArialMT /CharStrings get begin
/one 20 def
/three 22 def
/five 24 def
/seven 26 def
end
UUMMJU+ArialMT /Encoding get
dup 49 /one put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMJU+ArialMT*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six /seven /eight 8{/.notdef}rp /A /B /C 11{/.notdef}rp /O 17{/.notdef}rp /a 3{/.notdef}rp /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 138{/.notdef}rp]UUMMJU+ArialMT nfUUMMJU+ArialMT*1 [9 0 0 -9 0 0 ]msf111.346 577.123 mo(0)sh182.464 577.123 mo(10)[5.004 0 ]xsh255.787 577.123 mo(20)[5.004 0 ]xsh329.11 577.123 mo(30)[5.004 0 ]xsh402.433 577.123 mo(40)[5.004 0 ]xsh86.7132 567.16 mo(0.00)[5.004 2.502 5.004 0 ]xsh86.7132 509.902 mo(0.25)[5.004 2.502 5.004 0 ]xsh86.7132 452.644 mo(0.50)[5.004 2.502 5.004 0 ]xsh86.7132 395.386 mo(0.75)[5.004 2.502 5.004 0 ]xsh86.7132 338.128 mo(1.00)[5.004 2.502 5.004 0 ]xsh%ADOBeginSubsetFont: KIAAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal UUMMJV+Arial-BoldMT gcheck setglobal} if

2 0 3 <> UUMMJV+Arial-BoldMT AddT42Char 
2 462 19 <00020056ffe7040e05c0000e00200093404b780a880aa701aa07aa09a70e
b709c8090856115916591a561f67116816681a671f08390239063609360d
490249064509460da709cb02c906c409c40dd902db06d409d40d11101820
180218b8ffc0402512163418a6080d1f0f2f0f020f401216340fa600051d
d84f0401041a2214d80b1921d3c2182b4e10f44ded4e10f6714ded003fed
2b713fed2b713130015d005d5d0132171611100706232200111037361722
060706111016163332363736111026260232d5788f9077d5d6fefa9077d5
3350161d344f333350161d344f05c098b4fe5ffe60b696014901a6019eb6
96e941546dfefefefec14041546c01020102c141>UUMMJV+Arial-BoldMT AddT42Char 
2 722 20 <000100a20000032605c00009005640096b027b028b02030204b80129b35f
050105b8025eb708090501000c0900bb015800020001025d400d0500041f
042004b0040404190aba01a701a000182b4e10f45d3c4df63cfd3c003f3c
3f3cf45ded393130005d212111060735362437330326fee79ad16e010230
e404239045ff24c98600>UUMMJV+Arial-BoldMT AddT42Char 
2 852 21 <000100330000040c05c0001d013f405fb518b61ab91bca04c718d018d019
d01a08431b431c431d56199b049518aa04a61c08061a20002806371a4804
43184319431a0824182419241a03162604560488189c1b9c1c9c1daa1caa
1d0812001d101d201d311d761d841d901dd61d081db8ffc040161415341d
02100c0f1d10002000022000300040000300b8ffc0b312163400b802a1b3
02010c0fb8015640231f0c2f0c020c401216340ca6130509d81616014f00
01001a1f0fd8107702191ed3c2182b4e10f44df4ed4e10f6713c3c4d10ed
003ffd2b71e43f3cfd2b5d713c1112390111332b5d435c58b9001dffc0b2
11391db8ffc0b20f391db8ffc0400e10390408103905081139040811392b
2b2b2b2b2b59b10602435458400b091b191b021b13010413000011123911
12395d593130015d4b5158bd001bffe0001cffe0001dffe0383838590171
5d5d5d011121361237363736353426232206072536243332161514060706
040607040cfc2710a0ecbe2b3a6559586808fee8190108c6d9f8474d33fe
f647160105fefb940109dbb13f57555e656a7b1ce8caeaae63b36241f450
2600>UUMMJV+Arial-BoldMT AddT42Char 
2 1618 23 <000200260000044405c0000a000d00df40390c200d39090c190c2b0c530c
6b0ce20c06ed0d01060416042504280d480d5b0da70db70dc60d09010208
000c060d07050a0b0d07000c0c0d0db801ae401a03041403030403020c04
0d030d02040a0007400dc00dd00d030dbb01280008000201b4b600040400
0c0c00b80158b4058f0a010ab80102401210079f07bf0703071a0f3f027f
020202190eba014c014800182b4e10e47110f65d4df45d3cfd3c003f3f10
f43cfd5d3c0111123912393900111239123987052e2b047d10c40f0f0fb1
0602435458400b2d0c3d0c4d0ccd0cdd0c05005d593130015d5d005d2b21
11213501331133152311011101027efda8027cecb6b6fef0feaf0127f603
a3fc5ef7fed9021e01f5fe0b>UUMMJV+Arial-BoldMT AddT42Char 
2 3556 41 <000100970000048405ba00090072403f0805040605250720083008bf08df
08042f08900802080800030425020102090008073f064f06020652030002
01021a200b300b020b04092001200030000200b8028bb30a3153182b4e10
f45d3c4dfd3c4e105df65d3c4df45d3c003f3c3f3cfd3c12392f5d713cfd
3c0305103c3c3130331121152111211521119703edfd3b0264fd9c05baf8
fea5f8fd9100>UUMMJV+Arial-BoldMT AddT42Char 
2 4038 44 <0001008c000001b405ba0003006fb90005ffc0b332343405b8ffc0b32325
3405b8ffc0403f1417340005400550058005e005051f0560057005f00504
8005010201020300080203d9010000b000e00003c000f0000220003000d0
00e00004006e04319f182b4e10f45d71723c4dfd3c003f3c3f3c3130015d
71722b2b2b331121118c012805bafa46>UUMMJV+Arial-BoldMT AddT42Char 
2 6608 70 <00010055ffe8043f043e001900e14051580f59125916680f691269167d18
79199702970cc610c618d710d618e906e908e913e915f80613381338154a
124a164618590c690c073a1237163718037705770f8705860f8919a812a7
16b912b616090eb8ffc0b3181b340eb8ffc0b51214340e330db8ffc0b319
1e340db8ffc0b30f11340dba0104000a02744012110b0040181b34004012
1434003390010101ba0101000402744020170701401214340121002f0d40
1214340d214f0e010e1a1b072114191a5841182b4e10f44ded4e10f65d4d
ed2bf4ed2b003ffdf45de42b2b3ffdf42b2be42b2b3130005d7101715d01
052626232206151416333236370506062322001110003332160431feeb0e
634f697d7f6b50661501142bf4cde9feeb0116edc2e502ec32535491aabd
9c5b6f2fbec20126010401070125a700>UUMMJV+Arial-BoldMT AddT42Char 
2 9856 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>UUMMJV+Arial-BoldMT AddT42Char 
2 11174 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>UUMMJV+Arial-BoldMT AddT42Char 
UUMMJV+Arial-BoldMT /CharStrings get begin
/space 3 def
/zero 19 def
/one 20 def
/two 21 def
/four 23 def
/F 41 def
/I 44 def
/c 70 def
/p 83 def
/t 87 def
end
UUMMJV+Arial-BoldMT /Encoding get
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 70 /F put
dup 73 /I put
dup 99 /c put
dup 112 /p put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/UUMMJV+Arial-BoldMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one /two /.notdef /four 17{/.notdef}rp /F 2{/.notdef}rp /I /J 5{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c /.notdef /e /f 5{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 138{/.notdef}rp]UUMMJV+Arial-BoldMT nfUUMMJV+Arial-BoldMT*1 [12 0 0 -12 0 0 ]msf244.38 591.657 mo(2014 Impact Factor)[6.672 6.67198 6.672 6.672 3.336 3.336 10.6681 7.33191 6.672 6.672 3.99591 3.336 7.33191 6.672 6.672 3.99591 7.33191 0 ]xshUUMMJV+Arial-BoldMT*1 [0 -12 -12 0 0 0 ]msf84.2544 469.077 mo(P\(female\))[-8.00409 -3.99591 -3.99591 -6.672 -10.6681 -6.672 -3.336 -6.672 0 ]ysh132.569 465.551 mo
133.665 465.551 134.553 466.439 134.553 467.535 cv
134.553 468.631 133.665 469.519 132.569 469.519 cv
131.473 469.519 130.585 468.631 130.585 467.535 cv
130.585 466.439 131.473 465.551 132.569 465.551 cv
.895659 .848112 .507591 .675471 cmyk
f
132.569 466.212 mo
133.299 466.212 133.892 466.804 133.892 467.535 cv
133.892 468.266 133.299 468.858 132.569 468.858 cv
131.838 468.858 131.246 468.266 131.246 467.535 cv
131.246 466.804 131.838 466.212 132.569 466.212 cv
f
131.608 455.073 mo
132.704 455.073 133.592 455.961 133.592 457.057 cv
133.592 458.153 132.704 459.041 131.608 459.041 cv
130.512 459.041 129.624 458.153 129.624 457.057 cv
129.624 455.961 130.512 455.073 131.608 455.073 cv
f
131.608 455.734 mo
132.338 455.734 132.931 456.326 132.931 457.057 cv
132.931 457.788 132.338 458.38 131.608 458.38 cv
130.878 458.38 130.285 457.788 130.285 457.057 cv
130.285 456.326 130.878 455.734 131.608 455.734 cv
f
195.113 482.298 mo
196.209 482.298 197.097 483.186 197.097 484.282 cv
197.097 485.378 196.209 486.266 195.113 486.266 cv
194.017 486.266 193.129 485.378 193.129 484.282 cv
193.129 483.186 194.017 482.298 195.113 482.298 cv
f
195.113 482.959 mo
195.843 482.959 196.436 483.551 196.436 484.282 cv
196.436 485.013 195.843 485.605 195.113 485.605 cv
194.383 485.605 193.79 485.013 193.79 484.282 cv
193.79 483.551 194.383 482.959 195.113 482.959 cv
f
132.987 462.669 mo
134.083 462.669 134.971 463.557 134.971 464.653 cv
134.971 465.749 134.083 466.637 132.987 466.637 cv
131.891 466.637 131.003 465.749 131.003 464.653 cv
131.003 463.557 131.891 462.669 132.987 462.669 cv
f
132.987 463.33 mo
133.717 463.33 134.31 463.922 134.31 464.653 cv
134.31 465.384 133.717 465.976 132.987 465.976 cv
132.257 465.976 131.664 465.384 131.664 464.653 cv
131.664 463.922 132.257 463.33 132.987 463.33 cv
f
134.614 478.392 mo
135.71 478.392 136.598 479.28 136.598 480.376 cv
136.598 481.472 135.71 482.36 134.614 482.36 cv
133.518 482.36 132.63 481.472 132.63 480.376 cv
132.63 479.28 133.518 478.392 134.614 478.392 cv
f
134.614 479.053 mo
135.345 479.053 135.937 479.645 135.937 480.376 cv
135.937 481.107 135.345 481.699 134.614 481.699 cv
133.884 481.699 133.291 481.107 133.291 480.376 cv
133.291 479.645 133.884 479.053 134.614 479.053 cv
f
140.788 484.988 mo
141.884 484.988 142.772 485.876 142.772 486.972 cv
142.772 488.068 141.884 488.957 140.788 488.957 cv
139.692 488.957 138.804 488.068 138.804 486.972 cv
138.804 485.876 139.692 484.988 140.788 484.988 cv
f
140.788 485.65 mo
141.518 485.65 142.111 486.242 142.111 486.973 cv
142.111 487.703 141.518 488.296 140.788 488.296 cv
140.058 488.296 139.465 487.703 139.465 486.973 cv
139.465 486.242 140.058 485.65 140.788 485.65 cv
f
157.264 500.447 mo
158.36 500.447 159.248 501.336 159.248 502.431 cv
159.248 503.527 158.36 504.416 157.264 504.416 cv
156.168 504.416 155.28 503.527 155.28 502.431 cv
155.28 501.336 156.168 500.447 157.264 500.447 cv
f
157.264 501.108 mo
157.995 501.108 158.587 501.7 158.587 502.431 cv
158.587 503.161 157.995 503.754 157.264 503.754 cv
156.534 503.754 155.941 503.161 155.941 502.431 cv
155.941 501.7 156.534 501.108 157.264 501.108 cv
f
147.19 472.281 mo
148.286 472.281 149.174 473.169 149.174 474.265 cv
149.174 475.361 148.286 476.249 147.19 476.249 cv
146.094 476.249 145.206 475.361 145.206 474.265 cv
145.206 473.169 146.094 472.281 147.19 472.281 cv
f
147.19 472.942 mo
147.92 472.942 148.513 473.534 148.513 474.265 cv
148.513 474.996 147.92 475.588 147.19 475.588 cv
146.459 475.588 145.867 474.996 145.867 474.265 cv
145.867 473.534 146.459 472.942 147.19 472.942 cv
f
130.223 472.337 mo
131.319 472.337 132.207 473.225 132.207 474.321 cv
132.207 475.417 131.319 476.305 130.223 476.305 cv
129.127 476.305 128.239 475.417 128.239 474.321 cv
128.239 473.225 129.127 472.337 130.223 472.337 cv
f
130.223 472.998 mo
130.953 472.998 131.546 473.59 131.546 474.321 cv
131.546 475.052 130.953 475.644 130.223 475.644 cv
129.493 475.644 128.9 475.052 128.9 474.321 cv
128.9 473.59 129.493 472.998 130.223 472.998 cv
f
126.923 474.277 mo
128.019 474.277 128.907 475.165 128.907 476.261 cv
128.907 477.357 128.019 478.246 126.923 478.246 cv
125.827 478.246 124.939 477.357 124.939 476.261 cv
124.939 475.165 125.827 474.277 126.923 474.277 cv
f
126.923 474.939 mo
127.653 474.939 128.246 475.531 128.246 476.262 cv
128.246 476.992 127.653 477.585 126.923 477.585 cv
126.193 477.585 125.6 476.992 125.6 476.262 cv
125.6 475.531 126.193 474.939 126.923 474.939 cv
f
143.53 478.865 mo
144.626 478.865 145.514 479.754 145.514 480.849 cv
145.514 481.946 144.626 482.834 143.53 482.834 cv
142.434 482.834 141.546 481.946 141.546 480.849 cv
141.546 479.754 142.434 478.865 143.53 478.865 cv
f
143.53 479.526 mo
144.26 479.526 144.853 480.118 144.853 480.849 cv
144.853 481.579 144.26 482.172 143.53 482.172 cv
142.8 482.172 142.207 481.579 142.207 480.849 cv
142.207 480.118 142.8 479.526 143.53 479.526 cv
f
142.497 485.951 mo
143.593 485.951 144.481 486.84 144.481 487.935 cv
144.481 489.031 143.593 489.92 142.497 489.92 cv
141.401 489.92 140.513 489.031 140.513 487.935 cv
140.513 486.84 141.401 485.951 142.497 485.951 cv
f
142.497 486.613 mo
143.227 486.613 143.82 487.205 143.82 487.936 cv
143.82 488.666 143.227 489.259 142.497 489.259 cv
141.767 489.259 141.174 488.666 141.174 487.936 cv
141.174 487.205 141.767 486.613 142.497 486.613 cv
f
132.972 496.111 mo
134.068 496.111 134.956 496.999 134.956 498.095 cv
134.956 499.191 134.068 500.079 132.972 500.079 cv
131.876 500.079 130.988 499.191 130.988 498.095 cv
130.988 496.999 131.876 496.111 132.972 496.111 cv
f
132.972 496.772 mo
133.702 496.772 134.295 497.364 134.295 498.095 cv
134.295 498.826 133.702 499.418 132.972 499.418 cv
132.242 499.418 131.649 498.826 131.649 498.095 cv
131.649 497.364 132.242 496.772 132.972 496.772 cv
f
134.146 509.135 mo
135.242 509.135 136.13 510.023 136.13 511.119 cv
136.13 512.215 135.242 513.103 134.146 513.103 cv
133.05 513.103 132.162 512.215 132.162 511.119 cv
132.162 510.023 133.05 509.135 134.146 509.135 cv
f
134.146 509.797 mo
134.876 509.797 135.469 510.389 135.469 511.12 cv
135.469 511.85 134.876 512.443 134.146 512.443 cv
133.416 512.443 132.823 511.85 132.823 511.12 cv
132.823 510.389 133.416 509.797 134.146 509.797 cv
f
139.535 492.657 mo
140.631 492.657 141.519 493.545 141.519 494.641 cv
141.519 495.737 140.631 496.626 139.535 496.626 cv
138.439 496.626 137.551 495.737 137.551 494.641 cv
137.551 493.545 138.439 492.657 139.535 492.657 cv
f
139.535 493.318 mo
140.265 493.318 140.858 493.91 140.858 494.641 cv
140.858 495.371 140.265 495.964 139.535 495.964 cv
138.805 495.964 138.212 495.371 138.212 494.641 cv
138.212 493.91 138.805 493.318 139.535 493.318 cv
f
131.828 480.42 mo
132.924 480.42 133.812 481.308 133.812 482.404 cv
133.812 483.5 132.924 484.388 131.828 484.388 cv
130.732 484.388 129.844 483.5 129.844 482.404 cv
129.844 481.308 130.732 480.42 131.828 480.42 cv
f
131.828 481.081 mo
132.558 481.081 133.151 481.673 133.151 482.404 cv
133.151 483.134 132.558 483.727 131.828 483.727 cv
131.097 483.727 130.505 483.134 130.505 482.404 cv
130.505 481.673 131.097 481.081 131.828 481.081 cv
f
144.183 489.953 mo
145.279 489.953 146.167 490.841 146.167 491.937 cv
146.167 493.033 145.279 493.921 144.183 493.921 cv
143.087 493.921 142.199 493.033 142.199 491.937 cv
142.199 490.841 143.087 489.953 144.183 489.953 cv
f
144.183 490.615 mo
144.913 490.615 145.506 491.207 145.506 491.938 cv
145.506 492.669 144.913 493.261 144.183 493.261 cv
143.453 493.261 142.86 492.669 142.86 491.938 cv
142.86 491.207 143.453 490.615 144.183 490.615 cv
f
133.331 471.369 mo
134.427 471.369 135.315 472.258 135.315 473.353 cv
135.315 474.449 134.427 475.338 133.331 475.338 cv
132.235 475.338 131.347 474.449 131.347 473.353 cv
131.347 472.258 132.235 471.369 133.331 471.369 cv
f
133.331 472.031 mo
134.062 472.031 134.654 472.623 134.654 473.354 cv
134.654 474.084 134.062 474.677 133.331 474.677 cv
132.601 474.677 132.008 474.084 132.008 473.354 cv
132.008 472.623 132.601 472.031 133.331 472.031 cv
f
136.375 467.248 mo
137.471 467.248 138.359 468.136 138.359 469.232 cv
138.359 470.328 137.471 471.216 136.375 471.216 cv
135.279 471.216 134.391 470.328 134.391 469.232 cv
134.391 468.136 135.279 467.248 136.375 467.248 cv
f
136.375 467.909 mo
137.105 467.909 137.698 468.501 137.698 469.232 cv
137.698 469.963 137.105 470.555 136.375 470.555 cv
135.645 470.555 135.052 469.963 135.052 469.232 cv
135.052 468.501 135.645 467.909 136.375 467.909 cv
f
143.457 491.276 mo
144.553 491.276 145.441 492.164 145.441 493.26 cv
145.441 494.356 144.553 495.245 143.457 495.245 cv
142.361 495.245 141.473 494.356 141.473 493.26 cv
141.473 492.164 142.361 491.276 143.457 491.276 cv
f
143.457 491.938 mo
144.187 491.938 144.78 492.53 144.78 493.261 cv
144.78 493.991 144.187 494.584 143.457 494.584 cv
142.726 494.584 142.134 493.991 142.134 493.261 cv
142.134 492.53 142.726 491.938 143.457 491.938 cv
f
135.472 500.267 mo
136.568 500.267 137.456 501.156 137.456 502.251 cv
137.456 503.347 136.568 504.236 135.472 504.236 cv
134.376 504.236 133.488 503.347 133.488 502.251 cv
133.488 501.156 134.376 500.267 135.472 500.267 cv
f
135.472 500.929 mo
136.202 500.929 136.795 501.521 136.795 502.252 cv
136.795 502.982 136.202 503.575 135.472 503.575 cv
134.742 503.575 134.149 502.982 134.149 502.252 cv
134.149 501.521 134.742 500.929 135.472 500.929 cv
f
131.278 491.108 mo
132.374 491.108 133.262 491.996 133.262 493.092 cv
133.262 494.188 132.374 495.076 131.278 495.076 cv
130.182 495.076 129.294 494.188 129.294 493.092 cv
129.294 491.996 130.182 491.108 131.278 491.108 cv
f
131.278 491.769 mo
132.008 491.769 132.601 492.361 132.601 493.092 cv
132.601 493.823 132.008 494.415 131.278 494.415 cv
130.548 494.415 129.955 493.823 129.955 493.092 cv
129.955 492.361 130.548 491.769 131.278 491.769 cv
f
151.215 479.42 mo
152.311 479.42 153.199 480.309 153.199 481.404 cv
153.199 482.5 152.311 483.389 151.215 483.389 cv
150.119 483.389 149.231 482.5 149.231 481.404 cv
149.231 480.309 150.119 479.42 151.215 479.42 cv
f
151.215 480.082 mo
151.945 480.082 152.538 480.674 152.538 481.405 cv
152.538 482.135 151.945 482.728 151.215 482.728 cv
150.484 482.728 149.892 482.135 149.892 481.405 cv
149.892 480.674 150.484 480.082 151.215 480.082 cv
f
148.436 512.871 mo
149.532 512.871 150.42 513.759 150.42 514.855 cv
150.42 515.951 149.532 516.839 148.436 516.839 cv
147.34 516.839 146.452 515.951 146.452 514.855 cv
146.452 513.759 147.34 512.871 148.436 512.871 cv
f
148.436 513.533 mo
149.166 513.533 149.759 514.125 149.759 514.856 cv
149.759 515.586 149.166 516.179 148.436 516.179 cv
147.706 516.179 147.113 515.586 147.113 514.856 cv
147.113 514.125 147.706 513.533 148.436 513.533 cv
f
114.553 471.867 mo
115.649 471.867 116.537 472.755 116.537 473.851 cv
116.537 474.947 115.649 475.835 114.553 475.835 cv
113.457 475.835 112.569 474.947 112.569 473.851 cv
112.569 472.755 113.457 471.867 114.553 471.867 cv
f
114.553 472.529 mo
115.283 472.529 115.876 473.121 115.876 473.852 cv
115.876 474.582 115.283 475.175 114.553 475.175 cv
113.823 475.175 113.23 474.582 113.23 473.852 cv
113.23 473.121 113.823 472.529 114.553 472.529 cv
f
151.501 482.438 mo
152.597 482.438 153.485 483.327 153.485 484.422 cv
153.485 485.518 152.597 486.407 151.501 486.407 cv
150.405 486.407 149.517 485.518 149.517 484.422 cv
149.517 483.327 150.405 482.438 151.501 482.438 cv
f
151.501 483.1 mo
152.231 483.1 152.824 483.692 152.824 484.423 cv
152.824 485.153 152.231 485.746 151.501 485.746 cv
150.771 485.746 150.178 485.153 150.178 484.423 cv
150.178 483.692 150.771 483.1 151.501 483.1 cv
f
145.085 498.886 mo
146.181 498.886 147.069 499.775 147.069 500.87 cv
147.069 501.967 146.181 502.855 145.085 502.855 cv
143.989 502.855 143.101 501.967 143.101 500.87 cv
143.101 499.775 143.989 498.886 145.085 498.886 cv
f
145.085 499.547 mo
145.815 499.547 146.408 500.139 146.408 500.87 cv
146.408 501.6 145.815 502.193 145.085 502.193 cv
144.354 502.193 143.762 501.6 143.762 500.87 cv
143.762 500.139 144.354 499.547 145.085 499.547 cv
f
186.227 483.923 mo
187.323 483.923 188.211 484.811 188.211 485.907 cv
188.211 487.003 187.323 487.891 186.227 487.891 cv
185.131 487.891 184.243 487.003 184.243 485.907 cv
184.243 484.811 185.131 483.923 186.227 483.923 cv
f
186.227 484.584 mo
186.957 484.584 187.55 485.176 187.55 485.907 cv
187.55 486.638 186.957 487.23 186.227 487.23 cv
185.497 487.23 184.904 486.638 184.904 485.907 cv
184.904 485.176 185.497 484.584 186.227 484.584 cv
f
123.22 471.608 mo
124.316 471.608 125.204 472.496 125.204 473.592 cv
125.204 474.688 124.316 475.576 123.22 475.576 cv
122.124 475.576 121.236 474.688 121.236 473.592 cv
121.236 472.496 122.124 471.608 123.22 471.608 cv
f
123.22 472.269 mo
123.95 472.269 124.543 472.861 124.543 473.592 cv
124.543 474.322 123.95 474.915 123.22 474.915 cv
122.49 474.915 121.897 474.322 121.897 473.592 cv
121.897 472.861 122.49 472.269 123.22 472.269 cv
f
182.627 487.24 mo
183.723 487.24 184.611 488.128 184.611 489.224 cv
184.611 490.32 183.723 491.209 182.627 491.209 cv
181.531 491.209 180.643 490.32 180.643 489.224 cv
180.643 488.128 181.531 487.24 182.627 487.24 cv
f
182.627 487.901 mo
183.357 487.901 183.95 488.493 183.95 489.224 cv
183.95 489.954 183.357 490.547 182.627 490.547 cv
181.897 490.547 181.304 489.954 181.304 489.224 cv
181.304 488.493 181.897 487.901 182.627 487.901 cv
f
357.37 489.822 mo
358.466 489.822 359.354 490.711 359.354 491.806 cv
359.354 492.902 358.466 493.791 357.37 493.791 cv
356.274 493.791 355.386 492.902 355.386 491.806 cv
355.386 490.711 356.274 489.822 357.37 489.822 cv
f
357.37 490.483 mo
358.1 490.483 358.693 491.075 358.693 491.806 cv
358.693 492.536 358.1 493.129 357.37 493.129 cv
356.64 493.129 356.047 492.536 356.047 491.806 cv
356.047 491.075 356.64 490.483 357.37 490.483 cv
f
140.209 480.423 mo
141.305 480.423 142.193 481.311 142.193 482.407 cv
142.193 483.503 141.305 484.391 140.209 484.391 cv
139.113 484.391 138.225 483.503 138.225 482.407 cv
138.225 481.311 139.113 480.423 140.209 480.423 cv
f
140.209 481.084 mo
140.94 481.084 141.532 481.676 141.532 482.407 cv
141.532 483.138 140.94 483.73 140.209 483.73 cv
139.479 483.73 138.886 483.138 138.886 482.407 cv
138.886 481.676 139.479 481.084 140.209 481.084 cv
f
174.627 485.917 mo
175.723 485.917 176.611 486.806 176.611 487.901 cv
176.611 488.997 175.723 489.886 174.627 489.886 cv
173.531 489.886 172.643 488.997 172.643 487.901 cv
172.643 486.806 173.531 485.917 174.627 485.917 cv
f
174.627 486.579 mo
175.358 486.579 175.95 487.171 175.95 487.902 cv
175.95 488.632 175.358 489.225 174.627 489.225 cv
173.897 489.225 173.304 488.632 173.304 487.902 cv
173.304 487.171 173.897 486.579 174.627 486.579 cv
f
183.594 461.332 mo
184.69 461.332 185.578 462.221 185.578 463.316 cv
185.578 464.412 184.69 465.301 183.594 465.301 cv
182.498 465.301 181.61 464.412 181.61 463.316 cv
181.61 462.221 182.498 461.332 183.594 461.332 cv
f
183.594 461.993 mo
184.324 461.993 184.917 462.585 184.917 463.316 cv
184.917 464.046 184.324 464.639 183.594 464.639 cv
182.864 464.639 182.271 464.046 182.271 463.316 cv
182.271 462.585 182.864 461.993 183.594 461.993 cv
f
124.518 472.712 mo
125.614 472.712 126.502 473.6 126.502 474.696 cv
126.502 475.792 125.614 476.68 124.518 476.68 cv
123.422 476.68 122.534 475.792 122.534 474.696 cv
122.534 473.6 123.422 472.712 124.518 472.712 cv
f
124.518 473.373 mo
125.248 473.373 125.841 473.965 125.841 474.696 cv
125.841 475.427 125.248 476.019 124.518 476.019 cv
123.788 476.019 123.195 475.427 123.195 474.696 cv
123.195 473.965 123.788 473.373 124.518 473.373 cv
f
133.383 452.725 mo
134.479 452.725 135.367 453.614 135.367 454.709 cv
135.367 455.805 134.479 456.694 133.383 456.694 cv
132.287 456.694 131.399 455.805 131.399 454.709 cv
131.399 453.614 132.287 452.725 133.383 452.725 cv
f
133.383 453.386 mo
134.113 453.386 134.706 453.978 134.706 454.709 cv
134.706 455.439 134.113 456.032 133.383 456.032 cv
132.653 456.032 132.06 455.439 132.06 454.709 cv
132.06 453.978 132.653 453.386 133.383 453.386 cv
f
137.731 481.137 mo
138.827 481.137 139.715 482.025 139.715 483.121 cv
139.715 484.217 138.827 485.105 137.731 485.105 cv
136.635 485.105 135.747 484.217 135.747 483.121 cv
135.747 482.025 136.635 481.137 137.731 481.137 cv
f
137.731 481.799 mo
138.461 481.799 139.054 482.391 139.054 483.122 cv
139.054 483.853 138.461 484.445 137.731 484.445 cv
137.001 484.445 136.408 483.853 136.408 483.122 cv
136.408 482.391 137.001 481.799 137.731 481.799 cv
f
168.277 471.922 mo
169.373 471.922 170.261 472.811 170.261 473.906 cv
170.261 475.003 169.373 475.891 168.277 475.891 cv
167.181 475.891 166.293 475.003 166.293 473.906 cv
166.293 472.811 167.181 471.922 168.277 471.922 cv
f
168.277 472.583 mo
169.007 472.583 169.6 473.175 169.6 473.906 cv
169.6 474.636 169.007 475.229 168.277 475.229 cv
167.546 475.229 166.954 474.636 166.954 473.906 cv
166.954 473.175 167.546 472.583 168.277 472.583 cv
f
126.864 471.945 mo
127.96 471.945 128.848 472.833 128.848 473.929 cv
128.848 475.025 127.96 475.913 126.864 475.913 cv
125.768 475.913 124.88 475.025 124.88 473.929 cv
124.88 472.833 125.768 471.945 126.864 471.945 cv
f
126.864 472.606 mo
127.595 472.606 128.187 473.198 128.187 473.929 cv
128.187 474.66 127.595 475.252 126.864 475.252 cv
126.134 475.252 125.541 474.66 125.541 473.929 cv
125.541 473.198 126.134 472.606 126.864 472.606 cv
f
134.769 472.335 mo
135.865 472.335 136.753 473.223 136.753 474.319 cv
136.753 475.415 135.865 476.303 134.769 476.303 cv
133.673 476.303 132.785 475.415 132.785 474.319 cv
132.785 473.223 133.673 472.335 134.769 472.335 cv
f
134.769 472.997 mo
135.499 472.997 136.092 473.589 136.092 474.32 cv
136.092 475.05 135.499 475.643 134.769 475.643 cv
134.039 475.643 133.446 475.05 133.446 474.32 cv
133.446 473.589 134.039 472.997 134.769 472.997 cv
f
160.307 482.186 mo
161.403 482.186 162.291 483.075 162.291 484.17 cv
162.291 485.266 161.403 486.155 160.307 486.155 cv
159.211 486.155 158.323 485.266 158.323 484.17 cv
158.323 483.075 159.211 482.186 160.307 482.186 cv
f
160.307 482.848 mo
161.037 482.848 161.63 483.44 161.63 484.171 cv
161.63 484.901 161.037 485.494 160.307 485.494 cv
159.577 485.494 158.984 484.901 158.984 484.171 cv
158.984 483.44 159.577 482.848 160.307 482.848 cv
f
143.164 479.234 mo
144.26 479.234 145.148 480.123 145.148 481.218 cv
145.148 482.314 144.26 483.203 143.164 483.203 cv
142.068 483.203 141.18 482.314 141.18 481.218 cv
141.18 480.123 142.068 479.234 143.164 479.234 cv
f
143.164 479.895 mo
143.894 479.895 144.487 480.487 144.487 481.218 cv
144.487 481.948 143.894 482.541 143.164 482.541 cv
142.433 482.541 141.841 481.948 141.841 481.218 cv
141.841 480.487 142.433 479.895 143.164 479.895 cv
f
154.742 485.439 mo
155.838 485.439 156.726 486.327 156.726 487.423 cv
156.726 488.519 155.838 489.407 154.742 489.407 cv
153.646 489.407 152.758 488.519 152.758 487.423 cv
152.758 486.327 153.646 485.439 154.742 485.439 cv
f
154.742 486.101 mo
155.472 486.101 156.065 486.693 156.065 487.424 cv
156.065 488.154 155.472 488.747 154.742 488.747 cv
154.011 488.747 153.419 488.154 153.419 487.424 cv
153.419 486.693 154.011 486.101 154.742 486.101 cv
f
135.274 492.383 mo
136.37 492.383 137.258 493.272 137.258 494.367 cv
137.258 495.463 136.37 496.352 135.274 496.352 cv
134.178 496.352 133.29 495.463 133.29 494.367 cv
133.29 493.272 134.178 492.383 135.274 492.383 cv
f
135.274 493.044 mo
136.004 493.044 136.597 493.636 136.597 494.367 cv
136.597 495.097 136.004 495.69 135.274 495.69 cv
134.544 495.69 133.951 495.097 133.951 494.367 cv
133.951 493.636 134.544 493.044 135.274 493.044 cv
f
145.532 461.708 mo
146.628 461.708 147.516 462.596 147.516 463.692 cv
147.516 464.788 146.628 465.676 145.532 465.676 cv
144.436 465.676 143.548 464.788 143.548 463.692 cv
143.548 462.596 144.436 461.708 145.532 461.708 cv
f
145.532 462.369 mo
146.263 462.369 146.855 462.961 146.855 463.692 cv
146.855 464.423 146.263 465.015 145.532 465.015 cv
144.802 465.015 144.209 464.423 144.209 463.692 cv
144.209 462.961 144.802 462.369 145.532 462.369 cv
f
148.714 503.349 mo
149.81 503.349 150.698 504.238 150.698 505.333 cv
150.698 506.429 149.81 507.318 148.714 507.318 cv
147.618 507.318 146.73 506.429 146.73 505.333 cv
146.73 504.238 147.618 503.349 148.714 503.349 cv
f
148.714 504.011 mo
149.444 504.011 150.037 504.603 150.037 505.334 cv
150.037 506.064 149.444 506.657 148.714 506.657 cv
147.984 506.657 147.391 506.064 147.391 505.334 cv
147.391 504.603 147.984 504.011 148.714 504.011 cv
f
142.966 475.848 mo
144.062 475.848 144.95 476.737 144.95 477.832 cv
144.95 478.928 144.062 479.817 142.966 479.817 cv
141.87 479.817 140.982 478.928 140.982 477.832 cv
140.982 476.737 141.87 475.848 142.966 475.848 cv
f
142.966 476.51 mo
143.696 476.51 144.289 477.102 144.289 477.833 cv
144.289 478.563 143.696 479.156 142.966 479.156 cv
142.235 479.156 141.643 478.563 141.643 477.833 cv
141.643 477.102 142.235 476.51 142.966 476.51 cv
f
134.519 475.813 mo
135.615 475.813 136.503 476.702 136.503 477.797 cv
136.503 478.893 135.615 479.782 134.519 479.782 cv
133.423 479.782 132.535 478.893 132.535 477.797 cv
132.535 476.702 133.423 475.813 134.519 475.813 cv
f
134.519 476.474 mo
135.25 476.474 135.842 477.066 135.842 477.797 cv
135.842 478.527 135.25 479.12 134.519 479.12 cv
133.789 479.12 133.196 478.527 133.196 477.797 cv
133.196 477.066 133.789 476.474 134.519 476.474 cv
f
139.293 454.165 mo
140.389 454.165 141.277 455.053 141.277 456.149 cv
141.277 457.245 140.389 458.134 139.293 458.134 cv
138.197 458.134 137.309 457.245 137.309 456.149 cv
137.309 455.053 138.197 454.165 139.293 454.165 cv
f
139.293 454.826 mo
140.024 454.826 140.616 455.418 140.616 456.149 cv
140.616 456.879 140.024 457.472 139.293 457.472 cv
138.563 457.472 137.97 456.879 137.97 456.149 cv
137.97 455.418 138.563 454.826 139.293 454.826 cv
f
129.893 459.375 mo
130.989 459.375 131.877 460.264 131.877 461.359 cv
131.877 462.456 130.989 463.344 129.893 463.344 cv
128.797 463.344 127.909 462.456 127.909 461.359 cv
127.909 460.264 128.797 459.375 129.893 459.375 cv
f
129.893 460.037 mo
130.623 460.037 131.216 460.629 131.216 461.36 cv
131.216 462.09 130.623 462.683 129.893 462.683 cv
129.163 462.683 128.57 462.09 128.57 461.36 cv
128.57 460.629 129.163 460.037 129.893 460.037 cv
f
138.031 459.291 mo
139.127 459.291 140.015 460.18 140.015 461.275 cv
140.015 462.372 139.127 463.26 138.031 463.26 cv
136.935 463.26 136.047 462.372 136.047 461.275 cv
136.047 460.18 136.935 459.291 138.031 459.291 cv
f
138.031 459.953 mo
138.761 459.953 139.354 460.545 139.354 461.276 cv
139.354 462.006 138.761 462.599 138.031 462.599 cv
137.301 462.599 136.708 462.006 136.708 461.276 cv
136.708 460.545 137.301 459.953 138.031 459.953 cv
f
130.061 463.818 mo
131.157 463.818 132.045 464.707 132.045 465.802 cv
132.045 466.898 131.157 467.787 130.061 467.787 cv
128.965 467.787 128.077 466.898 128.077 465.802 cv
128.077 464.707 128.965 463.818 130.061 463.818 cv
f
130.061 464.48 mo
130.792 464.48 131.384 465.072 131.384 465.803 cv
131.384 466.533 130.792 467.126 130.061 467.126 cv
129.331 467.126 128.738 466.533 128.738 465.803 cv
128.738 465.072 129.331 464.48 130.061 464.48 cv
f
129.819 482.752 mo
130.915 482.752 131.803 483.641 131.803 484.736 cv
131.803 485.832 130.915 486.721 129.819 486.721 cv
128.723 486.721 127.835 485.832 127.835 484.736 cv
127.835 483.641 128.723 482.752 129.819 482.752 cv
f
129.819 483.413 mo
130.549 483.413 131.142 484.005 131.142 484.736 cv
131.142 485.466 130.549 486.059 129.819 486.059 cv
129.088 486.059 128.496 485.466 128.496 484.736 cv
128.496 484.005 129.088 483.413 129.819 483.413 cv
f
136.19 471.601 mo
137.286 471.601 138.174 472.49 138.174 473.585 cv
138.174 474.682 137.286 475.57 136.19 475.57 cv
135.094 475.57 134.206 474.682 134.206 473.585 cv
134.206 472.49 135.094 471.601 136.19 471.601 cv
f
136.19 472.262 mo
136.921 472.262 137.513 472.854 137.513 473.585 cv
137.513 474.315 136.921 474.908 136.19 474.908 cv
135.46 474.908 134.867 474.315 134.867 473.585 cv
134.867 472.854 135.46 472.262 136.19 472.262 cv
f
161.736 434.364 mo
162.832 434.364 163.72 435.253 163.72 436.348 cv
163.72 437.444 162.832 438.333 161.736 438.333 cv
160.64 438.333 159.752 437.444 159.752 436.348 cv
159.752 435.253 160.64 434.364 161.736 434.364 cv
f
161.736 435.026 mo
162.466 435.026 163.059 435.618 163.059 436.349 cv
163.059 437.079 162.466 437.672 161.736 437.672 cv
161.006 437.672 160.413 437.079 160.413 436.349 cv
160.413 435.618 161.006 435.026 161.736 435.026 cv
f
150.232 499.654 mo
151.328 499.654 152.216 500.543 152.216 501.638 cv
152.216 502.735 151.328 503.623 150.232 503.623 cv
149.136 503.623 148.248 502.735 148.248 501.638 cv
148.248 500.543 149.136 499.654 150.232 499.654 cv
f
150.232 500.316 mo
150.962 500.316 151.555 500.908 151.555 501.639 cv
151.555 502.369 150.962 502.962 150.232 502.962 cv
149.502 502.962 148.909 502.369 148.909 501.639 cv
148.909 500.908 149.502 500.316 150.232 500.316 cv
f
191.286 500.338 mo
192.382 500.338 193.27 501.226 193.27 502.322 cv
193.27 503.418 192.382 504.307 191.286 504.307 cv
190.19 504.307 189.302 503.418 189.302 502.322 cv
189.302 501.226 190.19 500.338 191.286 500.338 cv
f
191.286 501 mo
192.016 501 192.609 501.592 192.609 502.323 cv
192.609 503.053 192.016 503.646 191.286 503.646 cv
190.556 503.646 189.963 503.053 189.963 502.323 cv
189.963 501.592 190.556 501 191.286 501 cv
f
216.121 495.956 mo
217.217 495.956 218.105 496.844 218.105 497.94 cv
218.105 499.036 217.217 499.924 216.121 499.924 cv
215.025 499.924 214.137 499.036 214.137 497.94 cv
214.137 496.844 215.025 495.956 216.121 495.956 cv
f
216.121 496.617 mo
216.851 496.617 217.444 497.209 217.444 497.94 cv
217.444 498.671 216.851 499.263 216.121 499.263 cv
215.391 499.263 214.798 498.671 214.798 497.94 cv
214.798 497.209 215.391 496.617 216.121 496.617 cv
f
135.032 483.051 mo
136.128 483.051 137.016 483.939 137.016 485.035 cv
137.016 486.131 136.128 487.019 135.032 487.019 cv
133.936 487.019 133.048 486.131 133.048 485.035 cv
133.048 483.939 133.936 483.051 135.032 483.051 cv
f
135.032 483.712 mo
135.763 483.712 136.355 484.304 136.355 485.035 cv
136.355 485.765 135.763 486.358 135.032 486.358 cv
134.302 486.358 133.709 485.765 133.709 485.035 cv
133.709 484.304 134.302 483.712 135.032 483.712 cv
f
125.713 473.956 mo
126.809 473.956 127.697 474.844 127.697 475.94 cv
127.697 477.036 126.809 477.924 125.713 477.924 cv
124.617 477.924 123.729 477.036 123.729 475.94 cv
123.729 474.844 124.617 473.956 125.713 473.956 cv
f
125.713 474.617 mo
126.444 474.617 127.036 475.209 127.036 475.94 cv
127.036 476.671 126.444 477.263 125.713 477.263 cv
124.983 477.263 124.39 476.671 124.39 475.94 cv
124.39 475.209 124.983 474.617 125.713 474.617 cv
f
147.71 473.883 mo
148.806 473.883 149.694 474.771 149.694 475.867 cv
149.694 476.963 148.806 477.851 147.71 477.851 cv
146.614 477.851 145.726 476.963 145.726 475.867 cv
145.726 474.771 146.614 473.883 147.71 473.883 cv
f
147.71 474.544 mo
148.44 474.544 149.033 475.136 149.033 475.867 cv
149.033 476.598 148.44 477.19 147.71 477.19 cv
146.979 477.19 146.387 476.598 146.387 475.867 cv
146.387 475.136 146.979 474.544 147.71 474.544 cv
f
163.511 469.471 mo
164.607 469.471 165.495 470.359 165.495 471.455 cv
165.495 472.551 164.607 473.439 163.511 473.439 cv
162.415 473.439 161.527 472.551 161.527 471.455 cv
161.527 470.359 162.415 469.471 163.511 469.471 cv
f
163.511 470.133 mo
164.242 470.133 164.834 470.725 164.834 471.456 cv
164.834 472.187 164.242 472.779 163.511 472.779 cv
162.781 472.779 162.188 472.187 162.188 471.456 cv
162.188 470.725 162.781 470.133 163.511 470.133 cv
f
151.582 475.818 mo
152.678 475.818 153.566 476.706 153.566 477.802 cv
153.566 478.898 152.678 479.786 151.582 479.786 cv
150.486 479.786 149.598 478.898 149.598 477.802 cv
149.598 476.706 150.486 475.818 151.582 475.818 cv
f
151.582 476.479 mo
152.313 476.479 152.905 477.071 152.905 477.802 cv
152.905 478.533 152.313 479.125 151.582 479.125 cv
150.852 479.125 150.259 478.533 150.259 477.802 cv
150.259 477.071 150.852 476.479 151.582 476.479 cv
f
125.815 513.451 mo
126.911 513.451 127.799 514.339 127.799 515.435 cv
127.799 516.531 126.911 517.419 125.815 517.419 cv
124.719 517.419 123.831 516.531 123.831 515.435 cv
123.831 514.339 124.719 513.451 125.815 513.451 cv
f
125.815 514.113 mo
126.546 514.113 127.138 514.705 127.138 515.436 cv
127.138 516.166 126.546 516.759 125.815 516.759 cv
125.085 516.759 124.492 516.166 124.492 515.436 cv
124.492 514.705 125.085 514.113 125.815 514.113 cv
f
182.502 483.366 mo
183.598 483.366 184.486 484.254 184.486 485.35 cv
184.486 486.446 183.598 487.334 182.502 487.334 cv
181.406 487.334 180.518 486.446 180.518 485.35 cv
180.518 484.254 181.406 483.366 182.502 483.366 cv
f
182.502 484.028 mo
183.232 484.028 183.825 484.62 183.825 485.351 cv
183.825 486.082 183.232 486.674 182.502 486.674 cv
181.772 486.674 181.179 486.082 181.179 485.351 cv
181.179 484.62 181.772 484.028 182.502 484.028 cv
f
138.486 473.824 mo
139.582 473.824 140.47 474.713 140.47 475.808 cv
140.47 476.904 139.582 477.793 138.486 477.793 cv
137.39 477.793 136.502 476.904 136.502 475.808 cv
136.502 474.713 137.39 473.824 138.486 473.824 cv
f
138.486 474.486 mo
139.216 474.486 139.809 475.078 139.809 475.809 cv
139.809 476.539 139.216 477.132 138.486 477.132 cv
137.755 477.132 137.163 476.539 137.163 475.809 cv
137.163 475.078 137.755 474.486 138.486 474.486 cv
f
137.687 454.094 mo
138.783 454.094 139.671 454.982 139.671 456.078 cv
139.671 457.174 138.783 458.062 137.687 458.062 cv
136.591 458.062 135.703 457.174 135.703 456.078 cv
135.703 454.982 136.591 454.094 137.687 454.094 cv
f
137.687 454.755 mo
138.418 454.755 139.01 455.347 139.01 456.078 cv
139.01 456.809 138.418 457.401 137.687 457.401 cv
136.957 457.401 136.364 456.809 136.364 456.078 cv
136.364 455.347 136.957 454.755 137.687 454.755 cv
f
135.069 482.727 mo
136.165 482.727 137.053 483.615 137.053 484.711 cv
137.053 485.807 136.165 486.695 135.069 486.695 cv
133.973 486.695 133.085 485.807 133.085 484.711 cv
133.085 483.615 133.973 482.727 135.069 482.727 cv
f
135.069 483.388 mo
135.799 483.388 136.392 483.98 136.392 484.711 cv
136.392 485.442 135.799 486.034 135.069 486.034 cv
134.339 486.034 133.746 485.442 133.746 484.711 cv
133.746 483.98 134.339 483.388 135.069 483.388 cv
f
144.381 510.154 mo
145.477 510.154 146.365 511.042 146.365 512.138 cv
146.365 513.234 145.477 514.122 144.381 514.122 cv
143.285 514.122 142.397 513.234 142.397 512.138 cv
142.397 511.042 143.285 510.154 144.381 510.154 cv
f
144.381 510.815 mo
145.111 510.815 145.704 511.407 145.704 512.138 cv
145.704 512.868 145.111 513.461 144.381 513.461 cv
143.651 513.461 143.058 512.868 143.058 512.138 cv
143.058 511.407 143.651 510.815 144.381 510.815 cv
f
136.103 480.05 mo
137.199 480.05 138.087 480.938 138.087 482.034 cv
138.087 483.13 137.199 484.018 136.103 484.018 cv
135.007 484.018 134.119 483.13 134.119 482.034 cv
134.119 480.938 135.007 480.05 136.103 480.05 cv
f
136.103 480.711 mo
136.833 480.711 137.426 481.303 137.426 482.034 cv
137.426 482.765 136.833 483.357 136.103 483.357 cv
135.373 483.357 134.78 482.765 134.78 482.034 cv
134.78 481.303 135.373 480.711 136.103 480.711 cv
f
127.37 394.24 mo
128.466 394.24 129.354 395.129 129.354 396.224 cv
129.354 397.321 128.466 398.209 127.37 398.209 cv
126.274 398.209 125.386 397.321 125.386 396.224 cv
125.386 395.129 126.274 394.24 127.37 394.24 cv
f
127.37 394.902 mo
128.1 394.902 128.693 395.494 128.693 396.225 cv
128.693 396.955 128.1 397.548 127.37 397.548 cv
126.639 397.548 126.047 396.955 126.047 396.225 cv
126.047 395.494 126.639 394.902 127.37 394.902 cv
f
143.362 479.582 mo
144.458 479.582 145.346 480.471 145.346 481.566 cv
145.346 482.662 144.458 483.551 143.362 483.551 cv
142.266 483.551 141.378 482.662 141.378 481.566 cv
141.378 480.471 142.266 479.582 143.362 479.582 cv
f
143.362 480.244 mo
144.092 480.244 144.685 480.836 144.685 481.567 cv
144.685 482.297 144.092 482.89 143.362 482.89 cv
142.631 482.89 142.039 482.297 142.039 481.567 cv
142.039 480.836 142.631 480.244 143.362 480.244 cv
f
123.147 471.729 mo
124.243 471.729 125.131 472.618 125.131 473.713 cv
125.131 474.809 124.243 475.698 123.147 475.698 cv
122.051 475.698 121.163 474.809 121.163 473.713 cv
121.163 472.618 122.051 471.729 123.147 471.729 cv
f
123.147 472.391 mo
123.877 472.391 124.47 472.983 124.47 473.714 cv
124.47 474.444 123.877 475.037 123.147 475.037 cv
122.417 475.037 121.824 474.444 121.824 473.714 cv
121.824 472.983 122.417 472.391 123.147 472.391 cv
f
137.335 474.891 mo
138.431 474.891 139.319 475.78 139.319 476.875 cv
139.319 477.971 138.431 478.86 137.335 478.86 cv
136.239 478.86 135.351 477.971 135.351 476.875 cv
135.351 475.78 136.239 474.891 137.335 474.891 cv
f
137.335 475.553 mo
138.065 475.553 138.658 476.145 138.658 476.876 cv
138.658 477.606 138.065 478.199 137.335 478.199 cv
136.605 478.199 136.012 477.606 136.012 476.876 cv
136.012 476.145 136.605 475.553 137.335 475.553 cv
f
154.434 450.804 mo
155.53 450.804 156.418 451.692 156.418 452.788 cv
156.418 453.884 155.53 454.772 154.434 454.772 cv
153.338 454.772 152.45 453.884 152.45 452.788 cv
152.45 451.692 153.338 450.804 154.434 450.804 cv
f
154.434 451.466 mo
155.164 451.466 155.757 452.058 155.757 452.789 cv
155.757 453.519 155.164 454.112 154.434 454.112 cv
153.704 454.112 153.111 453.519 153.111 452.789 cv
153.111 452.058 153.704 451.466 154.434 451.466 cv
f
134.263 481.028 mo
135.359 481.028 136.247 481.916 136.247 483.012 cv
136.247 484.108 135.359 484.996 134.263 484.996 cv
133.167 484.996 132.279 484.108 132.279 483.012 cv
132.279 481.916 133.167 481.028 134.263 481.028 cv
f
134.263 481.689 mo
134.993 481.689 135.586 482.281 135.586 483.012 cv
135.586 483.743 134.993 484.335 134.263 484.335 cv
133.533 484.335 132.94 483.743 132.94 483.012 cv
132.94 482.281 133.533 481.689 134.263 481.689 cv
f
148.282 487.593 mo
149.378 487.593 150.266 488.482 150.266 489.577 cv
150.266 490.673 149.378 491.562 148.282 491.562 cv
147.186 491.562 146.298 490.673 146.298 489.577 cv
146.298 488.482 147.186 487.593 148.282 487.593 cv
f
148.282 488.254 mo
149.013 488.254 149.605 488.846 149.605 489.577 cv
149.605 490.307 149.013 490.9 148.282 490.9 cv
147.552 490.9 146.959 490.307 146.959 489.577 cv
146.959 488.846 147.552 488.254 148.282 488.254 cv
f
127.678 512.47 mo
128.774 512.47 129.662 513.359 129.662 514.454 cv
129.662 515.55 128.774 516.439 127.678 516.439 cv
126.582 516.439 125.694 515.55 125.694 514.454 cv
125.694 513.359 126.582 512.47 127.678 512.47 cv
f
127.678 513.132 mo
128.408 513.132 129.001 513.724 129.001 514.455 cv
129.001 515.185 128.408 515.778 127.678 515.778 cv
126.948 515.778 126.355 515.185 126.355 514.455 cv
126.355 513.724 126.948 513.132 127.678 513.132 cv
f
135.7 493.96 mo
136.796 493.96 137.684 494.848 137.684 495.944 cv
137.684 497.04 136.796 497.928 135.7 497.928 cv
134.604 497.928 133.716 497.04 133.716 495.944 cv
133.716 494.848 134.604 493.96 135.7 493.96 cv
f
135.7 494.621 mo
136.43 494.621 137.023 495.213 137.023 495.944 cv
137.023 496.675 136.43 497.267 135.7 497.267 cv
134.97 497.267 134.377 496.675 134.377 495.944 cv
134.377 495.213 134.97 494.621 135.7 494.621 cv
f
145.584 465.301 mo
146.68 465.301 147.568 466.189 147.568 467.285 cv
147.568 468.381 146.68 469.269 145.584 469.269 cv
144.488 469.269 143.6 468.381 143.6 467.285 cv
143.6 466.189 144.488 465.301 145.584 465.301 cv
f
145.584 465.962 mo
146.314 465.962 146.907 466.554 146.907 467.285 cv
146.907 468.016 146.314 468.608 145.584 468.608 cv
144.853 468.608 144.261 468.016 144.261 467.285 cv
144.261 466.554 144.853 465.962 145.584 465.962 cv
f
245.648 479.677 mo
246.744 479.677 247.632 480.565 247.632 481.661 cv
247.632 482.757 246.744 483.645 245.648 483.645 cv
244.552 483.645 243.664 482.757 243.664 481.661 cv
243.664 480.565 244.552 479.677 245.648 479.677 cv
f
245.648 480.338 mo
246.378 480.338 246.971 480.93 246.971 481.661 cv
246.971 482.392 246.378 482.984 245.648 482.984 cv
244.918 482.984 244.325 482.392 244.325 481.661 cv
244.325 480.93 244.918 480.338 245.648 480.338 cv
f
139.967 456.462 mo
141.063 456.462 141.951 457.35 141.951 458.446 cv
141.951 459.542 141.063 460.43 139.967 460.43 cv
138.871 460.43 137.983 459.542 137.983 458.446 cv
137.983 457.35 138.871 456.462 139.967 456.462 cv
f
139.967 457.123 mo
140.697 457.123 141.29 457.715 141.29 458.446 cv
141.29 459.177 140.697 459.769 139.967 459.769 cv
139.237 459.769 138.644 459.177 138.644 458.446 cv
138.644 457.715 139.237 457.123 139.967 457.123 cv
f
126.798 515.035 mo
127.894 515.035 128.782 515.924 128.782 517.019 cv
128.782 518.115 127.894 519.004 126.798 519.004 cv
125.702 519.004 124.814 518.115 124.814 517.019 cv
124.814 515.924 125.702 515.035 126.798 515.035 cv
f
126.798 515.697 mo
127.529 515.697 128.121 516.289 128.121 517.02 cv
128.121 517.75 127.529 518.343 126.798 518.343 cv
126.068 518.343 125.475 517.75 125.475 517.02 cv
125.475 516.289 126.068 515.697 126.798 515.697 cv
f
127.729 467.291 mo
128.825 467.291 129.713 468.179 129.713 469.275 cv
129.713 470.371 128.825 471.259 127.729 471.259 cv
126.633 471.259 125.745 470.371 125.745 469.275 cv
125.745 468.179 126.633 467.291 127.729 467.291 cv
f
127.729 467.952 mo
128.459 467.952 129.052 468.544 129.052 469.275 cv
129.052 470.006 128.459 470.598 127.729 470.598 cv
126.999 470.598 126.406 470.006 126.406 469.275 cv
126.406 468.544 126.999 467.952 127.729 467.952 cv
f
127.686 465.691 mo
128.782 465.691 129.67 466.58 129.67 467.675 cv
129.67 468.771 128.782 469.66 127.686 469.66 cv
126.59 469.66 125.702 468.771 125.702 467.675 cv
125.702 466.58 126.59 465.691 127.686 465.691 cv
f
127.686 466.353 mo
128.416 466.353 129.009 466.945 129.009 467.676 cv
129.009 468.406 128.416 468.999 127.686 468.999 cv
126.956 468.999 126.363 468.406 126.363 467.676 cv
126.363 466.945 126.956 466.353 127.686 466.353 cv
f
124.129 465.695 mo
125.225 465.695 126.113 466.583 126.113 467.679 cv
126.113 468.775 125.225 469.664 124.129 469.664 cv
123.033 469.664 122.145 468.775 122.145 467.679 cv
122.145 466.583 123.033 465.695 124.129 465.695 cv
f
124.129 466.356 mo
124.86 466.356 125.452 466.948 125.452 467.679 cv
125.452 468.409 124.86 469.002 124.129 469.002 cv
123.399 469.002 122.806 468.409 122.806 467.679 cv
122.806 466.948 123.399 466.356 124.129 466.356 cv
f
140.429 484.607 mo
141.525 484.607 142.413 485.495 142.413 486.591 cv
142.413 487.687 141.525 488.575 140.429 488.575 cv
139.333 488.575 138.445 487.687 138.445 486.591 cv
138.445 485.495 139.333 484.607 140.429 484.607 cv
f
140.429 485.268 mo
141.16 485.268 141.752 485.86 141.752 486.591 cv
141.752 487.321 141.16 487.914 140.429 487.914 cv
139.699 487.914 139.106 487.321 139.106 486.591 cv
139.106 485.86 139.699 485.268 140.429 485.268 cv
f
146.31 477.039 mo
147.406 477.039 148.294 477.927 148.294 479.023 cv
148.294 480.119 147.406 481.007 146.31 481.007 cv
145.214 481.007 144.326 480.119 144.326 479.023 cv
144.326 477.927 145.214 477.039 146.31 477.039 cv
f
146.31 477.7 mo
147.04 477.7 147.633 478.292 147.633 479.023 cv
147.633 479.754 147.04 480.346 146.31 480.346 cv
145.58 480.346 144.987 479.754 144.987 479.023 cv
144.987 478.292 145.58 477.7 146.31 477.7 cv
f
128.99 482.065 mo
130.086 482.065 130.974 482.954 130.974 484.049 cv
130.974 485.145 130.086 486.034 128.99 486.034 cv
127.894 486.034 127.006 485.145 127.006 484.049 cv
127.006 482.954 127.894 482.065 128.99 482.065 cv
f
128.99 482.727 mo
129.721 482.727 130.313 483.319 130.313 484.05 cv
130.313 484.78 129.721 485.373 128.99 485.373 cv
128.26 485.373 127.667 484.78 127.667 484.05 cv
127.667 483.319 128.26 482.727 128.99 482.727 cv
f
133.075 486.717 mo
134.171 486.717 135.059 487.605 135.059 488.701 cv
135.059 489.797 134.171 490.685 133.075 490.685 cv
131.979 490.685 131.091 489.797 131.091 488.701 cv
131.091 487.605 131.979 486.717 133.075 486.717 cv
f
133.075 487.378 mo
133.805 487.378 134.398 487.97 134.398 488.701 cv
134.398 489.432 133.805 490.024 133.075 490.024 cv
132.345 490.024 131.752 489.432 131.752 488.701 cv
131.752 487.97 132.345 487.378 133.075 487.378 cv
f
132.92 477.41 mo
134.016 477.41 134.904 478.298 134.904 479.394 cv
134.904 480.49 134.016 481.378 132.92 481.378 cv
131.824 481.378 130.936 480.49 130.936 479.394 cv
130.936 478.298 131.824 477.41 132.92 477.41 cv
f
132.92 478.072 mo
133.651 478.072 134.243 478.664 134.243 479.395 cv
134.243 480.126 133.651 480.718 132.92 480.718 cv
132.19 480.718 131.597 480.126 131.597 479.395 cv
131.597 478.664 132.19 478.072 132.92 478.072 cv
f
156.919 474.767 mo
158.015 474.767 158.903 475.655 158.903 476.751 cv
158.903 477.847 158.015 478.735 156.919 478.735 cv
155.823 478.735 154.935 477.847 154.935 476.751 cv
154.935 475.655 155.823 474.767 156.919 474.767 cv
f
156.919 475.428 mo
157.649 475.428 158.242 476.02 158.242 476.751 cv
158.242 477.482 157.649 478.074 156.919 478.074 cv
156.189 478.074 155.596 477.482 155.596 476.751 cv
155.596 476.02 156.189 475.428 156.919 475.428 cv
f
131.169 461.632 mo
132.265 461.632 133.153 462.52 133.153 463.616 cv
133.153 464.712 132.265 465.6 131.169 465.6 cv
130.073 465.6 129.185 464.712 129.185 463.616 cv
129.185 462.52 130.073 461.632 131.169 461.632 cv
f
131.169 462.293 mo
131.899 462.293 132.492 462.885 132.492 463.616 cv
132.492 464.346 131.899 464.939 131.169 464.939 cv
130.439 464.939 129.846 464.346 129.846 463.616 cv
129.846 462.885 130.439 462.293 131.169 462.293 cv
f
130.809 463.625 mo
131.905 463.625 132.793 464.513 132.793 465.609 cv
132.793 466.705 131.905 467.593 130.809 467.593 cv
129.713 467.593 128.825 466.705 128.825 465.609 cv
128.825 464.513 129.713 463.625 130.809 463.625 cv
f
130.809 464.286 mo
131.539 464.286 132.132 464.878 132.132 465.609 cv
132.132 466.34 131.539 466.932 130.809 466.932 cv
130.079 466.932 129.486 466.34 129.486 465.609 cv
129.486 464.878 130.079 464.286 130.809 464.286 cv
f
124.232 490.091 mo
125.328 490.091 126.216 490.979 126.216 492.075 cv
126.216 493.171 125.328 494.059 124.232 494.059 cv
123.136 494.059 122.248 493.171 122.248 492.075 cv
122.248 490.979 123.136 490.091 124.232 490.091 cv
f
124.232 490.752 mo
124.962 490.752 125.555 491.344 125.555 492.075 cv
125.555 492.806 124.962 493.398 124.232 493.398 cv
123.501 493.398 122.909 492.806 122.909 492.075 cv
122.909 491.344 123.501 490.752 124.232 490.752 cv
f
129.922 475.059 mo
131.018 475.059 131.906 475.948 131.906 477.043 cv
131.906 478.139 131.018 479.028 129.922 479.028 cv
128.826 479.028 127.938 478.139 127.938 477.043 cv
127.938 475.948 128.826 475.059 129.922 475.059 cv
f
129.922 475.72 mo
130.652 475.72 131.245 476.312 131.245 477.043 cv
131.245 477.773 130.652 478.366 129.922 478.366 cv
129.191 478.366 128.599 477.773 128.599 477.043 cv
128.599 476.312 129.191 475.72 129.922 475.72 cv
f
143.582 500.623 mo
144.678 500.623 145.566 501.511 145.566 502.607 cv
145.566 503.703 144.678 504.591 143.582 504.591 cv
142.486 504.591 141.598 503.703 141.598 502.607 cv
141.598 501.511 142.486 500.623 143.582 500.623 cv
f
143.582 501.284 mo
144.312 501.284 144.905 501.876 144.905 502.607 cv
144.905 503.338 144.312 503.93 143.582 503.93 cv
142.852 503.93 142.259 503.338 142.259 502.607 cv
142.259 501.876 142.852 501.284 143.582 501.284 cv
f
143.494 490.969 mo
144.59 490.969 145.478 491.857 145.478 492.953 cv
145.478 494.049 144.59 494.937 143.494 494.937 cv
142.398 494.937 141.51 494.049 141.51 492.953 cv
141.51 491.857 142.398 490.969 143.494 490.969 cv
f
143.494 491.631 mo
144.224 491.631 144.817 492.223 144.817 492.954 cv
144.817 493.685 144.224 494.277 143.494 494.277 cv
142.763 494.277 142.171 493.685 142.171 492.954 cv
142.171 492.223 142.763 491.631 143.494 491.631 cv
f
151.222 488.624 mo
152.318 488.624 153.206 489.513 153.206 490.608 cv
153.206 491.704 152.318 492.593 151.222 492.593 cv
150.126 492.593 149.238 491.704 149.238 490.608 cv
149.238 489.513 150.126 488.624 151.222 488.624 cv
f
151.222 489.285 mo
151.953 489.285 152.545 489.877 152.545 490.608 cv
152.545 491.338 151.953 491.931 151.222 491.931 cv
150.492 491.931 149.899 491.338 149.899 490.608 cv
149.899 489.877 150.492 489.285 151.222 489.285 cv
f
131.44 508.814 mo
132.536 508.814 133.424 509.702 133.424 510.798 cv
133.424 511.894 132.536 512.782 131.44 512.782 cv
130.344 512.782 129.456 511.894 129.456 510.798 cv
129.456 509.702 130.344 508.814 131.44 508.814 cv
f
131.44 509.475 mo
132.171 509.475 132.763 510.067 132.763 510.798 cv
132.763 511.529 132.171 512.121 131.44 512.121 cv
130.71 512.121 130.117 511.529 130.117 510.798 cv
130.117 510.067 130.71 509.475 131.44 509.475 cv
f
148.634 486.43 mo
149.73 486.43 150.618 487.318 150.618 488.414 cv
150.618 489.51 149.73 490.399 148.634 490.399 cv
147.538 490.399 146.65 489.51 146.65 488.414 cv
146.65 487.318 147.538 486.43 148.634 486.43 cv
f
148.634 487.092 mo
149.364 487.092 149.957 487.684 149.957 488.415 cv
149.957 489.145 149.364 489.738 148.634 489.738 cv
147.904 489.738 147.311 489.145 147.311 488.415 cv
147.311 487.684 147.904 487.092 148.634 487.092 cv
f
128.36 473.053 mo
129.456 473.053 130.344 473.942 130.344 475.037 cv
130.344 476.133 129.456 477.022 128.36 477.022 cv
127.264 477.022 126.376 476.133 126.376 475.037 cv
126.376 473.942 127.264 473.053 128.36 473.053 cv
f
128.36 473.715 mo
129.091 473.715 129.683 474.307 129.683 475.038 cv
129.683 475.768 129.091 476.361 128.36 476.361 cv
127.63 476.361 127.037 475.768 127.037 475.038 cv
127.037 474.307 127.63 473.715 128.36 473.715 cv
f
140.136 482.975 mo
141.232 482.975 142.12 483.863 142.12 484.959 cv
142.12 486.055 141.232 486.943 140.136 486.943 cv
139.04 486.943 138.152 486.055 138.152 484.959 cv
138.152 483.863 139.04 482.975 140.136 482.975 cv
f
140.136 483.636 mo
140.867 483.636 141.459 484.228 141.459 484.959 cv
141.459 485.69 140.867 486.282 140.136 486.282 cv
139.406 486.282 138.813 485.69 138.813 484.959 cv
138.813 484.228 139.406 483.636 140.136 483.636 cv
f
130.641 495.212 mo
131.737 495.212 132.625 496.101 132.625 497.196 cv
132.625 498.292 131.737 499.181 130.641 499.181 cv
129.545 499.181 128.657 498.292 128.657 497.196 cv
128.657 496.101 129.545 495.212 130.641 495.212 cv
f
130.641 495.874 mo
131.371 495.874 131.964 496.466 131.964 497.197 cv
131.964 497.927 131.371 498.52 130.641 498.52 cv
129.911 498.52 129.318 497.927 129.318 497.197 cv
129.318 496.466 129.911 495.874 130.641 495.874 cv
f
124.012 491.039 mo
125.108 491.039 125.996 491.928 125.996 493.023 cv
125.996 494.119 125.108 495.008 124.012 495.008 cv
122.916 495.008 122.028 494.119 122.028 493.023 cv
122.028 491.928 122.916 491.039 124.012 491.039 cv
f
124.012 491.701 mo
124.742 491.701 125.335 492.293 125.335 493.024 cv
125.335 493.754 124.742 494.347 124.012 494.347 cv
123.281 494.347 122.689 493.754 122.689 493.024 cv
122.689 492.293 123.281 491.701 124.012 491.701 cv
f
137.416 475.632 mo
138.512 475.632 139.4 476.521 139.4 477.616 cv
139.4 478.712 138.512 479.601 137.416 479.601 cv
136.32 479.601 135.432 478.712 135.432 477.616 cv
135.432 476.521 136.32 475.632 137.416 475.632 cv
f
137.416 476.293 mo
138.146 476.293 138.739 476.885 138.739 477.616 cv
138.739 478.346 138.146 478.939 137.416 478.939 cv
136.686 478.939 136.093 478.346 136.093 477.616 cv
136.093 476.885 136.686 476.293 137.416 476.293 cv
f
119.774 479.121 mo
120.87 479.121 121.758 480.009 121.758 481.105 cv
121.758 482.201 120.87 483.089 119.774 483.089 cv
118.678 483.089 117.79 482.201 117.79 481.105 cv
117.79 480.009 118.678 479.121 119.774 479.121 cv
f
119.774 479.782 mo
120.504 479.782 121.097 480.374 121.097 481.105 cv
121.097 481.836 120.504 482.428 119.774 482.428 cv
119.044 482.428 118.451 481.836 118.451 481.105 cv
118.451 480.374 119.044 479.782 119.774 479.782 cv
f
137.892 483.902 mo
138.988 483.902 139.876 484.79 139.876 485.886 cv
139.876 486.982 138.988 487.87 137.892 487.87 cv
136.796 487.87 135.908 486.982 135.908 485.886 cv
135.908 484.79 136.796 483.902 137.892 483.902 cv
f
137.892 484.563 mo
138.623 484.563 139.215 485.155 139.215 485.886 cv
139.215 486.616 138.623 487.209 137.892 487.209 cv
137.162 487.209 136.569 486.616 136.569 485.886 cv
136.569 485.155 137.162 484.563 137.892 484.563 cv
f
219.464 499.306 mo
220.56 499.306 221.448 500.194 221.448 501.29 cv
221.448 502.386 220.56 503.274 219.464 503.274 cv
218.368 503.274 217.48 502.386 217.48 501.29 cv
217.48 500.194 218.368 499.306 219.464 499.306 cv
f
219.464 499.967 mo
220.194 499.967 220.787 500.559 220.787 501.29 cv
220.787 502.021 220.194 502.613 219.464 502.613 cv
218.734 502.613 218.141 502.021 218.141 501.29 cv
218.141 500.559 218.734 499.967 219.464 499.967 cv
f
128.91 476.205 mo
130.006 476.205 130.894 477.093 130.894 478.189 cv
130.894 479.285 130.006 480.173 128.91 480.173 cv
127.814 480.173 126.926 479.285 126.926 478.189 cv
126.926 477.093 127.814 476.205 128.91 476.205 cv
f
128.91 476.866 mo
129.64 476.866 130.233 477.458 130.233 478.189 cv
130.233 478.92 129.64 479.512 128.91 479.512 cv
128.18 479.512 127.587 478.92 127.587 478.189 cv
127.587 477.458 128.18 476.866 128.91 476.866 cv
f
167.742 492.354 mo
168.838 492.354 169.726 493.242 169.726 494.338 cv
169.726 495.434 168.838 496.322 167.742 496.322 cv
166.646 496.322 165.758 495.434 165.758 494.338 cv
165.758 493.242 166.646 492.354 167.742 492.354 cv
f
167.742 493.015 mo
168.472 493.015 169.065 493.607 169.065 494.338 cv
169.065 495.069 168.472 495.661 167.742 495.661 cv
167.011 495.661 166.419 495.069 166.419 494.338 cv
166.419 493.607 167.011 493.015 167.742 493.015 cv
f
157.374 493.482 mo
158.47 493.482 159.358 494.37 159.358 495.466 cv
159.358 496.562 158.47 497.45 157.374 497.45 cv
156.278 497.45 155.39 496.562 155.39 495.466 cv
155.39 494.37 156.278 493.482 157.374 493.482 cv
f
157.374 494.143 mo
158.105 494.143 158.697 494.735 158.697 495.466 cv
158.697 496.197 158.105 496.789 157.374 496.789 cv
156.644 496.789 156.051 496.197 156.051 495.466 cv
156.051 494.735 156.644 494.143 157.374 494.143 cv
f
144.015 498.904 mo
145.111 498.904 145.999 499.792 145.999 500.888 cv
145.999 501.984 145.111 502.872 144.015 502.872 cv
142.919 502.872 142.031 501.984 142.031 500.888 cv
142.031 499.792 142.919 498.904 144.015 498.904 cv
f
144.015 499.565 mo
144.745 499.565 145.338 500.157 145.338 500.888 cv
145.338 501.618 144.745 502.211 144.015 502.211 cv
143.284 502.211 142.692 501.618 142.692 500.888 cv
142.692 500.157 143.284 499.565 144.015 499.565 cv
f
217.932 500 mo
219.028 500 219.916 500.888 219.916 501.984 cv
219.916 503.08 219.028 503.968 217.932 503.968 cv
216.836 503.968 215.948 503.08 215.948 501.984 cv
215.948 500.888 216.836 500 217.932 500 cv
f
217.932 500.661 mo
218.662 500.661 219.255 501.253 219.255 501.984 cv
219.255 502.715 218.662 503.307 217.932 503.307 cv
217.201 503.307 216.609 502.715 216.609 501.984 cv
216.609 501.253 217.201 500.661 217.932 500.661 cv
f
193.317 489.703 mo
194.413 489.703 195.301 490.591 195.301 491.687 cv
195.301 492.783 194.413 493.671 193.317 493.671 cv
192.221 493.671 191.333 492.783 191.333 491.687 cv
191.333 490.591 192.221 489.703 193.317 489.703 cv
f
193.317 490.365 mo
194.047 490.365 194.64 490.957 194.64 491.688 cv
194.64 492.419 194.047 493.011 193.317 493.011 cv
192.587 493.011 191.994 492.419 191.994 491.688 cv
191.994 490.957 192.587 490.365 193.317 490.365 cv
f
171.613 496.179 mo
172.709 496.179 173.597 497.067 173.597 498.163 cv
173.597 499.259 172.709 500.147 171.613 500.147 cv
170.517 500.147 169.629 499.259 169.629 498.163 cv
169.629 497.067 170.517 496.179 171.613 496.179 cv
f
171.613 496.841 mo
172.343 496.841 172.936 497.433 172.936 498.164 cv
172.936 498.894 172.343 499.487 171.613 499.487 cv
170.883 499.487 170.29 498.894 170.29 498.164 cv
170.29 497.433 170.883 496.841 171.613 496.841 cv
f
401.1 504.927 mo
402.196 504.927 403.084 505.815 403.084 506.911 cv
403.084 508.007 402.196 508.895 401.1 508.895 cv
400.004 508.895 399.116 508.007 399.116 506.911 cv
399.116 505.815 400.004 504.927 401.1 504.927 cv
f
401.1 505.588 mo
401.83 505.588 402.423 506.18 402.423 506.911 cv
402.423 507.642 401.83 508.234 401.1 508.234 cv
400.37 508.234 399.777 507.642 399.777 506.911 cv
399.777 506.18 400.37 505.588 401.1 505.588 cv
f
331.941 489.7 mo
333.037 489.7 333.925 490.588 333.925 491.684 cv
333.925 492.78 333.037 493.669 331.941 493.669 cv
330.845 493.669 329.957 492.78 329.957 491.684 cv
329.957 490.588 330.845 489.7 331.941 489.7 cv
f
331.941 490.362 mo
332.671 490.362 333.264 490.954 333.264 491.685 cv
333.264 492.415 332.671 493.008 331.941 493.008 cv
331.211 493.008 330.618 492.415 330.618 491.685 cv
330.618 490.954 331.211 490.362 331.941 490.362 cv
f
304.849 507.535 mo
305.945 507.535 306.833 508.424 306.833 509.519 cv
306.833 510.615 305.945 511.504 304.849 511.504 cv
303.753 511.504 302.865 510.615 302.865 509.519 cv
302.865 508.424 303.753 507.535 304.849 507.535 cv
f
304.849 508.197 mo
305.579 508.197 306.172 508.789 306.172 509.52 cv
306.172 510.25 305.579 510.843 304.849 510.843 cv
304.119 510.843 303.526 510.25 303.526 509.52 cv
303.526 508.789 304.119 508.197 304.849 508.197 cv
f
425.084 492.146 mo
426.18 492.146 427.068 493.035 427.068 494.13 cv
427.068 495.226 426.18 496.115 425.084 496.115 cv
423.988 496.115 423.1 495.226 423.1 494.13 cv
423.1 493.035 423.988 492.146 425.084 492.146 cv
f
425.084 492.807 mo
425.814 492.807 426.407 493.399 426.407 494.13 cv
426.407 494.86 425.814 495.453 425.084 495.453 cv
424.353 495.453 423.761 494.86 423.761 494.13 cv
423.761 493.399 424.353 492.807 425.084 492.807 cv
f
161.282 489.403 mo
162.378 489.403 163.266 490.291 163.266 491.387 cv
163.266 492.483 162.378 493.371 161.282 493.371 cv
160.186 493.371 159.298 492.483 159.298 491.387 cv
159.298 490.291 160.186 489.403 161.282 489.403 cv
f
161.282 490.064 mo
162.012 490.064 162.605 490.656 162.605 491.387 cv
162.605 492.118 162.012 492.71 161.282 492.71 cv
160.551 492.71 159.959 492.118 159.959 491.387 cv
159.959 490.656 160.551 490.064 161.282 490.064 cv
f
179.136 498.114 mo
180.232 498.114 181.12 499.002 181.12 500.098 cv
181.12 501.194 180.232 502.082 179.136 502.082 cv
178.04 502.082 177.152 501.194 177.152 500.098 cv
177.152 499.002 178.04 498.114 179.136 498.114 cv
f
179.136 498.775 mo
179.866 498.775 180.459 499.367 180.459 500.098 cv
180.459 500.829 179.866 501.421 179.136 501.421 cv
178.406 501.421 177.813 500.829 177.813 500.098 cv
177.813 499.367 178.406 498.775 179.136 498.775 cv
f
134.571 489.562 mo
135.667 489.562 136.555 490.451 136.555 491.546 cv
136.555 492.642 135.667 493.531 134.571 493.531 cv
133.475 493.531 132.587 492.642 132.587 491.546 cv
132.587 490.451 133.475 489.562 134.571 489.562 cv
f
134.571 490.224 mo
135.301 490.224 135.894 490.816 135.894 491.547 cv
135.894 492.277 135.301 492.87 134.571 492.87 cv
133.841 492.87 133.248 492.277 133.248 491.547 cv
133.248 490.816 133.841 490.224 134.571 490.224 cv
f
200.862 490.397 mo
201.958 490.397 202.846 491.285 202.846 492.381 cv
202.846 493.477 201.958 494.365 200.862 494.365 cv
199.766 494.365 198.878 493.477 198.878 492.381 cv
198.878 491.285 199.766 490.397 200.862 490.397 cv
f
200.862 491.058 mo
201.592 491.058 202.185 491.65 202.185 492.381 cv
202.185 493.112 201.592 493.704 200.862 493.704 cv
200.132 493.704 199.539 493.112 199.539 492.381 cv
199.539 491.65 200.132 491.058 200.862 491.058 cv
f
149.961 507.987 mo
151.057 507.987 151.945 508.876 151.945 509.971 cv
151.945 511.067 151.057 511.956 149.961 511.956 cv
148.865 511.956 147.977 511.067 147.977 509.971 cv
147.977 508.876 148.865 507.987 149.961 507.987 cv
f
149.961 508.648 mo
150.691 508.648 151.284 509.24 151.284 509.971 cv
151.284 510.701 150.691 511.294 149.961 511.294 cv
149.23 511.294 148.638 510.701 148.638 509.971 cv
148.638 509.24 149.23 508.648 149.961 508.648 cv
f
174.436 487.852 mo
175.532 487.852 176.42 488.741 176.42 489.836 cv
176.42 490.932 175.532 491.821 174.436 491.821 cv
173.34 491.821 172.452 490.932 172.452 489.836 cv
172.452 488.741 173.34 487.852 174.436 487.852 cv
f
174.436 488.513 mo
175.167 488.513 175.759 489.105 175.759 489.836 cv
175.759 490.566 175.167 491.159 174.436 491.159 cv
173.706 491.159 173.113 490.566 173.113 489.836 cv
173.113 489.105 173.706 488.513 174.436 488.513 cv
f
147.468 477.45 mo
148.564 477.45 149.452 478.339 149.452 479.434 cv
149.452 480.53 148.564 481.419 147.468 481.419 cv
146.372 481.419 145.484 480.53 145.484 479.434 cv
145.484 478.339 146.372 477.45 147.468 477.45 cv
f
147.468 478.112 mo
148.198 478.112 148.791 478.704 148.791 479.435 cv
148.791 480.165 148.198 480.758 147.468 480.758 cv
146.738 480.758 146.145 480.165 146.145 479.435 cv
146.145 478.704 146.738 478.112 147.468 478.112 cv
f
140.465 482.871 mo
141.561 482.871 142.449 483.76 142.449 484.855 cv
142.449 485.952 141.561 486.84 140.465 486.84 cv
139.369 486.84 138.481 485.952 138.481 484.855 cv
138.481 483.76 139.369 482.871 140.465 482.871 cv
f
140.465 483.533 mo
141.195 483.533 141.788 484.125 141.788 484.856 cv
141.788 485.586 141.195 486.179 140.465 486.179 cv
139.735 486.179 139.142 485.586 139.142 484.856 cv
139.142 484.125 139.735 483.533 140.465 483.533 cv
f
173.63 485.747 mo
174.726 485.747 175.614 486.635 175.614 487.731 cv
175.614 488.827 174.726 489.715 173.63 489.715 cv
172.534 489.715 171.646 488.827 171.646 487.731 cv
171.646 486.635 172.534 485.747 173.63 485.747 cv
f
173.63 486.408 mo
174.36 486.408 174.953 487 174.953 487.731 cv
174.953 488.462 174.36 489.054 173.63 489.054 cv
172.9 489.054 172.307 488.462 172.307 487.731 cv
172.307 487 172.9 486.408 173.63 486.408 cv
f
114.553 497.663 mo
115.649 497.663 116.537 498.551 116.537 499.647 cv
116.537 500.743 115.649 501.631 114.553 501.631 cv
113.457 501.631 112.569 500.743 112.569 499.647 cv
112.569 498.551 113.457 497.663 114.553 497.663 cv
f
114.553 498.324 mo
115.283 498.324 115.876 498.916 115.876 499.647 cv
115.876 500.378 115.283 500.97 114.553 500.97 cv
113.823 500.97 113.23 500.378 113.23 499.647 cv
113.23 498.916 113.823 498.324 114.553 498.324 cv
f
131.616 471.097 mo
132.712 471.097 133.6 471.986 133.6 473.081 cv
133.6 474.177 132.712 475.066 131.616 475.066 cv
130.52 475.066 129.632 474.177 129.632 473.081 cv
129.632 471.986 130.52 471.097 131.616 471.097 cv
f
131.616 471.759 mo
132.346 471.759 132.939 472.351 132.939 473.082 cv
132.939 473.812 132.346 474.405 131.616 474.405 cv
130.886 474.405 130.293 473.812 130.293 473.082 cv
130.293 472.351 130.886 471.759 131.616 471.759 cv
f
139.85 473.425 mo
140.946 473.425 141.834 474.313 141.834 475.409 cv
141.834 476.505 140.946 477.393 139.85 477.393 cv
138.754 477.393 137.866 476.505 137.866 475.409 cv
137.866 474.313 138.754 473.425 139.85 473.425 cv
f
139.85 474.086 mo
140.58 474.086 141.173 474.678 141.173 475.409 cv
141.173 476.139 140.58 476.732 139.85 476.732 cv
139.12 476.732 138.527 476.139 138.527 475.409 cv
138.527 474.678 139.12 474.086 139.85 474.086 cv
f
139.667 473.96 mo
140.763 473.96 141.651 474.848 141.651 475.944 cv
141.651 477.04 140.763 477.928 139.667 477.928 cv
138.571 477.928 137.683 477.04 137.683 475.944 cv
137.683 474.848 138.571 473.96 139.667 473.96 cv
f
139.667 474.621 mo
140.397 474.621 140.99 475.213 140.99 475.944 cv
140.99 476.675 140.397 477.267 139.667 477.267 cv
138.936 477.267 138.344 476.675 138.344 475.944 cv
138.344 475.213 138.936 474.621 139.667 474.621 cv
f
135.172 486.657 mo
136.268 486.657 137.156 487.545 137.156 488.641 cv
137.156 489.737 136.268 490.626 135.172 490.626 cv
134.076 490.626 133.188 489.737 133.188 488.641 cv
133.188 487.545 134.076 486.657 135.172 486.657 cv
f
135.172 487.319 mo
135.903 487.319 136.495 487.911 136.495 488.642 cv
136.495 489.372 135.903 489.965 135.172 489.965 cv
134.442 489.965 133.849 489.372 133.849 488.642 cv
133.849 487.911 134.442 487.319 135.172 487.319 cv
f
184.76 490.233 mo
185.856 490.233 186.744 491.121 186.744 492.217 cv
186.744 493.313 185.856 494.201 184.76 494.201 cv
183.664 494.201 182.776 493.313 182.776 492.217 cv
182.776 491.121 183.664 490.233 184.76 490.233 cv
f
184.76 490.894 mo
185.49 490.894 186.083 491.486 186.083 492.217 cv
186.083 492.948 185.49 493.54 184.76 493.54 cv
184.03 493.54 183.437 492.948 183.437 492.217 cv
183.437 491.486 184.03 490.894 184.76 490.894 cv
f
164.523 495.904 mo
165.619 495.904 166.507 496.792 166.507 497.888 cv
166.507 498.984 165.619 499.872 164.523 499.872 cv
163.427 499.872 162.539 498.984 162.539 497.888 cv
162.539 496.792 163.427 495.904 164.523 495.904 cv
f
164.523 496.565 mo
165.253 496.565 165.846 497.157 165.846 497.888 cv
165.846 498.619 165.253 499.211 164.523 499.211 cv
163.793 499.211 163.2 498.619 163.2 497.888 cv
163.2 497.157 163.793 496.565 164.523 496.565 cv
f
168.769 488.872 mo
169.865 488.872 170.753 489.761 170.753 490.856 cv
170.753 491.952 169.865 492.841 168.769 492.841 cv
167.673 492.841 166.785 491.952 166.785 490.856 cv
166.785 489.761 167.673 488.872 168.769 488.872 cv
f
168.769 489.533 mo
169.499 489.533 170.092 490.125 170.092 490.856 cv
170.092 491.586 169.499 492.179 168.769 492.179 cv
168.039 492.179 167.446 491.586 167.446 490.856 cv
167.446 490.125 168.039 489.533 168.769 489.533 cv
f
118.667 502.05 mo
119.763 502.05 120.651 502.938 120.651 504.034 cv
120.651 505.13 119.763 506.018 118.667 506.018 cv
117.571 506.018 116.683 505.13 116.683 504.034 cv
116.683 502.938 117.571 502.05 118.667 502.05 cv
f
118.667 502.711 mo
119.398 502.711 119.99 503.303 119.99 504.034 cv
119.99 504.765 119.398 505.357 118.667 505.357 cv
117.937 505.357 117.344 504.765 117.344 504.034 cv
117.344 503.303 117.937 502.711 118.667 502.711 cv
f
186.476 495.936 mo
187.572 495.936 188.46 496.825 188.46 497.92 cv
188.46 499.016 187.572 499.905 186.476 499.905 cv
185.38 499.905 184.492 499.016 184.492 497.92 cv
184.492 496.825 185.38 495.936 186.476 495.936 cv
f
186.476 496.598 mo
187.206 496.598 187.799 497.19 187.799 497.921 cv
187.799 498.651 187.206 499.244 186.476 499.244 cv
185.745 499.244 185.153 498.651 185.153 497.921 cv
185.153 497.19 185.745 496.598 186.476 496.598 cv
f
135.971 508.974 mo
137.067 508.974 137.955 509.862 137.955 510.958 cv
137.955 512.054 137.067 512.942 135.971 512.942 cv
134.875 512.942 133.987 512.054 133.987 510.958 cv
133.987 509.862 134.875 508.974 135.971 508.974 cv
f
135.971 509.636 mo
136.701 509.636 137.294 510.228 137.294 510.959 cv
137.294 511.69 136.701 512.281 135.971 512.281 cv
135.24 512.281 134.648 511.69 134.648 510.959 cv
134.648 510.228 135.24 509.636 135.971 509.636 cv
f
143.685 489.385 mo
144.781 489.385 145.669 490.273 145.669 491.369 cv
145.669 492.465 144.781 493.353 143.685 493.353 cv
142.589 493.353 141.701 492.465 141.701 491.369 cv
141.701 490.273 142.589 489.385 143.685 489.385 cv
f
143.685 490.046 mo
144.415 490.046 145.008 490.638 145.008 491.369 cv
145.008 492.099 144.415 492.692 143.685 492.692 cv
142.954 492.692 142.362 492.099 142.362 491.369 cv
142.362 490.638 142.954 490.046 143.685 490.046 cv
f
135.274 465.659 mo
136.37 465.659 137.258 466.548 137.258 467.643 cv
137.258 468.739 136.37 469.628 135.274 469.628 cv
134.178 469.628 133.29 468.739 133.29 467.643 cv
133.29 466.548 134.178 465.659 135.274 465.659 cv
f
135.274 466.321 mo
136.004 466.321 136.597 466.913 136.597 467.644 cv
136.597 468.374 136.004 468.967 135.274 468.967 cv
134.544 468.967 133.951 468.374 133.951 467.644 cv
133.951 466.913 134.544 466.321 135.274 466.321 cv
f
151.787 493.451 mo
152.883 493.451 153.771 494.34 153.771 495.435 cv
153.771 496.531 152.883 497.42 151.787 497.42 cv
150.691 497.42 149.803 496.531 149.803 495.435 cv
149.803 494.34 150.691 493.451 151.787 493.451 cv
f
151.787 494.113 mo
152.517 494.113 153.11 494.705 153.11 495.436 cv
153.11 496.166 152.517 496.759 151.787 496.759 cv
151.057 496.759 150.464 496.166 150.464 495.436 cv
150.464 494.705 151.057 494.113 151.787 494.113 cv
f
137.746 469.487 mo
138.842 469.487 139.73 470.375 139.73 471.471 cv
139.73 472.567 138.842 473.455 137.746 473.455 cv
136.65 473.455 135.762 472.567 135.762 471.471 cv
135.762 470.375 136.65 469.487 137.746 469.487 cv
f
137.746 470.148 mo
138.476 470.148 139.069 470.74 139.069 471.471 cv
139.069 472.202 138.476 472.794 137.746 472.794 cv
137.016 472.794 136.423 472.202 136.423 471.471 cv
136.423 470.74 137.016 470.148 137.746 470.148 cv
f
345.352 494.173 mo
346.448 494.173 347.336 495.061 347.336 496.157 cv
347.336 497.253 346.448 498.141 345.352 498.141 cv
344.256 498.141 343.368 497.253 343.368 496.157 cv
343.368 495.061 344.256 494.173 345.352 494.173 cv
f
345.352 494.834 mo
346.083 494.834 346.675 495.426 346.675 496.157 cv
346.675 496.888 346.083 497.48 345.352 497.48 cv
344.622 497.48 344.029 496.888 344.029 496.157 cv
344.029 495.426 344.622 494.834 345.352 494.834 cv
f
138.823 472.238 mo
139.919 472.238 140.807 473.126 140.807 474.222 cv
140.807 475.318 139.919 476.206 138.823 476.206 cv
137.727 476.206 136.839 475.318 136.839 474.222 cv
136.839 473.126 137.727 472.238 138.823 472.238 cv
f
138.823 472.899 mo
139.553 472.899 140.146 473.491 140.146 474.222 cv
140.146 474.953 139.553 475.545 138.823 475.545 cv
138.092 475.545 137.5 474.953 137.5 474.222 cv
137.5 473.491 138.092 472.899 138.823 472.899 cv
f
147.387 488.269 mo
148.483 488.269 149.371 489.157 149.371 490.253 cv
149.371 491.349 148.483 492.237 147.387 492.237 cv
146.291 492.237 145.403 491.349 145.403 490.253 cv
145.403 489.157 146.291 488.269 147.387 488.269 cv
f
147.387 488.93 mo
148.117 488.93 148.71 489.522 148.71 490.253 cv
148.71 490.984 148.117 491.576 147.387 491.576 cv
146.656 491.576 146.064 490.984 146.064 490.253 cv
146.064 489.522 146.656 488.93 147.387 488.93 cv
f
129.871 476.222 mo
130.967 476.222 131.855 477.11 131.855 478.206 cv
131.855 479.302 130.967 480.19 129.871 480.19 cv
128.775 480.19 127.887 479.302 127.887 478.206 cv
127.887 477.11 128.775 476.222 129.871 476.222 cv
f
129.871 476.883 mo
130.602 476.883 131.194 477.475 131.194 478.206 cv
131.194 478.936 130.602 479.529 129.871 479.529 cv
129.141 479.529 128.548 478.936 128.548 478.206 cv
128.548 477.475 129.141 476.883 129.871 476.883 cv
f
153.583 477.191 mo
154.679 477.191 155.567 478.08 155.567 479.175 cv
155.567 480.271 154.679 481.16 153.583 481.16 cv
152.487 481.16 151.599 480.271 151.599 479.175 cv
151.599 478.08 152.487 477.191 153.583 477.191 cv
f
153.583 477.853 mo
154.314 477.853 154.906 478.445 154.906 479.176 cv
154.906 479.906 154.314 480.499 153.583 480.499 cv
152.853 480.499 152.26 479.906 152.26 479.176 cv
152.26 478.445 152.853 477.853 153.583 477.853 cv
f
132.569 478.741 mo
133.665 478.741 134.553 479.63 134.553 480.725 cv
134.553 481.821 133.665 482.71 132.569 482.71 cv
131.473 482.71 130.585 481.821 130.585 480.725 cv
130.585 479.63 131.473 478.741 132.569 478.741 cv
f
132.569 479.403 mo
133.299 479.403 133.892 479.995 133.892 480.726 cv
133.892 481.456 133.299 482.049 132.569 482.049 cv
131.838 482.049 131.246 481.456 131.246 480.726 cv
131.246 479.995 131.838 479.403 132.569 479.403 cv
0 0 0 0 cmyk
f
195.113 488.429 mo
196.209 488.429 197.097 489.317 197.097 490.413 cv
197.097 491.509 196.209 492.397 195.113 492.397 cv
194.017 492.397 193.129 491.509 193.129 490.413 cv
193.129 489.317 194.017 488.429 195.113 488.429 cv
.895659 .848112 .507591 .675471 cmyk
f
195.113 489.09 mo
195.843 489.09 196.436 489.682 196.436 490.413 cv
196.436 491.144 195.843 491.736 195.113 491.736 cv
194.383 491.736 193.79 491.144 193.79 490.413 cv
193.79 489.682 194.383 489.09 195.113 489.09 cv
0 0 0 0 cmyk
f
132.987 533.438 mo
134.083 533.438 134.971 534.326 134.971 535.422 cv
134.971 536.518 134.083 537.406 132.987 537.406 cv
131.891 537.406 131.003 536.518 131.003 535.422 cv
131.003 534.326 131.891 533.438 132.987 533.438 cv
.895659 .848112 .507591 .675471 cmyk
f
132.987 534.099 mo
133.717 534.099 134.31 534.691 134.31 535.422 cv
134.31 536.153 133.717 536.745 132.987 536.745 cv
132.257 536.745 131.664 536.153 131.664 535.422 cv
131.664 534.691 132.257 534.099 132.987 534.099 cv
0 0 0 0 cmyk
f
140.788 485.077 mo
141.884 485.077 142.772 485.965 142.772 487.061 cv
142.772 488.157 141.884 489.045 140.788 489.045 cv
139.692 489.045 138.804 488.157 138.804 487.061 cv
138.804 485.965 139.692 485.077 140.788 485.077 cv
.895659 .848112 .507591 .675471 cmyk
f
140.788 485.739 mo
141.518 485.739 142.111 486.331 142.111 487.062 cv
142.111 487.792 141.518 488.385 140.788 488.385 cv
140.058 488.385 139.465 487.792 139.465 487.062 cv
139.465 486.331 140.058 485.739 140.788 485.739 cv
0 0 0 0 cmyk
f
157.264 500.239 mo
158.36 500.239 159.248 501.127 159.248 502.223 cv
159.248 503.319 158.36 504.207 157.264 504.207 cv
156.168 504.207 155.28 503.319 155.28 502.223 cv
155.28 501.127 156.168 500.239 157.264 500.239 cv
.895659 .848112 .507591 .675471 cmyk
f
157.264 500.9 mo
157.995 500.9 158.587 501.492 158.587 502.223 cv
158.587 502.954 157.995 503.546 157.264 503.546 cv
156.534 503.546 155.941 502.954 155.941 502.223 cv
155.941 501.492 156.534 500.9 157.264 500.9 cv
0 0 0 0 cmyk
f
147.19 484.178 mo
148.286 484.178 149.174 485.066 149.174 486.162 cv
149.174 487.258 148.286 488.147 147.19 488.147 cv
146.094 488.147 145.206 487.258 145.206 486.162 cv
145.206 485.066 146.094 484.178 147.19 484.178 cv
.895659 .848112 .507591 .675471 cmyk
f
147.19 484.84 mo
147.92 484.84 148.513 485.432 148.513 486.163 cv
148.513 486.893 147.92 487.486 147.19 487.486 cv
146.459 487.486 145.867 486.893 145.867 486.163 cv
145.867 485.432 146.459 484.84 147.19 484.84 cv
0 0 0 0 cmyk
f
130.223 516.091 mo
131.319 516.091 132.207 516.979 132.207 518.075 cv
132.207 519.171 131.319 520.059 130.223 520.059 cv
129.127 520.059 128.239 519.171 128.239 518.075 cv
128.239 516.979 129.127 516.091 130.223 516.091 cv
.895659 .848112 .507591 .675471 cmyk
f
130.223 516.752 mo
130.953 516.752 131.546 517.344 131.546 518.075 cv
131.546 518.806 130.953 519.398 130.223 519.398 cv
129.493 519.398 128.9 518.806 128.9 518.075 cv
128.9 517.344 129.493 516.752 130.223 516.752 cv
0 0 0 0 cmyk
f
126.923 486.778 mo
128.019 486.778 128.907 487.666 128.907 488.762 cv
128.907 489.858 128.019 490.746 126.923 490.746 cv
125.827 490.746 124.939 489.858 124.939 488.762 cv
124.939 487.666 125.827 486.778 126.923 486.778 cv
.895659 .848112 .507591 .675471 cmyk
f
126.923 487.439 mo
127.653 487.439 128.246 488.031 128.246 488.762 cv
128.246 489.493 127.653 490.085 126.923 490.085 cv
126.193 490.085 125.6 489.493 125.6 488.762 cv
125.6 488.031 126.193 487.439 126.923 487.439 cv
0 0 0 0 cmyk
f
143.53 494.63 mo
144.626 494.63 145.514 495.518 145.514 496.614 cv
145.514 497.71 144.626 498.599 143.53 498.599 cv
142.434 498.599 141.546 497.71 141.546 496.614 cv
141.546 495.518 142.434 494.63 143.53 494.63 cv
.895659 .848112 .507591 .675471 cmyk
f
143.53 495.292 mo
144.26 495.292 144.853 495.884 144.853 496.615 cv
144.853 497.345 144.26 497.938 143.53 497.938 cv
142.8 497.938 142.207 497.345 142.207 496.615 cv
142.207 495.884 142.8 495.292 143.53 495.292 cv
0 0 0 0 cmyk
f
142.497 490.744 mo
143.593 490.744 144.481 491.632 144.481 492.728 cv
144.481 493.824 143.593 494.712 142.497 494.712 cv
141.401 494.712 140.513 493.824 140.513 492.728 cv
140.513 491.632 141.401 490.744 142.497 490.744 cv
.895659 .848112 .507591 .675471 cmyk
f
142.497 491.405 mo
143.227 491.405 143.82 491.997 143.82 492.728 cv
143.82 493.459 143.227 494.051 142.497 494.051 cv
141.767 494.051 141.174 493.459 141.174 492.728 cv
141.174 491.997 141.767 491.405 142.497 491.405 cv
0 0 0 0 cmyk
f
132.972 451.857 mo
134.068 451.857 134.956 452.745 134.956 453.841 cv
134.956 454.937 134.068 455.825 132.972 455.825 cv
131.876 455.825 130.988 454.937 130.988 453.841 cv
130.988 452.745 131.876 451.857 132.972 451.857 cv
.895659 .848112 .507591 .675471 cmyk
f
132.972 452.519 mo
133.702 452.519 134.295 453.111 134.295 453.842 cv
134.295 454.572 133.702 455.165 132.972 455.165 cv
132.242 455.165 131.649 454.572 131.649 453.842 cv
131.649 453.111 132.242 452.519 132.972 452.519 cv
0 0 0 0 cmyk
f
134.146 509.761 mo
135.242 509.761 136.13 510.65 136.13 511.745 cv
136.13 512.841 135.242 513.729 134.146 513.729 cv
133.05 513.729 132.162 512.841 132.162 511.745 cv
132.162 510.65 133.05 509.761 134.146 509.761 cv
.895659 .848112 .507591 .675471 cmyk
f
134.146 510.422 mo
134.876 510.422 135.469 511.014 135.469 511.745 cv
135.469 512.475 134.876 513.068 134.146 513.068 cv
133.416 513.068 132.823 512.475 132.823 511.745 cv
132.823 511.014 133.416 510.422 134.146 510.422 cv
0 0 0 0 cmyk
f
139.535 501.369 mo
140.631 501.369 141.519 502.257 141.519 503.353 cv
141.519 504.449 140.631 505.337 139.535 505.337 cv
138.439 505.337 137.551 504.449 137.551 503.353 cv
137.551 502.257 138.439 501.369 139.535 501.369 cv
.895659 .848112 .507591 .675471 cmyk
f
139.535 502.03 mo
140.265 502.03 140.858 502.622 140.858 503.353 cv
140.858 504.084 140.265 504.676 139.535 504.676 cv
138.805 504.676 138.212 504.084 138.212 503.353 cv
138.212 502.622 138.805 502.03 139.535 502.03 cv
0 0 0 0 cmyk
f
131.828 498.683 mo
132.924 498.683 133.812 499.571 133.812 500.667 cv
133.812 501.763 132.924 502.651 131.828 502.651 cv
130.732 502.651 129.844 501.763 129.844 500.667 cv
129.844 499.571 130.732 498.683 131.828 498.683 cv
.895659 .848112 .507591 .675471 cmyk
f
131.828 499.345 mo
132.558 499.345 133.151 499.937 133.151 500.668 cv
133.151 501.398 132.558 501.991 131.828 501.991 cv
131.097 501.991 130.505 501.398 130.505 500.668 cv
130.505 499.937 131.097 499.345 131.828 499.345 cv
0 0 0 0 cmyk
f
144.183 491.765 mo
145.279 491.765 146.167 492.653 146.167 493.749 cv
146.167 494.845 145.279 495.734 144.183 495.734 cv
143.087 495.734 142.199 494.845 142.199 493.749 cv
142.199 492.653 143.087 491.765 144.183 491.765 cv
.895659 .848112 .507591 .675471 cmyk
f
144.183 492.427 mo
144.913 492.427 145.506 493.019 145.506 493.75 cv
145.506 494.48 144.913 495.073 144.183 495.073 cv
143.453 495.073 142.86 494.48 142.86 493.75 cv
142.86 493.019 143.453 492.427 144.183 492.427 cv
0 0 0 0 cmyk
f
133.331 477.881 mo
134.427 477.881 135.315 478.77 135.315 479.865 cv
135.315 480.961 134.427 481.85 133.331 481.85 cv
132.235 481.85 131.347 480.961 131.347 479.865 cv
131.347 478.77 132.235 477.881 133.331 477.881 cv
.895659 .848112 .507591 .675471 cmyk
f
133.331 478.543 mo
134.062 478.543 134.654 479.135 134.654 479.866 cv
134.654 480.596 134.062 481.189 133.331 481.189 cv
132.601 481.189 132.008 480.596 132.008 479.866 cv
132.008 479.135 132.601 478.543 133.331 478.543 cv
0 0 0 0 cmyk
f
136.375 491.968 mo
137.471 491.968 138.359 492.856 138.359 493.952 cv
138.359 495.048 137.471 495.936 136.375 495.936 cv
135.279 495.936 134.391 495.048 134.391 493.952 cv
134.391 492.856 135.279 491.968 136.375 491.968 cv
.895659 .848112 .507591 .675471 cmyk
f
136.375 492.63 mo
137.105 492.63 137.698 493.222 137.698 493.953 cv
137.698 494.683 137.105 495.276 136.375 495.276 cv
135.645 495.276 135.052 494.683 135.052 493.953 cv
135.052 493.222 135.645 492.63 136.375 492.63 cv
0 0 0 0 cmyk
f
143.457 499.388 mo
144.553 499.388 145.441 500.276 145.441 501.372 cv
145.441 502.468 144.553 503.356 143.457 503.356 cv
142.361 503.356 141.473 502.468 141.473 501.372 cv
141.473 500.276 142.361 499.388 143.457 499.388 cv
.895659 .848112 .507591 .675471 cmyk
f
143.457 500.05 mo
144.187 500.05 144.78 500.642 144.78 501.373 cv
144.78 502.104 144.187 502.696 143.457 502.696 cv
142.726 502.696 142.134 502.104 142.134 501.373 cv
142.134 500.642 142.726 500.05 143.457 500.05 cv
0 0 0 0 cmyk
f
135.472 503.333 mo
136.568 503.333 137.456 504.221 137.456 505.317 cv
137.456 506.413 136.568 507.301 135.472 507.301 cv
134.376 507.301 133.488 506.413 133.488 505.317 cv
133.488 504.221 134.376 503.333 135.472 503.333 cv
.895659 .848112 .507591 .675471 cmyk
f
135.472 503.994 mo
136.202 503.994 136.795 504.586 136.795 505.317 cv
136.795 506.048 136.202 506.64 135.472 506.64 cv
134.742 506.64 134.149 506.048 134.149 505.317 cv
134.149 504.586 134.742 503.994 135.472 503.994 cv
0 0 0 0 cmyk
f
131.278 489.161 mo
132.374 489.161 133.262 490.05 133.262 491.145 cv
133.262 492.242 132.374 493.13 131.278 493.13 cv
130.182 493.13 129.294 492.242 129.294 491.145 cv
129.294 490.05 130.182 489.161 131.278 489.161 cv
.895659 .848112 .507591 .675471 cmyk
f
131.278 489.823 mo
132.008 489.823 132.601 490.415 132.601 491.146 cv
132.601 491.876 132.008 492.469 131.278 492.469 cv
130.548 492.469 129.955 491.876 129.955 491.146 cv
129.955 490.415 130.548 489.823 131.278 489.823 cv
0 0 0 0 cmyk
f
151.215 484.206 mo
152.311 484.206 153.199 485.094 153.199 486.19 cv
153.199 487.286 152.311 488.174 151.215 488.174 cv
150.119 488.174 149.231 487.286 149.231 486.19 cv
149.231 485.094 150.119 484.206 151.215 484.206 cv
.895659 .848112 .507591 .675471 cmyk
f
151.215 484.867 mo
151.945 484.867 152.538 485.459 152.538 486.19 cv
152.538 486.921 151.945 487.513 151.215 487.513 cv
150.484 487.513 149.892 486.921 149.892 486.19 cv
149.892 485.459 150.484 484.867 151.215 484.867 cv
0 0 0 0 cmyk
f
148.436 511.84 mo
149.532 511.84 150.42 512.729 150.42 513.824 cv
150.42 514.92 149.532 515.809 148.436 515.809 cv
147.34 515.809 146.452 514.92 146.452 513.824 cv
146.452 512.729 147.34 511.84 148.436 511.84 cv
.895659 .848112 .507591 .675471 cmyk
f
148.436 512.502 mo
149.166 512.502 149.759 513.094 149.759 513.825 cv
149.759 514.555 149.166 515.148 148.436 515.148 cv
147.706 515.148 147.113 514.555 147.113 513.825 cv
147.113 513.094 147.706 512.502 148.436 512.502 cv
0 0 0 0 cmyk
f
114.553 489.091 mo
115.649 489.091 116.537 489.979 116.537 491.075 cv
116.537 492.171 115.649 493.059 114.553 493.059 cv
113.457 493.059 112.569 492.171 112.569 491.075 cv
112.569 489.979 113.457 489.091 114.553 489.091 cv
.895659 .848112 .507591 .675471 cmyk
f
114.553 489.752 mo
115.283 489.752 115.876 490.344 115.876 491.075 cv
115.876 491.805 115.283 492.398 114.553 492.398 cv
113.823 492.398 113.23 491.805 113.23 491.075 cv
113.23 490.344 113.823 489.752 114.553 489.752 cv
0 0 0 0 cmyk
f
151.501 476.685 mo
152.597 476.685 153.485 477.573 153.485 478.669 cv
153.485 479.765 152.597 480.653 151.501 480.653 cv
150.405 480.653 149.517 479.765 149.517 478.669 cv
149.517 477.573 150.405 476.685 151.501 476.685 cv
.895659 .848112 .507591 .675471 cmyk
f
151.501 477.346 mo
152.231 477.346 152.824 477.938 152.824 478.669 cv
152.824 479.4 152.231 479.992 151.501 479.992 cv
150.771 479.992 150.178 479.4 150.178 478.669 cv
150.178 477.938 150.771 477.346 151.501 477.346 cv
0 0 0 0 cmyk
f
145.085 494.528 mo
146.181 494.528 147.069 495.417 147.069 496.512 cv
147.069 497.608 146.181 498.497 145.085 498.497 cv
143.989 498.497 143.101 497.608 143.101 496.512 cv
143.101 495.417 143.989 494.528 145.085 494.528 cv
.895659 .848112 .507591 .675471 cmyk
f
145.085 495.189 mo
145.815 495.189 146.408 495.781 146.408 496.512 cv
146.408 497.242 145.815 497.835 145.085 497.835 cv
144.354 497.835 143.762 497.242 143.762 496.512 cv
143.762 495.781 144.354 495.189 145.085 495.189 cv
0 0 0 0 cmyk
f
186.227 498.167 mo
187.323 498.167 188.211 499.055 188.211 500.151 cv
188.211 501.247 187.323 502.135 186.227 502.135 cv
185.131 502.135 184.243 501.247 184.243 500.151 cv
184.243 499.055 185.131 498.167 186.227 498.167 cv
.895659 .848112 .507591 .675471 cmyk
f
186.227 498.828 mo
186.957 498.828 187.55 499.42 187.55 500.151 cv
187.55 500.881 186.957 501.474 186.227 501.474 cv
185.497 501.474 184.904 500.881 184.904 500.151 cv
184.904 499.42 185.497 498.828 186.227 498.828 cv
0 0 0 0 cmyk
f
123.22 470.733 mo
124.316 470.733 125.204 471.621 125.204 472.717 cv
125.204 473.813 124.316 474.701 123.22 474.701 cv
122.124 474.701 121.236 473.813 121.236 472.717 cv
121.236 471.621 122.124 470.733 123.22 470.733 cv
.895659 .848112 .507591 .675471 cmyk
f
123.22 471.394 mo
123.95 471.394 124.543 471.986 124.543 472.717 cv
124.543 473.448 123.95 474.04 123.22 474.04 cv
122.49 474.04 121.897 473.448 121.897 472.717 cv
121.897 471.986 122.49 471.394 123.22 471.394 cv
0 0 0 0 cmyk
f
182.627 487.608 mo
183.723 487.608 184.611 488.496 184.611 489.592 cv
184.611 490.688 183.723 491.576 182.627 491.576 cv
181.531 491.576 180.643 490.688 180.643 489.592 cv
180.643 488.496 181.531 487.608 182.627 487.608 cv
.895659 .848112 .507591 .675471 cmyk
f
182.627 488.269 mo
183.357 488.269 183.95 488.861 183.95 489.592 cv
183.95 490.323 183.357 490.915 182.627 490.915 cv
181.897 490.915 181.304 490.323 181.304 489.592 cv
181.304 488.861 181.897 488.269 182.627 488.269 cv
0 0 0 0 cmyk
f
357.37 492.177 mo
358.466 492.177 359.354 493.065 359.354 494.161 cv
359.354 495.257 358.466 496.145 357.37 496.145 cv
356.274 496.145 355.386 495.257 355.386 494.161 cv
355.386 493.065 356.274 492.177 357.37 492.177 cv
.895659 .848112 .507591 .675471 cmyk
f
357.37 492.838 mo
358.1 492.838 358.693 493.43 358.693 494.161 cv
358.693 494.892 358.1 495.484 357.37 495.484 cv
356.64 495.484 356.047 494.892 356.047 494.161 cv
356.047 493.43 356.64 492.838 357.37 492.838 cv
0 0 0 0 cmyk
f
140.209 443.506 mo
141.305 443.506 142.193 444.395 142.193 445.49 cv
142.193 446.586 141.305 447.475 140.209 447.475 cv
139.113 447.475 138.225 446.586 138.225 445.49 cv
138.225 444.395 139.113 443.506 140.209 443.506 cv
.895659 .848112 .507591 .675471 cmyk
f
140.209 444.168 mo
140.94 444.168 141.532 444.76 141.532 445.491 cv
141.532 446.221 140.94 446.814 140.209 446.814 cv
139.479 446.814 138.886 446.221 138.886 445.491 cv
138.886 444.76 139.479 444.168 140.209 444.168 cv
0 0 0 0 cmyk
f
174.627 496.428 mo
175.723 496.428 176.611 497.316 176.611 498.412 cv
176.611 499.508 175.723 500.396 174.627 500.396 cv
173.531 500.396 172.643 499.508 172.643 498.412 cv
172.643 497.316 173.531 496.428 174.627 496.428 cv
.895659 .848112 .507591 .675471 cmyk
f
174.627 497.089 mo
175.358 497.089 175.95 497.681 175.95 498.412 cv
175.95 499.143 175.358 499.735 174.627 499.735 cv
173.897 499.735 173.304 499.143 173.304 498.412 cv
173.304 497.681 173.897 497.089 174.627 497.089 cv
0 0 0 0 cmyk
f
183.594 502.651 mo
184.69 502.651 185.578 503.539 185.578 504.635 cv
185.578 505.731 184.69 506.62 183.594 506.62 cv
182.498 506.62 181.61 505.731 181.61 504.635 cv
181.61 503.539 182.498 502.651 183.594 502.651 cv
.895659 .848112 .507591 .675471 cmyk
f
183.594 503.313 mo
184.324 503.313 184.917 503.905 184.917 504.636 cv
184.917 505.366 184.324 505.959 183.594 505.959 cv
182.864 505.959 182.271 505.366 182.271 504.636 cv
182.271 503.905 182.864 503.313 183.594 503.313 cv
0 0 0 0 cmyk
f
124.518 487.418 mo
125.614 487.418 126.502 488.306 126.502 489.402 cv
126.502 490.498 125.614 491.386 124.518 491.386 cv
123.422 491.386 122.534 490.498 122.534 489.402 cv
122.534 488.306 123.422 487.418 124.518 487.418 cv
.895659 .848112 .507591 .675471 cmyk
f
124.518 488.079 mo
125.248 488.079 125.841 488.671 125.841 489.402 cv
125.841 490.133 125.248 490.725 124.518 490.725 cv
123.788 490.725 123.195 490.133 123.195 489.402 cv
123.195 488.671 123.788 488.079 124.518 488.079 cv
0 0 0 0 cmyk
f
133.383 420.492 mo
134.479 420.492 135.367 421.38 135.367 422.476 cv
135.367 423.572 134.479 424.46 133.383 424.46 cv
132.287 424.46 131.399 423.572 131.399 422.476 cv
131.399 421.38 132.287 420.492 133.383 420.492 cv
.895659 .848112 .507591 .675471 cmyk
f
133.383 421.154 mo
134.113 421.154 134.706 421.746 134.706 422.477 cv
134.706 423.208 134.113 423.8 133.383 423.8 cv
132.653 423.8 132.06 423.208 132.06 422.477 cv
132.06 421.746 132.653 421.154 133.383 421.154 cv
0 0 0 0 cmyk
f
137.731 480.757 mo
138.827 480.757 139.715 481.645 139.715 482.741 cv
139.715 483.837 138.827 484.725 137.731 484.725 cv
136.635 484.725 135.747 483.837 135.747 482.741 cv
135.747 481.645 136.635 480.757 137.731 480.757 cv
.895659 .848112 .507591 .675471 cmyk
f
137.731 481.418 mo
138.461 481.418 139.054 482.01 139.054 482.741 cv
139.054 483.471 138.461 484.064 137.731 484.064 cv
137.001 484.064 136.408 483.471 136.408 482.741 cv
136.408 482.01 137.001 481.418 137.731 481.418 cv
0 0 0 0 cmyk
f
168.277 521.862 mo
169.373 521.862 170.261 522.75 170.261 523.846 cv
170.261 524.943 169.373 525.831 168.277 525.831 cv
167.181 525.831 166.293 524.943 166.293 523.846 cv
166.293 522.75 167.181 521.862 168.277 521.862 cv
.895659 .848112 .507591 .675471 cmyk
f
168.277 522.524 mo
169.007 522.524 169.6 523.116 169.6 523.847 cv
169.6 524.577 169.007 525.17 168.277 525.17 cv
167.546 525.17 166.954 524.577 166.954 523.847 cv
166.954 523.116 167.546 522.524 168.277 522.524 cv
0 0 0 0 cmyk
f
126.864 511.803 mo
127.96 511.803 128.848 512.69 128.848 513.786 cv
128.848 514.883 127.96 515.771 126.864 515.771 cv
125.768 515.771 124.88 514.883 124.88 513.786 cv
124.88 512.69 125.768 511.803 126.864 511.803 cv
.895659 .848112 .507591 .675471 cmyk
f
126.864 512.464 mo
127.595 512.464 128.187 513.056 128.187 513.787 cv
128.187 514.517 127.595 515.11 126.864 515.11 cv
126.134 515.11 125.541 514.517 125.541 513.787 cv
125.541 513.056 126.134 512.464 126.864 512.464 cv
0 0 0 0 cmyk
f
134.769 467.524 mo
135.865 467.524 136.753 468.412 136.753 469.508 cv
136.753 470.604 135.865 471.492 134.769 471.492 cv
133.673 471.492 132.785 470.604 132.785 469.508 cv
132.785 468.412 133.673 467.524 134.769 467.524 cv
.895659 .848112 .507591 .675471 cmyk
f
134.769 468.185 mo
135.499 468.185 136.092 468.777 136.092 469.508 cv
136.092 470.238 135.499 470.831 134.769 470.831 cv
134.039 470.831 133.446 470.238 133.446 469.508 cv
133.446 468.777 134.039 468.185 134.769 468.185 cv
0 0 0 0 cmyk
f
160.307 501.187 mo
161.403 501.187 162.291 502.076 162.291 503.171 cv
162.291 504.267 161.403 505.156 160.307 505.156 cv
159.211 505.156 158.323 504.267 158.323 503.171 cv
158.323 502.076 159.211 501.187 160.307 501.187 cv
.895659 .848112 .507591 .675471 cmyk
f
160.307 501.849 mo
161.037 501.849 161.63 502.441 161.63 503.172 cv
161.63 503.902 161.037 504.495 160.307 504.495 cv
159.577 504.495 158.984 503.902 158.984 503.172 cv
158.984 502.441 159.577 501.849 160.307 501.849 cv
0 0 0 0 cmyk
f
143.164 440.667 mo
144.26 440.667 145.148 441.555 145.148 442.651 cv
145.148 443.747 144.26 444.635 143.164 444.635 cv
142.068 444.635 141.18 443.747 141.18 442.651 cv
141.18 441.555 142.068 440.667 143.164 440.667 cv
.895659 .848112 .507591 .675471 cmyk
f
143.164 441.328 mo
143.894 441.328 144.487 441.92 144.487 442.651 cv
144.487 443.381 143.894 443.974 143.164 443.974 cv
142.433 443.974 141.841 443.381 141.841 442.651 cv
141.841 441.92 142.433 441.328 143.164 441.328 cv
0 0 0 0 cmyk
f
154.742 495.503 mo
155.838 495.503 156.726 496.391 156.726 497.487 cv
156.726 498.583 155.838 499.471 154.742 499.471 cv
153.646 499.471 152.758 498.583 152.758 497.487 cv
152.758 496.391 153.646 495.503 154.742 495.503 cv
.895659 .848112 .507591 .675471 cmyk
f
154.742 496.164 mo
155.472 496.164 156.065 496.756 156.065 497.487 cv
156.065 498.218 155.472 498.81 154.742 498.81 cv
154.011 498.81 153.419 498.218 153.419 497.487 cv
153.419 496.756 154.011 496.164 154.742 496.164 cv
0 0 0 0 cmyk
f
135.274 489.028 mo
136.37 489.028 137.258 489.916 137.258 491.012 cv
137.258 492.108 136.37 492.996 135.274 492.996 cv
134.178 492.996 133.29 492.108 133.29 491.012 cv
133.29 489.916 134.178 489.028 135.274 489.028 cv
.895659 .848112 .507591 .675471 cmyk
f
135.274 489.689 mo
136.004 489.689 136.597 490.281 136.597 491.012 cv
136.597 491.742 136.004 492.335 135.274 492.335 cv
134.544 492.335 133.951 491.742 133.951 491.012 cv
133.951 490.281 134.544 489.689 135.274 489.689 cv
0 0 0 0 cmyk
f
145.532 463.057 mo
146.628 463.057 147.516 463.946 147.516 465.041 cv
147.516 466.137 146.628 467.026 145.532 467.026 cv
144.436 467.026 143.548 466.137 143.548 465.041 cv
143.548 463.946 144.436 463.057 145.532 463.057 cv
.895659 .848112 .507591 .675471 cmyk
f
145.532 463.719 mo
146.263 463.719 146.855 464.311 146.855 465.042 cv
146.855 465.772 146.263 466.365 145.532 466.365 cv
144.802 466.365 144.209 465.772 144.209 465.042 cv
144.209 464.311 144.802 463.719 145.532 463.719 cv
0 0 0 0 cmyk
f
148.714 456.99 mo
149.81 456.99 150.698 457.878 150.698 458.974 cv
150.698 460.07 149.81 460.958 148.714 460.958 cv
147.618 460.958 146.73 460.07 146.73 458.974 cv
146.73 457.878 147.618 456.99 148.714 456.99 cv
.895659 .848112 .507591 .675471 cmyk
f
148.714 457.651 mo
149.444 457.651 150.037 458.243 150.037 458.974 cv
150.037 459.704 149.444 460.297 148.714 460.297 cv
147.984 460.297 147.391 459.704 147.391 458.974 cv
147.391 458.243 147.984 457.651 148.714 457.651 cv
0 0 0 0 cmyk
f
142.966 493.849 mo
144.062 493.849 144.95 494.738 144.95 495.833 cv
144.95 496.929 144.062 497.818 142.966 497.818 cv
141.87 497.818 140.982 496.929 140.982 495.833 cv
140.982 494.738 141.87 493.849 142.966 493.849 cv
.895659 .848112 .507591 .675471 cmyk
f
142.966 494.511 mo
143.696 494.511 144.289 495.103 144.289 495.834 cv
144.289 496.564 143.696 497.157 142.966 497.157 cv
142.235 497.157 141.643 496.564 141.643 495.834 cv
141.643 495.103 142.235 494.511 142.966 494.511 cv
0 0 0 0 cmyk
f
134.519 480.473 mo
135.615 480.473 136.503 481.361 136.503 482.457 cv
136.503 483.553 135.615 484.441 134.519 484.441 cv
133.423 484.441 132.535 483.553 132.535 482.457 cv
132.535 481.361 133.423 480.473 134.519 480.473 cv
.895659 .848112 .507591 .675471 cmyk
f
134.519 481.135 mo
135.25 481.135 135.842 481.727 135.842 482.458 cv
135.842 483.189 135.25 483.781 134.519 483.781 cv
133.789 483.781 133.196 483.189 133.196 482.458 cv
133.196 481.727 133.789 481.135 134.519 481.135 cv
0 0 0 0 cmyk
f
139.293 559.147 mo
140.389 559.147 141.277 560.035 141.277 561.131 cv
141.277 562.227 140.389 563.115 139.293 563.115 cv
138.197 563.115 137.309 562.227 137.309 561.131 cv
137.309 560.035 138.197 559.147 139.293 559.147 cv
.895659 .848112 .507591 .675471 cmyk
f
139.293 559.808 mo
140.024 559.808 140.616 560.4 140.616 561.131 cv
140.616 561.862 140.024 562.454 139.293 562.454 cv
138.563 562.454 137.97 561.862 137.97 561.131 cv
137.97 560.4 138.563 559.808 139.293 559.808 cv
0 0 0 0 cmyk
f
129.893 480.011 mo
130.989 480.011 131.877 480.899 131.877 481.995 cv
131.877 483.091 130.989 483.979 129.893 483.979 cv
128.797 483.979 127.909 483.091 127.909 481.995 cv
127.909 480.899 128.797 480.011 129.893 480.011 cv
.895659 .848112 .507591 .675471 cmyk
f
129.893 480.672 mo
130.623 480.672 131.216 481.264 131.216 481.995 cv
131.216 482.726 130.623 483.318 129.893 483.318 cv
129.163 483.318 128.57 482.726 128.57 481.995 cv
128.57 481.264 129.163 480.672 129.893 480.672 cv
0 0 0 0 cmyk
f
138.031 562.202 mo
139.127 562.202 140.015 563.09 140.015 564.186 cv
140.015 565.282 139.127 566.17 138.031 566.17 cv
136.935 566.17 136.047 565.282 136.047 564.186 cv
136.047 563.09 136.935 562.202 138.031 562.202 cv
.895659 .848112 .507591 .675471 cmyk
f
138.031 562.864 mo
138.761 562.864 139.354 563.456 139.354 564.187 cv
139.354 564.918 138.761 565.51 138.031 565.51 cv
137.301 565.51 136.708 564.918 136.708 564.187 cv
136.708 563.456 137.301 562.864 138.031 562.864 cv
0 0 0 0 cmyk
f
129.819 491.805 mo
130.915 491.805 131.803 492.693 131.803 493.789 cv
131.803 494.885 130.915 495.773 129.819 495.773 cv
128.723 495.773 127.835 494.885 127.835 493.789 cv
127.835 492.693 128.723 491.805 129.819 491.805 cv
.895659 .848112 .507591 .675471 cmyk
f
129.819 492.467 mo
130.549 492.467 131.142 493.059 131.142 493.79 cv
131.142 494.521 130.549 495.113 129.819 495.113 cv
129.088 495.113 128.496 494.521 128.496 493.79 cv
128.496 493.059 129.088 492.467 129.819 492.467 cv
0 0 0 0 cmyk
f
136.19 464.242 mo
137.286 464.242 138.174 465.131 138.174 466.226 cv
138.174 467.323 137.286 468.211 136.19 468.211 cv
135.094 468.211 134.206 467.323 134.206 466.226 cv
134.206 465.131 135.094 464.242 136.19 464.242 cv
.895659 .848112 .507591 .675471 cmyk
f
136.19 464.904 mo
136.921 464.904 137.513 465.496 137.513 466.227 cv
137.513 466.957 136.921 467.55 136.19 467.55 cv
135.46 467.55 134.867 466.957 134.867 466.227 cv
134.867 465.496 135.46 464.904 136.19 464.904 cv
0 0 0 0 cmyk
f
161.736 444.164 mo
162.832 444.164 163.72 445.052 163.72 446.148 cv
163.72 447.244 162.832 448.132 161.736 448.132 cv
160.64 448.132 159.752 447.244 159.752 446.148 cv
159.752 445.052 160.64 444.164 161.736 444.164 cv
.895659 .848112 .507591 .675471 cmyk
f
161.736 444.826 mo
162.466 444.826 163.059 445.418 163.059 446.149 cv
163.059 446.879 162.466 447.472 161.736 447.472 cv
161.006 447.472 160.413 446.879 160.413 446.149 cv
160.413 445.418 161.006 444.826 161.736 444.826 cv
0 0 0 0 cmyk
f
150.232 503.888 mo
151.328 503.888 152.216 504.776 152.216 505.872 cv
152.216 506.968 151.328 507.857 150.232 507.857 cv
149.136 507.857 148.248 506.968 148.248 505.872 cv
148.248 504.776 149.136 503.888 150.232 503.888 cv
.895659 .848112 .507591 .675471 cmyk
f
150.232 504.55 mo
150.962 504.55 151.555 505.142 151.555 505.873 cv
151.555 506.603 150.962 507.196 150.232 507.196 cv
149.502 507.196 148.909 506.603 148.909 505.873 cv
148.909 505.142 149.502 504.55 150.232 504.55 cv
0 0 0 0 cmyk
f
191.286 501.6 mo
192.382 501.6 193.27 502.488 193.27 503.584 cv
193.27 504.68 192.382 505.568 191.286 505.568 cv
190.19 505.568 189.302 504.68 189.302 503.584 cv
189.302 502.488 190.19 501.6 191.286 501.6 cv
.895659 .848112 .507591 .675471 cmyk
f
191.286 502.261 mo
192.016 502.261 192.609 502.853 192.609 503.584 cv
192.609 504.315 192.016 504.907 191.286 504.907 cv
190.556 504.907 189.963 504.315 189.963 503.584 cv
189.963 502.853 190.556 502.261 191.286 502.261 cv
0 0 0 0 cmyk
f
216.121 498.538 mo
217.217 498.538 218.105 499.426 218.105 500.522 cv
218.105 501.618 217.217 502.506 216.121 502.506 cv
215.025 502.506 214.137 501.618 214.137 500.522 cv
214.137 499.426 215.025 498.538 216.121 498.538 cv
.895659 .848112 .507591 .675471 cmyk
f
216.121 499.199 mo
216.851 499.199 217.444 499.791 217.444 500.522 cv
217.444 501.252 216.851 501.845 216.121 501.845 cv
215.391 501.845 214.798 501.252 214.798 500.522 cv
214.798 499.791 215.391 499.199 216.121 499.199 cv
0 0 0 0 cmyk
f
135.032 489.861 mo
136.128 489.861 137.016 490.75 137.016 491.845 cv
137.016 492.941 136.128 493.83 135.032 493.83 cv
133.936 493.83 133.048 492.941 133.048 491.845 cv
133.048 490.75 133.936 489.861 135.032 489.861 cv
.895659 .848112 .507591 .675471 cmyk
f
135.032 490.522 mo
135.763 490.522 136.355 491.114 136.355 491.845 cv
136.355 492.575 135.763 493.168 135.032 493.168 cv
134.302 493.168 133.709 492.575 133.709 491.845 cv
133.709 491.114 134.302 490.522 135.032 490.522 cv
0 0 0 0 cmyk
f
125.713 509.183 mo
126.809 509.183 127.697 510.071 127.697 511.167 cv
127.697 512.263 126.809 513.151 125.713 513.151 cv
124.617 513.151 123.729 512.263 123.729 511.167 cv
123.729 510.071 124.617 509.183 125.713 509.183 cv
.895659 .848112 .507591 .675471 cmyk
f
125.713 509.844 mo
126.444 509.844 127.036 510.436 127.036 511.167 cv
127.036 511.897 126.444 512.49 125.713 512.49 cv
124.983 512.49 124.39 511.897 124.39 511.167 cv
124.39 510.436 124.983 509.844 125.713 509.844 cv
0 0 0 0 cmyk
f
147.71 462.21 mo
148.806 462.21 149.694 463.098 149.694 464.194 cv
149.694 465.29 148.806 466.178 147.71 466.178 cv
146.614 466.178 145.726 465.29 145.726 464.194 cv
145.726 463.098 146.614 462.21 147.71 462.21 cv
.895659 .848112 .507591 .675471 cmyk
f
147.71 462.871 mo
148.44 462.871 149.033 463.463 149.033 464.194 cv
149.033 464.925 148.44 465.517 147.71 465.517 cv
146.979 465.517 146.387 464.925 146.387 464.194 cv
146.387 463.463 146.979 462.871 147.71 462.871 cv
0 0 0 0 cmyk
f
163.511 468.344 mo
164.607 468.344 165.495 469.233 165.495 470.328 cv
165.495 471.424 164.607 472.313 163.511 472.313 cv
162.415 472.313 161.527 471.424 161.527 470.328 cv
161.527 469.233 162.415 468.344 163.511 468.344 cv
.895659 .848112 .507591 .675471 cmyk
f
163.511 469.005 mo
164.242 469.005 164.834 469.597 164.834 470.328 cv
164.834 471.058 164.242 471.651 163.511 471.651 cv
162.781 471.651 162.188 471.058 162.188 470.328 cv
162.188 469.597 162.781 469.005 163.511 469.005 cv
0 0 0 0 cmyk
f
151.582 485.612 mo
152.678 485.612 153.566 486.501 153.566 487.596 cv
153.566 488.693 152.678 489.581 151.582 489.581 cv
150.486 489.581 149.598 488.693 149.598 487.596 cv
149.598 486.501 150.486 485.612 151.582 485.612 cv
.895659 .848112 .507591 .675471 cmyk
f
151.582 486.273 mo
152.313 486.273 152.905 486.865 152.905 487.596 cv
152.905 488.326 152.313 488.919 151.582 488.919 cv
150.852 488.919 150.259 488.326 150.259 487.596 cv
150.259 486.865 150.852 486.273 151.582 486.273 cv
0 0 0 0 cmyk
f
125.815 512.89 mo
126.911 512.89 127.799 513.779 127.799 514.874 cv
127.799 515.97 126.911 516.859 125.815 516.859 cv
124.719 516.859 123.831 515.97 123.831 514.874 cv
123.831 513.779 124.719 512.89 125.815 512.89 cv
.895659 .848112 .507591 .675471 cmyk
f
125.815 513.552 mo
126.546 513.552 127.138 514.144 127.138 514.875 cv
127.138 515.605 126.546 516.198 125.815 516.198 cv
125.085 516.198 124.492 515.605 124.492 514.875 cv
124.492 514.144 125.085 513.552 125.815 513.552 cv
0 0 0 0 cmyk
f
182.502 484.012 mo
183.598 484.012 184.486 484.9 184.486 485.996 cv
184.486 487.092 183.598 487.98 182.502 487.98 cv
181.406 487.98 180.518 487.092 180.518 485.996 cv
180.518 484.9 181.406 484.012 182.502 484.012 cv
.895659 .848112 .507591 .675471 cmyk
f
182.502 484.673 mo
183.232 484.673 183.825 485.265 183.825 485.996 cv
183.825 486.727 183.232 487.319 182.502 487.319 cv
181.772 487.319 181.179 486.727 181.179 485.996 cv
181.179 485.265 181.772 484.673 182.502 484.673 cv
0 0 0 0 cmyk
f
138.486 508.525 mo
139.582 508.525 140.47 509.413 140.47 510.509 cv
140.47 511.605 139.582 512.493 138.486 512.493 cv
137.39 512.493 136.502 511.605 136.502 510.509 cv
136.502 509.413 137.39 508.525 138.486 508.525 cv
.895659 .848112 .507591 .675471 cmyk
f
138.486 509.186 mo
139.216 509.186 139.809 509.778 139.809 510.509 cv
139.809 511.24 139.216 511.832 138.486 511.832 cv
137.755 511.832 137.163 511.24 137.163 510.509 cv
137.163 509.778 137.755 509.186 138.486 509.186 cv
0 0 0 0 cmyk
f
137.687 443.951 mo
138.783 443.951 139.671 444.839 139.671 445.935 cv
139.671 447.031 138.783 447.919 137.687 447.919 cv
136.591 447.919 135.703 447.031 135.703 445.935 cv
135.703 444.839 136.591 443.951 137.687 443.951 cv
.895659 .848112 .507591 .675471 cmyk
f
137.687 444.613 mo
138.418 444.613 139.01 445.205 139.01 445.936 cv
139.01 446.667 138.418 447.259 137.687 447.259 cv
136.957 447.259 136.364 446.667 136.364 445.936 cv
136.364 445.205 136.957 444.613 137.687 444.613 cv
0 0 0 0 cmyk
f
135.069 517.989 mo
136.165 517.989 137.053 518.878 137.053 519.973 cv
137.053 521.069 136.165 521.958 135.069 521.958 cv
133.973 521.958 133.085 521.069 133.085 519.973 cv
133.085 518.878 133.973 517.989 135.069 517.989 cv
.895659 .848112 .507591 .675471 cmyk
f
135.069 518.65 mo
135.799 518.65 136.392 519.242 136.392 519.973 cv
136.392 520.703 135.799 521.296 135.069 521.296 cv
134.339 521.296 133.746 520.703 133.746 519.973 cv
133.746 519.242 134.339 518.65 135.069 518.65 cv
0 0 0 0 cmyk
f
144.381 509.326 mo
145.477 509.326 146.365 510.215 146.365 511.31 cv
146.365 512.407 145.477 513.295 144.381 513.295 cv
143.285 513.295 142.397 512.407 142.397 511.31 cv
142.397 510.215 143.285 509.326 144.381 509.326 cv
.895659 .848112 .507591 .675471 cmyk
f
144.381 509.988 mo
145.111 509.988 145.704 510.58 145.704 511.311 cv
145.704 512.041 145.111 512.633 144.381 512.633 cv
143.651 512.633 143.058 512.041 143.058 511.311 cv
143.058 510.58 143.651 509.988 144.381 509.988 cv
0 0 0 0 cmyk
f
136.103 483.891 mo
137.199 483.891 138.087 484.779 138.087 485.875 cv
138.087 486.971 137.199 487.859 136.103 487.859 cv
135.007 487.859 134.119 486.971 134.119 485.875 cv
134.119 484.779 135.007 483.891 136.103 483.891 cv
.895659 .848112 .507591 .675471 cmyk
f
136.103 484.552 mo
136.833 484.552 137.426 485.144 137.426 485.875 cv
137.426 486.606 136.833 487.198 136.103 487.198 cv
135.373 487.198 134.78 486.606 134.78 485.875 cv
134.78 485.144 135.373 484.552 136.103 484.552 cv
0 0 0 0 cmyk
f
127.37 356.609 mo
128.466 356.609 129.354 357.498 129.354 358.593 cv
129.354 359.689 128.466 360.578 127.37 360.578 cv
126.274 360.578 125.386 359.689 125.386 358.593 cv
125.386 357.498 126.274 356.609 127.37 356.609 cv
.895659 .848112 .507591 .675471 cmyk
f
127.37 357.271 mo
128.1 357.271 128.693 357.863 128.693 358.594 cv
128.693 359.324 128.1 359.917 127.37 359.917 cv
126.639 359.917 126.047 359.324 126.047 358.594 cv
126.047 357.863 126.639 357.271 127.37 357.271 cv
0 0 0 0 cmyk
f
143.362 481.032 mo
144.458 481.032 145.346 481.921 145.346 483.016 cv
145.346 484.112 144.458 485.001 143.362 485.001 cv
142.266 485.001 141.378 484.112 141.378 483.016 cv
141.378 481.921 142.266 481.032 143.362 481.032 cv
.895659 .848112 .507591 .675471 cmyk
f
143.362 481.694 mo
144.092 481.694 144.685 482.286 144.685 483.017 cv
144.685 483.747 144.092 484.34 143.362 484.34 cv
142.631 484.34 142.039 483.747 142.039 483.017 cv
142.039 482.286 142.631 481.694 143.362 481.694 cv
0 0 0 0 cmyk
f
123.147 562.202 mo
124.243 562.202 125.131 563.09 125.131 564.186 cv
125.131 565.282 124.243 566.17 123.147 566.17 cv
122.051 566.17 121.163 565.282 121.163 564.186 cv
121.163 563.09 122.051 562.202 123.147 562.202 cv
.895659 .848112 .507591 .675471 cmyk
f
123.147 562.864 mo
123.877 562.864 124.47 563.456 124.47 564.187 cv
124.47 564.918 123.877 565.51 123.147 565.51 cv
122.417 565.51 121.824 564.918 121.824 564.187 cv
121.824 563.456 122.417 562.864 123.147 562.864 cv
0 0 0 0 cmyk
f
137.335 473.956 mo
138.431 473.956 139.319 474.844 139.319 475.94 cv
139.319 477.036 138.431 477.925 137.335 477.925 cv
136.239 477.925 135.351 477.036 135.351 475.94 cv
135.351 474.844 136.239 473.956 137.335 473.956 cv
.895659 .848112 .507591 .675471 cmyk
f
137.335 474.618 mo
138.065 474.618 138.658 475.21 138.658 475.941 cv
138.658 476.671 138.065 477.264 137.335 477.264 cv
136.605 477.264 136.012 476.671 136.012 475.941 cv
136.012 475.21 136.605 474.618 137.335 474.618 cv
0 0 0 0 cmyk
f
154.434 522.615 mo
155.53 522.615 156.418 523.503 156.418 524.599 cv
156.418 525.695 155.53 526.583 154.434 526.583 cv
153.338 526.583 152.45 525.695 152.45 524.599 cv
152.45 523.503 153.338 522.615 154.434 522.615 cv
.895659 .848112 .507591 .675471 cmyk
f
154.434 523.277 mo
155.164 523.277 155.757 523.869 155.757 524.6 cv
155.757 525.331 155.164 525.923 154.434 525.923 cv
153.704 525.923 153.111 525.331 153.111 524.6 cv
153.111 523.869 153.704 523.277 154.434 523.277 cv
0 0 0 0 cmyk
f
134.263 486.229 mo
135.359 486.229 136.247 487.118 136.247 488.213 cv
136.247 489.309 135.359 490.198 134.263 490.198 cv
133.167 490.198 132.279 489.309 132.279 488.213 cv
132.279 487.118 133.167 486.229 134.263 486.229 cv
.895659 .848112 .507591 .675471 cmyk
f
134.263 486.89 mo
134.993 486.89 135.586 487.482 135.586 488.213 cv
135.586 488.943 134.993 489.536 134.263 489.536 cv
133.533 489.536 132.94 488.943 132.94 488.213 cv
132.94 487.482 133.533 486.89 134.263 486.89 cv
0 0 0 0 cmyk
f
148.282 489.581 mo
149.378 489.581 150.266 490.47 150.266 491.565 cv
150.266 492.661 149.378 493.55 148.282 493.55 cv
147.186 493.55 146.298 492.661 146.298 491.565 cv
146.298 490.47 147.186 489.581 148.282 489.581 cv
.895659 .848112 .507591 .675471 cmyk
f
148.282 490.242 mo
149.013 490.242 149.605 490.834 149.605 491.565 cv
149.605 492.295 149.013 492.888 148.282 492.888 cv
147.552 492.888 146.959 492.295 146.959 491.565 cv
146.959 490.834 147.552 490.242 148.282 490.242 cv
0 0 0 0 cmyk
f
127.678 532.106 mo
128.774 532.106 129.662 532.995 129.662 534.09 cv
129.662 535.186 128.774 536.075 127.678 536.075 cv
126.582 536.075 125.694 535.186 125.694 534.09 cv
125.694 532.995 126.582 532.106 127.678 532.106 cv
.895659 .848112 .507591 .675471 cmyk
f
127.678 532.767 mo
128.408 532.767 129.001 533.359 129.001 534.09 cv
129.001 534.82 128.408 535.413 127.678 535.413 cv
126.948 535.413 126.355 534.82 126.355 534.09 cv
126.355 533.359 126.948 532.767 127.678 532.767 cv
0 0 0 0 cmyk
f
135.7 492.487 mo
136.796 492.487 137.684 493.376 137.684 494.471 cv
137.684 495.567 136.796 496.456 135.7 496.456 cv
134.604 496.456 133.716 495.567 133.716 494.471 cv
133.716 493.376 134.604 492.487 135.7 492.487 cv
.895659 .848112 .507591 .675471 cmyk
f
135.7 493.149 mo
136.43 493.149 137.023 493.741 137.023 494.472 cv
137.023 495.202 136.43 495.795 135.7 495.795 cv
134.97 495.795 134.377 495.202 134.377 494.472 cv
134.377 493.741 134.97 493.149 135.7 493.149 cv
0 0 0 0 cmyk
f
145.584 462.03 mo
146.68 462.03 147.568 462.919 147.568 464.014 cv
147.568 465.11 146.68 465.999 145.584 465.999 cv
144.488 465.999 143.6 465.11 143.6 464.014 cv
143.6 462.919 144.488 462.03 145.584 462.03 cv
.895659 .848112 .507591 .675471 cmyk
f
145.584 462.691 mo
146.314 462.691 146.907 463.283 146.907 464.014 cv
146.907 464.744 146.314 465.337 145.584 465.337 cv
144.853 465.337 144.261 464.744 144.261 464.014 cv
144.261 463.283 144.853 462.691 145.584 462.691 cv
0 0 0 0 cmyk
f
245.648 494.003 mo
246.744 494.003 247.632 494.891 247.632 495.987 cv
247.632 497.083 246.744 497.971 245.648 497.971 cv
244.552 497.971 243.664 497.083 243.664 495.987 cv
243.664 494.891 244.552 494.003 245.648 494.003 cv
.895659 .848112 .507591 .675471 cmyk
f
245.648 494.665 mo
246.378 494.665 246.971 495.257 246.971 495.988 cv
246.971 496.718 246.378 497.311 245.648 497.311 cv
244.918 497.311 244.325 496.718 244.325 495.988 cv
244.325 495.257 244.918 494.665 245.648 494.665 cv
0 0 0 0 cmyk
f
139.967 481.796 mo
141.063 481.796 141.951 482.684 141.951 483.78 cv
141.951 484.876 141.063 485.764 139.967 485.764 cv
138.871 485.764 137.983 484.876 137.983 483.78 cv
137.983 482.684 138.871 481.796 139.967 481.796 cv
.895659 .848112 .507591 .675471 cmyk
f
139.967 482.457 mo
140.697 482.457 141.29 483.049 141.29 483.78 cv
141.29 484.511 140.697 485.103 139.967 485.103 cv
139.237 485.103 138.644 484.511 138.644 483.78 cv
138.644 483.049 139.237 482.457 139.967 482.457 cv
0 0 0 0 cmyk
f
126.798 515.311 mo
127.894 515.311 128.782 516.199 128.782 517.295 cv
128.782 518.391 127.894 519.279 126.798 519.279 cv
125.702 519.279 124.814 518.391 124.814 517.295 cv
124.814 516.199 125.702 515.311 126.798 515.311 cv
.895659 .848112 .507591 .675471 cmyk
f
126.798 515.972 mo
127.529 515.972 128.121 516.564 128.121 517.295 cv
128.121 518.026 127.529 518.618 126.798 518.618 cv
126.068 518.618 125.475 518.026 125.475 517.295 cv
125.475 516.564 126.068 515.972 126.798 515.972 cv
0 0 0 0 cmyk
f
127.729 559.912 mo
128.825 559.912 129.713 560.8 129.713 561.896 cv
129.713 562.992 128.825 563.88 127.729 563.88 cv
126.633 563.88 125.745 562.992 125.745 561.896 cv
125.745 560.8 126.633 559.912 127.729 559.912 cv
.895659 .848112 .507591 .675471 cmyk
f
127.729 560.573 mo
128.459 560.573 129.052 561.165 129.052 561.896 cv
129.052 562.627 128.459 563.219 127.729 563.219 cv
126.999 563.219 126.406 562.627 126.406 561.896 cv
126.406 561.165 126.999 560.573 127.729 560.573 cv
0 0 0 0 cmyk
f
127.686 465.597 mo
128.782 465.597 129.67 466.485 129.67 467.581 cv
129.67 468.677 128.782 469.565 127.686 469.565 cv
126.59 469.565 125.702 468.677 125.702 467.581 cv
125.702 466.485 126.59 465.597 127.686 465.597 cv
.895659 .848112 .507591 .675471 cmyk
f
127.686 466.259 mo
128.416 466.259 129.009 466.851 129.009 467.582 cv
129.009 468.312 128.416 468.905 127.686 468.905 cv
126.956 468.905 126.363 468.312 126.363 467.582 cv
126.363 466.851 126.956 466.259 127.686 466.259 cv
0 0 0 0 cmyk
f
124.129 559.347 mo
125.225 559.347 126.113 560.235 126.113 561.331 cv
126.113 562.427 125.225 563.315 124.129 563.315 cv
123.033 563.315 122.145 562.427 122.145 561.331 cv
122.145 560.235 123.033 559.347 124.129 559.347 cv
.895659 .848112 .507591 .675471 cmyk
f
124.129 560.009 mo
124.86 560.009 125.452 560.601 125.452 561.332 cv
125.452 562.062 124.86 562.655 124.129 562.655 cv
123.399 562.655 122.806 562.062 122.806 561.332 cv
122.806 560.601 123.399 560.009 124.129 560.009 cv
0 0 0 0 cmyk
f
140.429 491.242 mo
141.525 491.242 142.413 492.13 142.413 493.226 cv
142.413 494.322 141.525 495.21 140.429 495.21 cv
139.333 495.21 138.445 494.322 138.445 493.226 cv
138.445 492.13 139.333 491.242 140.429 491.242 cv
.895659 .848112 .507591 .675471 cmyk
f
140.429 491.903 mo
141.16 491.903 141.752 492.495 141.752 493.226 cv
141.752 493.957 141.16 494.549 140.429 494.549 cv
139.699 494.549 139.106 493.957 139.106 493.226 cv
139.106 492.495 139.699 491.903 140.429 491.903 cv
0 0 0 0 cmyk
f
146.31 477.97 mo
147.406 477.97 148.294 478.858 148.294 479.954 cv
148.294 481.05 147.406 481.938 146.31 481.938 cv
145.214 481.938 144.326 481.05 144.326 479.954 cv
144.326 478.858 145.214 477.97 146.31 477.97 cv
.895659 .848112 .507591 .675471 cmyk
f
146.31 478.631 mo
147.04 478.631 147.633 479.223 147.633 479.954 cv
147.633 480.685 147.04 481.277 146.31 481.277 cv
145.58 481.277 144.987 480.685 144.987 479.954 cv
144.987 479.223 145.58 478.631 146.31 478.631 cv
0 0 0 0 cmyk
f
128.99 496.221 mo
130.086 496.221 130.974 497.11 130.974 498.205 cv
130.974 499.301 130.086 500.19 128.99 500.19 cv
127.894 500.19 127.006 499.301 127.006 498.205 cv
127.006 497.11 127.894 496.221 128.99 496.221 cv
.895659 .848112 .507591 .675471 cmyk
f
128.99 496.883 mo
129.721 496.883 130.313 497.475 130.313 498.206 cv
130.313 498.936 129.721 499.529 128.99 499.529 cv
128.26 499.529 127.667 498.936 127.667 498.206 cv
127.667 497.475 128.26 496.883 128.99 496.883 cv
0 0 0 0 cmyk
f
133.075 515.121 mo
134.171 515.121 135.059 516.009 135.059 517.105 cv
135.059 518.201 134.171 519.089 133.075 519.089 cv
131.979 519.089 131.091 518.201 131.091 517.105 cv
131.091 516.009 131.979 515.121 133.075 515.121 cv
.895659 .848112 .507591 .675471 cmyk
f
133.075 515.782 mo
133.805 515.782 134.398 516.374 134.398 517.105 cv
134.398 517.836 133.805 518.428 133.075 518.428 cv
132.345 518.428 131.752 517.836 131.752 517.105 cv
131.752 516.374 132.345 515.782 133.075 515.782 cv
0 0 0 0 cmyk
f
132.92 497.667 mo
134.016 497.667 134.904 498.555 134.904 499.651 cv
134.904 500.747 134.016 501.635 132.92 501.635 cv
131.824 501.635 130.936 500.747 130.936 499.651 cv
130.936 498.555 131.824 497.667 132.92 497.667 cv
.895659 .848112 .507591 .675471 cmyk
f
132.92 498.328 mo
133.651 498.328 134.243 498.92 134.243 499.651 cv
134.243 500.381 133.651 500.974 132.92 500.974 cv
132.19 500.974 131.597 500.381 131.597 499.651 cv
131.597 498.92 132.19 498.328 132.92 498.328 cv
0 0 0 0 cmyk
f
156.919 477.345 mo
158.015 477.345 158.903 478.233 158.903 479.329 cv
158.903 480.425 158.015 481.313 156.919 481.313 cv
155.823 481.313 154.935 480.425 154.935 479.329 cv
154.935 478.233 155.823 477.345 156.919 477.345 cv
.895659 .848112 .507591 .675471 cmyk
f
156.919 478.007 mo
157.649 478.007 158.242 478.599 158.242 479.33 cv
158.242 480.06 157.649 480.653 156.919 480.653 cv
156.189 480.653 155.596 480.06 155.596 479.33 cv
155.596 478.599 156.189 478.007 156.919 478.007 cv
0 0 0 0 cmyk
f
131.169 450.995 mo
132.265 450.995 133.153 451.883 133.153 452.979 cv
133.153 454.075 132.265 454.963 131.169 454.963 cv
130.073 454.963 129.185 454.075 129.185 452.979 cv
129.185 451.883 130.073 450.995 131.169 450.995 cv
.895659 .848112 .507591 .675471 cmyk
f
131.169 451.657 mo
131.899 451.657 132.492 452.249 132.492 452.98 cv
132.492 453.71 131.899 454.303 131.169 454.303 cv
130.439 454.303 129.846 453.71 129.846 452.98 cv
129.846 452.249 130.439 451.657 131.169 451.657 cv
0 0 0 0 cmyk
f
130.809 469.093 mo
131.905 469.093 132.793 469.981 132.793 471.077 cv
132.793 472.173 131.905 473.061 130.809 473.061 cv
129.713 473.061 128.825 472.173 128.825 471.077 cv
128.825 469.981 129.713 469.093 130.809 469.093 cv
.895659 .848112 .507591 .675471 cmyk
f
130.809 469.754 mo
131.539 469.754 132.132 470.346 132.132 471.077 cv
132.132 471.808 131.539 472.4 130.809 472.4 cv
130.079 472.4 129.486 471.808 129.486 471.077 cv
129.486 470.346 130.079 469.754 130.809 469.754 cv
0 0 0 0 cmyk
f
124.232 501.377 mo
125.328 501.377 126.216 502.265 126.216 503.361 cv
126.216 504.457 125.328 505.345 124.232 505.345 cv
123.136 505.345 122.248 504.457 122.248 503.361 cv
122.248 502.265 123.136 501.377 124.232 501.377 cv
.895659 .848112 .507591 .675471 cmyk
f
124.232 502.038 mo
124.962 502.038 125.555 502.63 125.555 503.361 cv
125.555 504.092 124.962 504.684 124.232 504.684 cv
123.501 504.684 122.909 504.092 122.909 503.361 cv
122.909 502.63 123.501 502.038 124.232 502.038 cv
0 0 0 0 cmyk
f
129.922 491.323 mo
131.018 491.323 131.906 492.211 131.906 493.307 cv
131.906 494.403 131.018 495.291 129.922 495.291 cv
128.826 495.291 127.938 494.403 127.938 493.307 cv
127.938 492.211 128.826 491.323 129.922 491.323 cv
.895659 .848112 .507591 .675471 cmyk
f
129.922 491.984 mo
130.652 491.984 131.245 492.576 131.245 493.307 cv
131.245 494.038 130.652 494.63 129.922 494.63 cv
129.191 494.63 128.599 494.038 128.599 493.307 cv
128.599 492.576 129.191 491.984 129.922 491.984 cv
0 0 0 0 cmyk
f
143.582 502.802 mo
144.678 502.802 145.566 503.69 145.566 504.786 cv
145.566 505.882 144.678 506.77 143.582 506.77 cv
142.486 506.77 141.598 505.882 141.598 504.786 cv
141.598 503.69 142.486 502.802 143.582 502.802 cv
.895659 .848112 .507591 .675471 cmyk
f
143.582 503.463 mo
144.312 503.463 144.905 504.055 144.905 504.786 cv
144.905 505.517 144.312 506.109 143.582 506.109 cv
142.852 506.109 142.259 505.517 142.259 504.786 cv
142.259 504.055 142.852 503.463 143.582 503.463 cv
0 0 0 0 cmyk
f
143.494 534.801 mo
144.59 534.801 145.478 535.69 145.478 536.785 cv
145.478 537.881 144.59 538.77 143.494 538.77 cv
142.398 538.77 141.51 537.881 141.51 536.785 cv
141.51 535.69 142.398 534.801 143.494 534.801 cv
.895659 .848112 .507591 .675471 cmyk
f
143.494 535.463 mo
144.224 535.463 144.817 536.055 144.817 536.786 cv
144.817 537.516 144.224 538.109 143.494 538.109 cv
142.763 538.109 142.171 537.516 142.171 536.786 cv
142.171 536.055 142.763 535.463 143.494 535.463 cv
0 0 0 0 cmyk
f
151.222 490.056 mo
152.318 490.056 153.206 490.944 153.206 492.04 cv
153.206 493.136 152.318 494.024 151.222 494.024 cv
150.126 494.024 149.238 493.136 149.238 492.04 cv
149.238 490.944 150.126 490.056 151.222 490.056 cv
.895659 .848112 .507591 .675471 cmyk
f
151.222 490.717 mo
151.953 490.717 152.545 491.309 152.545 492.04 cv
152.545 492.771 151.953 493.363 151.222 493.363 cv
150.492 493.363 149.899 492.771 149.899 492.04 cv
149.899 491.309 150.492 490.717 151.222 490.717 cv
0 0 0 0 cmyk
f
131.44 500.732 mo
132.536 500.732 133.424 501.62 133.424 502.716 cv
133.424 503.812 132.536 504.701 131.44 504.701 cv
130.344 504.701 129.456 503.812 129.456 502.716 cv
129.456 501.62 130.344 500.732 131.44 500.732 cv
.895659 .848112 .507591 .675471 cmyk
f
131.44 501.393 mo
132.171 501.393 132.763 501.985 132.763 502.716 cv
132.763 503.446 132.171 504.039 131.44 504.039 cv
130.71 504.039 130.117 503.446 130.117 502.716 cv
130.117 501.985 130.71 501.393 131.44 501.393 cv
0 0 0 0 cmyk
f
148.634 498.506 mo
149.73 498.506 150.618 499.394 150.618 500.49 cv
150.618 501.586 149.73 502.474 148.634 502.474 cv
147.538 502.474 146.65 501.586 146.65 500.49 cv
146.65 499.394 147.538 498.506 148.634 498.506 cv
.895659 .848112 .507591 .675471 cmyk
f
148.634 499.168 mo
149.364 499.168 149.957 499.76 149.957 500.491 cv
149.957 501.221 149.364 501.814 148.634 501.814 cv
147.904 501.814 147.311 501.221 147.311 500.491 cv
147.311 499.76 147.904 499.168 148.634 499.168 cv
0 0 0 0 cmyk
f
128.36 496.814 mo
129.456 496.814 130.344 497.702 130.344 498.798 cv
130.344 499.894 129.456 500.782 128.36 500.782 cv
127.264 500.782 126.376 499.894 126.376 498.798 cv
126.376 497.702 127.264 496.814 128.36 496.814 cv
.895659 .848112 .507591 .675471 cmyk
f
128.36 497.475 mo
129.091 497.475 129.683 498.067 129.683 498.798 cv
129.683 499.529 129.091 500.121 128.36 500.121 cv
127.63 500.121 127.037 499.529 127.037 498.798 cv
127.037 498.067 127.63 497.475 128.36 497.475 cv
0 0 0 0 cmyk
f
140.136 449.684 mo
141.232 449.684 142.12 450.572 142.12 451.668 cv
142.12 452.764 141.232 453.652 140.136 453.652 cv
139.04 453.652 138.152 452.764 138.152 451.668 cv
138.152 450.572 139.04 449.684 140.136 449.684 cv
.895659 .848112 .507591 .675471 cmyk
f
140.136 450.345 mo
140.867 450.345 141.459 450.937 141.459 451.668 cv
141.459 452.399 140.867 452.991 140.136 452.991 cv
139.406 452.991 138.813 452.399 138.813 451.668 cv
138.813 450.937 139.406 450.345 140.136 450.345 cv
0 0 0 0 cmyk
f
130.641 499.871 mo
131.737 499.871 132.625 500.759 132.625 501.855 cv
132.625 502.951 131.737 503.839 130.641 503.839 cv
129.545 503.839 128.657 502.951 128.657 501.855 cv
128.657 500.759 129.545 499.871 130.641 499.871 cv
.895659 .848112 .507591 .675471 cmyk
f
130.641 500.532 mo
131.371 500.532 131.964 501.124 131.964 501.855 cv
131.964 502.586 131.371 503.178 130.641 503.178 cv
129.911 503.178 129.318 502.586 129.318 501.855 cv
129.318 501.124 129.911 500.532 130.641 500.532 cv
0 0 0 0 cmyk
f
124.012 494.303 mo
125.108 494.303 125.996 495.191 125.996 496.287 cv
125.996 497.383 125.108 498.271 124.012 498.271 cv
122.916 498.271 122.028 497.383 122.028 496.287 cv
122.028 495.191 122.916 494.303 124.012 494.303 cv
.895659 .848112 .507591 .675471 cmyk
f
124.012 494.965 mo
124.742 494.965 125.335 495.557 125.335 496.288 cv
125.335 497.018 124.742 497.611 124.012 497.611 cv
123.281 497.611 122.689 497.018 122.689 496.288 cv
122.689 495.557 123.281 494.965 124.012 494.965 cv
0 0 0 0 cmyk
f
137.416 495.198 mo
138.512 495.198 139.4 496.086 139.4 497.182 cv
139.4 498.278 138.512 499.166 137.416 499.166 cv
136.32 499.166 135.432 498.278 135.432 497.182 cv
135.432 496.086 136.32 495.198 137.416 495.198 cv
.895659 .848112 .507591 .675471 cmyk
f
137.416 495.86 mo
138.146 495.86 138.739 496.452 138.739 497.183 cv
138.739 497.914 138.146 498.506 137.416 498.506 cv
136.686 498.506 136.093 497.914 136.093 497.183 cv
136.093 496.452 136.686 495.86 137.416 495.86 cv
0 0 0 0 cmyk
f
119.774 477.564 mo
120.87 477.564 121.758 478.452 121.758 479.548 cv
121.758 480.644 120.87 481.532 119.774 481.532 cv
118.678 481.532 117.79 480.644 117.79 479.548 cv
117.79 478.452 118.678 477.564 119.774 477.564 cv
.895659 .848112 .507591 .675471 cmyk
f
119.774 478.225 mo
120.504 478.225 121.097 478.817 121.097 479.548 cv
121.097 480.278 120.504 480.871 119.774 480.871 cv
119.044 480.871 118.451 480.278 118.451 479.548 cv
118.451 478.817 119.044 478.225 119.774 478.225 cv
0 0 0 0 cmyk
f
137.892 485.587 mo
138.988 485.587 139.876 486.476 139.876 487.571 cv
139.876 488.667 138.988 489.556 137.892 489.556 cv
136.796 489.556 135.908 488.667 135.908 487.571 cv
135.908 486.476 136.796 485.587 137.892 485.587 cv
.895659 .848112 .507591 .675471 cmyk
f
137.892 486.249 mo
138.623 486.249 139.215 486.841 139.215 487.572 cv
139.215 488.302 138.623 488.895 137.892 488.895 cv
137.162 488.895 136.569 488.302 136.569 487.572 cv
136.569 486.841 137.162 486.249 137.892 486.249 cv
0 0 0 0 cmyk
f
219.464 509.674 mo
220.56 509.674 221.448 510.562 221.448 511.658 cv
221.448 512.754 220.56 513.642 219.464 513.642 cv
218.368 513.642 217.48 512.754 217.48 511.658 cv
217.48 510.562 218.368 509.674 219.464 509.674 cv
.895659 .848112 .507591 .675471 cmyk
f
219.464 510.335 mo
220.194 510.335 220.787 510.927 220.787 511.658 cv
220.787 512.389 220.194 512.981 219.464 512.981 cv
218.734 512.981 218.141 512.389 218.141 511.658 cv
218.141 510.927 218.734 510.335 219.464 510.335 cv
0 0 0 0 cmyk
f
128.91 491.35 mo
130.006 491.35 130.894 492.238 130.894 493.334 cv
130.894 494.43 130.006 495.318 128.91 495.318 cv
127.814 495.318 126.926 494.43 126.926 493.334 cv
126.926 492.238 127.814 491.35 128.91 491.35 cv
.895659 .848112 .507591 .675471 cmyk
f
128.91 492.011 mo
129.64 492.011 130.233 492.603 130.233 493.334 cv
130.233 494.065 129.64 494.657 128.91 494.657 cv
128.18 494.657 127.587 494.065 127.587 493.334 cv
127.587 492.603 128.18 492.011 128.91 492.011 cv
0 0 0 0 cmyk
f
167.742 494.944 mo
168.838 494.944 169.726 495.833 169.726 496.928 cv
169.726 498.024 168.838 498.913 167.742 498.913 cv
166.646 498.913 165.758 498.024 165.758 496.928 cv
165.758 495.833 166.646 494.944 167.742 494.944 cv
.895659 .848112 .507591 .675471 cmyk
f
167.742 495.605 mo
168.472 495.605 169.065 496.197 169.065 496.928 cv
169.065 497.658 168.472 498.251 167.742 498.251 cv
167.011 498.251 166.419 497.658 166.419 496.928 cv
166.419 496.197 167.011 495.605 167.742 495.605 cv
0 0 0 0 cmyk
f
157.374 493.272 mo
158.47 493.272 159.358 494.16 159.358 495.256 cv
159.358 496.352 158.47 497.24 157.374 497.24 cv
156.278 497.24 155.39 496.352 155.39 495.256 cv
155.39 494.16 156.278 493.272 157.374 493.272 cv
.895659 .848112 .507591 .675471 cmyk
f
157.374 493.933 mo
158.105 493.933 158.697 494.525 158.697 495.256 cv
158.697 495.987 158.105 496.579 157.374 496.579 cv
156.644 496.579 156.051 495.987 156.051 495.256 cv
156.051 494.525 156.644 493.933 157.374 493.933 cv
0 0 0 0 cmyk
f
144.015 503.057 mo
145.111 503.057 145.999 503.945 145.999 505.041 cv
145.999 506.137 145.111 507.025 144.015 507.025 cv
142.919 507.025 142.031 506.137 142.031 505.041 cv
142.031 503.945 142.919 503.057 144.015 503.057 cv
.895659 .848112 .507591 .675471 cmyk
f
144.015 503.719 mo
144.745 503.719 145.338 504.311 145.338 505.042 cv
145.338 505.773 144.745 506.365 144.015 506.365 cv
143.284 506.365 142.692 505.773 142.692 505.042 cv
142.692 504.311 143.284 503.719 144.015 503.719 cv
0 0 0 0 cmyk
f
217.932 499.878 mo
219.028 499.878 219.916 500.767 219.916 501.862 cv
219.916 502.958 219.028 503.847 217.932 503.847 cv
216.836 503.847 215.948 502.958 215.948 501.862 cv
215.948 500.767 216.836 499.878 217.932 499.878 cv
.895659 .848112 .507591 .675471 cmyk
f
217.932 500.539 mo
218.662 500.539 219.255 501.131 219.255 501.862 cv
219.255 502.592 218.662 503.185 217.932 503.185 cv
217.201 503.185 216.609 502.592 216.609 501.862 cv
216.609 501.131 217.201 500.539 217.932 500.539 cv
0 0 0 0 cmyk
f
193.317 493.303 mo
194.413 493.303 195.301 494.191 195.301 495.287 cv
195.301 496.383 194.413 497.271 193.317 497.271 cv
192.221 497.271 191.333 496.383 191.333 495.287 cv
191.333 494.191 192.221 493.303 193.317 493.303 cv
.895659 .848112 .507591 .675471 cmyk
f
193.317 493.965 mo
194.047 493.965 194.64 494.557 194.64 495.288 cv
194.64 496.019 194.047 496.611 193.317 496.611 cv
192.587 496.611 191.994 496.019 191.994 495.288 cv
191.994 494.557 192.587 493.965 193.317 493.965 cv
0 0 0 0 cmyk
f
171.613 499.41 mo
172.709 499.41 173.597 500.298 173.597 501.394 cv
173.597 502.49 172.709 503.378 171.613 503.378 cv
170.517 503.378 169.629 502.49 169.629 501.394 cv
169.629 500.298 170.517 499.41 171.613 499.41 cv
.895659 .848112 .507591 .675471 cmyk
f
171.613 500.072 mo
172.343 500.072 172.936 500.664 172.936 501.395 cv
172.936 502.126 172.343 502.718 171.613 502.718 cv
170.883 502.718 170.29 502.126 170.29 501.395 cv
170.29 500.664 170.883 500.072 171.613 500.072 cv
0 0 0 0 cmyk
f
401.1 507.235 mo
402.196 507.235 403.084 508.124 403.084 509.219 cv
403.084 510.315 402.196 511.204 401.1 511.204 cv
400.004 511.204 399.116 510.315 399.116 509.219 cv
399.116 508.124 400.004 507.235 401.1 507.235 cv
.895659 .848112 .507591 .675471 cmyk
f
401.1 507.896 mo
401.83 507.896 402.423 508.488 402.423 509.219 cv
402.423 509.949 401.83 510.542 401.1 510.542 cv
400.37 510.542 399.777 509.949 399.777 509.219 cv
399.777 508.488 400.37 507.896 401.1 507.896 cv
0 0 0 0 cmyk
f
331.941 500.273 mo
333.037 500.273 333.925 501.161 333.925 502.257 cv
333.925 503.353 333.037 504.241 331.941 504.241 cv
330.845 504.241 329.957 503.353 329.957 502.257 cv
329.957 501.161 330.845 500.273 331.941 500.273 cv
.895659 .848112 .507591 .675471 cmyk
f
331.941 500.934 mo
332.671 500.934 333.264 501.526 333.264 502.257 cv
333.264 502.987 332.671 503.58 331.941 503.58 cv
331.211 503.58 330.618 502.987 330.618 502.257 cv
330.618 501.526 331.211 500.934 331.941 500.934 cv
0 0 0 0 cmyk
f
304.849 506.461 mo
305.945 506.461 306.833 507.35 306.833 508.445 cv
306.833 509.542 305.945 510.43 304.849 510.43 cv
303.753 510.43 302.865 509.542 302.865 508.445 cv
302.865 507.35 303.753 506.461 304.849 506.461 cv
.895659 .848112 .507591 .675471 cmyk
f
304.849 507.122 mo
305.579 507.122 306.172 507.714 306.172 508.445 cv
306.172 509.175 305.579 509.768 304.849 509.768 cv
304.119 509.768 303.526 509.175 303.526 508.445 cv
303.526 507.714 304.119 507.122 304.849 507.122 cv
0 0 0 0 cmyk
f
425.084 491.058 mo
426.18 491.058 427.068 491.947 427.068 493.042 cv
427.068 494.138 426.18 495.027 425.084 495.027 cv
423.988 495.027 423.1 494.138 423.1 493.042 cv
423.1 491.947 423.988 491.058 425.084 491.058 cv
.895659 .848112 .507591 .675471 cmyk
f
425.084 491.72 mo
425.814 491.72 426.407 492.312 426.407 493.043 cv
426.407 493.773 425.814 494.366 425.084 494.366 cv
424.353 494.366 423.761 493.773 423.761 493.043 cv
423.761 492.312 424.353 491.72 425.084 491.72 cv
0 0 0 0 cmyk
f
161.282 501.854 mo
162.378 501.854 163.266 502.742 163.266 503.838 cv
163.266 504.934 162.378 505.822 161.282 505.822 cv
160.186 505.822 159.298 504.934 159.298 503.838 cv
159.298 502.742 160.186 501.854 161.282 501.854 cv
.895659 .848112 .507591 .675471 cmyk
f
161.282 502.515 mo
162.012 502.515 162.605 503.107 162.605 503.838 cv
162.605 504.569 162.012 505.161 161.282 505.161 cv
160.551 505.161 159.959 504.569 159.959 503.838 cv
159.959 503.107 160.551 502.515 161.282 502.515 cv
0 0 0 0 cmyk
f
179.136 500.234 mo
180.232 500.234 181.12 501.122 181.12 502.218 cv
181.12 503.314 180.232 504.203 179.136 504.203 cv
178.04 504.203 177.152 503.314 177.152 502.218 cv
177.152 501.122 178.04 500.234 179.136 500.234 cv
.895659 .848112 .507591 .675471 cmyk
f
179.136 500.895 mo
179.866 500.895 180.459 501.487 180.459 502.218 cv
180.459 502.948 179.866 503.541 179.136 503.541 cv
178.406 503.541 177.813 502.948 177.813 502.218 cv
177.813 501.487 178.406 500.895 179.136 500.895 cv
0 0 0 0 cmyk
f
134.571 491.845 mo
135.667 491.845 136.555 492.734 136.555 493.829 cv
136.555 494.925 135.667 495.814 134.571 495.814 cv
133.475 495.814 132.587 494.925 132.587 493.829 cv
132.587 492.734 133.475 491.845 134.571 491.845 cv
.895659 .848112 .507591 .675471 cmyk
f
134.571 492.507 mo
135.301 492.507 135.894 493.099 135.894 493.83 cv
135.894 494.56 135.301 495.153 134.571 495.153 cv
133.841 495.153 133.248 494.56 133.248 493.83 cv
133.248 493.099 133.841 492.507 134.571 492.507 cv
0 0 0 0 cmyk
f
200.862 498.902 mo
201.958 498.902 202.846 499.791 202.846 500.886 cv
202.846 501.982 201.958 502.871 200.862 502.871 cv
199.766 502.871 198.878 501.982 198.878 500.886 cv
198.878 499.791 199.766 498.902 200.862 498.902 cv
.895659 .848112 .507591 .675471 cmyk
f
200.862 499.564 mo
201.592 499.564 202.185 500.156 202.185 500.887 cv
202.185 501.617 201.592 502.21 200.862 502.21 cv
200.132 502.21 199.539 501.617 199.539 500.887 cv
199.539 500.156 200.132 499.564 200.862 499.564 cv
0 0 0 0 cmyk
f
149.961 507.343 mo
151.057 507.343 151.945 508.232 151.945 509.327 cv
151.945 510.423 151.057 511.312 149.961 511.312 cv
148.865 511.312 147.977 510.423 147.977 509.327 cv
147.977 508.232 148.865 507.343 149.961 507.343 cv
.895659 .848112 .507591 .675471 cmyk
f
149.961 508.005 mo
150.691 508.005 151.284 508.597 151.284 509.328 cv
151.284 510.058 150.691 510.651 149.961 510.651 cv
149.23 510.651 148.638 510.058 148.638 509.328 cv
148.638 508.597 149.23 508.005 149.961 508.005 cv
0 0 0 0 cmyk
f
174.436 494.969 mo
175.532 494.969 176.42 495.857 176.42 496.953 cv
176.42 498.049 175.532 498.937 174.436 498.937 cv
173.34 498.937 172.452 498.049 172.452 496.953 cv
172.452 495.857 173.34 494.969 174.436 494.969 cv
.895659 .848112 .507591 .675471 cmyk
f
174.436 495.63 mo
175.167 495.63 175.759 496.222 175.759 496.953 cv
175.759 497.684 175.167 498.276 174.436 498.276 cv
173.706 498.276 173.113 497.684 173.113 496.953 cv
173.113 496.222 173.706 495.63 174.436 495.63 cv
0 0 0 0 cmyk
f
147.468 484.356 mo
148.564 484.356 149.452 485.245 149.452 486.34 cv
149.452 487.437 148.564 488.325 147.468 488.325 cv
146.372 488.325 145.484 487.437 145.484 486.34 cv
145.484 485.245 146.372 484.356 147.468 484.356 cv
.895659 .848112 .507591 .675471 cmyk
f
147.468 485.018 mo
148.198 485.018 148.791 485.61 148.791 486.341 cv
148.791 487.071 148.198 487.664 147.468 487.664 cv
146.738 487.664 146.145 487.071 146.145 486.341 cv
146.145 485.61 146.738 485.018 147.468 485.018 cv
0 0 0 0 cmyk
f
140.465 488.525 mo
141.561 488.525 142.449 489.414 142.449 490.509 cv
142.449 491.605 141.561 492.494 140.465 492.494 cv
139.369 492.494 138.481 491.605 138.481 490.509 cv
138.481 489.414 139.369 488.525 140.465 488.525 cv
.895659 .848112 .507591 .675471 cmyk
f
140.465 489.187 mo
141.195 489.187 141.788 489.779 141.788 490.51 cv
141.788 491.24 141.195 491.833 140.465 491.833 cv
139.735 491.833 139.142 491.24 139.142 490.51 cv
139.142 489.779 139.735 489.187 140.465 489.187 cv
0 0 0 0 cmyk
f
173.63 489.845 mo
174.726 489.845 175.614 490.733 175.614 491.829 cv
175.614 492.925 174.726 493.813 173.63 493.813 cv
172.534 493.813 171.646 492.925 171.646 491.829 cv
171.646 490.733 172.534 489.845 173.63 489.845 cv
.895659 .848112 .507591 .675471 cmyk
f
173.63 490.506 mo
174.36 490.506 174.953 491.098 174.953 491.829 cv
174.953 492.56 174.36 493.152 173.63 493.152 cv
172.9 493.152 172.307 492.56 172.307 491.829 cv
172.307 491.098 172.9 490.506 173.63 490.506 cv
0 0 0 0 cmyk
f
114.553 501.128 mo
115.649 501.128 116.537 502.017 116.537 503.112 cv
116.537 504.209 115.649 505.097 114.553 505.097 cv
113.457 505.097 112.569 504.209 112.569 503.112 cv
112.569 502.017 113.457 501.128 114.553 501.128 cv
.895659 .848112 .507591 .675471 cmyk
f
114.553 501.789 mo
115.283 501.789 115.876 502.381 115.876 503.112 cv
115.876 503.842 115.283 504.435 114.553 504.435 cv
113.823 504.435 113.23 503.842 113.23 503.112 cv
113.23 502.381 113.823 501.789 114.553 501.789 cv
0 0 0 0 cmyk
f
131.616 488.768 mo
132.712 488.768 133.6 489.656 133.6 490.752 cv
133.6 491.848 132.712 492.736 131.616 492.736 cv
130.52 492.736 129.632 491.848 129.632 490.752 cv
129.632 489.656 130.52 488.768 131.616 488.768 cv
.895659 .848112 .507591 .675471 cmyk
f
131.616 489.429 mo
132.346 489.429 132.939 490.021 132.939 490.752 cv
132.939 491.482 132.346 492.075 131.616 492.075 cv
130.886 492.075 130.293 491.482 130.293 490.752 cv
130.293 490.021 130.886 489.429 131.616 489.429 cv
0 0 0 0 cmyk
f
139.85 510.013 mo
140.946 510.013 141.834 510.901 141.834 511.997 cv
141.834 513.093 140.946 513.981 139.85 513.981 cv
138.754 513.981 137.866 513.093 137.866 511.997 cv
137.866 510.901 138.754 510.013 139.85 510.013 cv
.895659 .848112 .507591 .675471 cmyk
f
139.85 510.674 mo
140.58 510.674 141.173 511.266 141.173 511.997 cv
141.173 512.727 140.58 513.32 139.85 513.32 cv
139.12 513.32 138.527 512.727 138.527 511.997 cv
138.527 511.266 139.12 510.674 139.85 510.674 cv
0 0 0 0 cmyk
f
139.667 490.813 mo
140.763 490.813 141.651 491.701 141.651 492.797 cv
141.651 493.893 140.763 494.781 139.667 494.781 cv
138.571 494.781 137.683 493.893 137.683 492.797 cv
137.683 491.701 138.571 490.813 139.667 490.813 cv
.895659 .848112 .507591 .675471 cmyk
f
139.667 491.474 mo
140.397 491.474 140.99 492.066 140.99 492.797 cv
140.99 493.527 140.397 494.12 139.667 494.12 cv
138.936 494.12 138.344 493.527 138.344 492.797 cv
138.344 492.066 138.936 491.474 139.667 491.474 cv
0 0 0 0 cmyk
f
135.172 493.03 mo
136.268 493.03 137.156 493.918 137.156 495.014 cv
137.156 496.11 136.268 496.999 135.172 496.999 cv
134.076 496.999 133.188 496.11 133.188 495.014 cv
133.188 493.918 134.076 493.03 135.172 493.03 cv
.895659 .848112 .507591 .675471 cmyk
f
135.172 493.691 mo
135.903 493.691 136.495 494.283 136.495 495.014 cv
136.495 495.744 135.903 496.337 135.172 496.337 cv
134.442 496.337 133.849 495.744 133.849 495.014 cv
133.849 494.283 134.442 493.691 135.172 493.691 cv
0 0 0 0 cmyk
f
184.76 498.695 mo
185.856 498.695 186.744 499.583 186.744 500.679 cv
186.744 501.775 185.856 502.663 184.76 502.663 cv
183.664 502.663 182.776 501.775 182.776 500.679 cv
182.776 499.583 183.664 498.695 184.76 498.695 cv
.895659 .848112 .507591 .675471 cmyk
f
184.76 499.356 mo
185.49 499.356 186.083 499.948 186.083 500.679 cv
186.083 501.409 185.49 502.002 184.76 502.002 cv
184.03 502.002 183.437 501.409 183.437 500.679 cv
183.437 499.948 184.03 499.356 184.76 499.356 cv
0 0 0 0 cmyk
f
164.523 502.135 mo
165.619 502.135 166.507 503.024 166.507 504.119 cv
166.507 505.216 165.619 506.104 164.523 506.104 cv
163.427 506.104 162.539 505.216 162.539 504.119 cv
162.539 503.024 163.427 502.135 164.523 502.135 cv
.895659 .848112 .507591 .675471 cmyk
f
164.523 502.797 mo
165.253 502.797 165.846 503.389 165.846 504.12 cv
165.846 504.85 165.253 505.443 164.523 505.443 cv
163.793 505.443 163.2 504.85 163.2 504.12 cv
163.2 503.389 163.793 502.797 164.523 502.797 cv
0 0 0 0 cmyk
f
168.769 490.5 mo
169.865 490.5 170.753 491.388 170.753 492.484 cv
170.753 493.58 169.865 494.468 168.769 494.468 cv
167.673 494.468 166.785 493.58 166.785 492.484 cv
166.785 491.388 167.673 490.5 168.769 490.5 cv
.895659 .848112 .507591 .675471 cmyk
f
168.769 491.161 mo
169.499 491.161 170.092 491.753 170.092 492.484 cv
170.092 493.215 169.499 493.807 168.769 493.807 cv
168.039 493.807 167.446 493.215 167.446 492.484 cv
167.446 491.753 168.039 491.161 168.769 491.161 cv
0 0 0 0 cmyk
f
118.667 529.563 mo
119.763 529.563 120.651 530.452 120.651 531.547 cv
120.651 532.643 119.763 533.532 118.667 533.532 cv
117.571 533.532 116.683 532.643 116.683 531.547 cv
116.683 530.452 117.571 529.563 118.667 529.563 cv
.895659 .848112 .507591 .675471 cmyk
f
118.667 530.225 mo
119.398 530.225 119.99 530.817 119.99 531.548 cv
119.99 532.278 119.398 532.871 118.667 532.871 cv
117.937 532.871 117.344 532.278 117.344 531.548 cv
117.344 530.817 117.937 530.225 118.667 530.225 cv
0 0 0 0 cmyk
f
186.476 500.496 mo
187.572 500.496 188.46 501.384 188.46 502.48 cv
188.46 503.576 187.572 504.464 186.476 504.464 cv
185.38 504.464 184.492 503.576 184.492 502.48 cv
184.492 501.384 185.38 500.496 186.476 500.496 cv
.895659 .848112 .507591 .675471 cmyk
f
186.476 501.157 mo
187.206 501.157 187.799 501.749 187.799 502.48 cv
187.799 503.211 187.206 503.803 186.476 503.803 cv
185.745 503.803 185.153 503.211 185.153 502.48 cv
185.153 501.749 185.745 501.157 186.476 501.157 cv
0 0 0 0 cmyk
f
135.971 509.443 mo
137.067 509.443 137.955 510.332 137.955 511.427 cv
137.955 512.523 137.067 513.412 135.971 513.412 cv
134.875 513.412 133.987 512.523 133.987 511.427 cv
133.987 510.332 134.875 509.443 135.971 509.443 cv
.895659 .848112 .507591 .675471 cmyk
f
135.971 510.105 mo
136.701 510.105 137.294 510.697 137.294 511.428 cv
137.294 512.158 136.701 512.751 135.971 512.751 cv
135.24 512.751 134.648 512.158 134.648 511.428 cv
134.648 510.697 135.24 510.105 135.971 510.105 cv
0 0 0 0 cmyk
f
143.685 491.058 mo
144.781 491.058 145.669 491.947 145.669 493.042 cv
145.669 494.138 144.781 495.027 143.685 495.027 cv
142.589 495.027 141.701 494.138 141.701 493.042 cv
141.701 491.947 142.589 491.058 143.685 491.058 cv
.895659 .848112 .507591 .675471 cmyk
f
143.685 491.72 mo
144.415 491.72 145.008 492.312 145.008 493.043 cv
145.008 493.773 144.415 494.366 143.685 494.366 cv
142.954 494.366 142.362 493.773 142.362 493.043 cv
142.362 492.312 142.954 491.72 143.685 491.72 cv
0 0 0 0 cmyk
f
135.274 451.453 mo
136.37 451.453 137.258 452.342 137.258 453.437 cv
137.258 454.533 136.37 455.422 135.274 455.422 cv
134.178 455.422 133.29 454.533 133.29 453.437 cv
133.29 452.342 134.178 451.453 135.274 451.453 cv
.895659 .848112 .507591 .675471 cmyk
f
135.274 452.115 mo
136.004 452.115 136.597 452.707 136.597 453.438 cv
136.597 454.168 136.004 454.761 135.274 454.761 cv
134.544 454.761 133.951 454.168 133.951 453.438 cv
133.951 452.707 134.544 452.115 135.274 452.115 cv
0 0 0 0 cmyk
f
151.787 492.899 mo
152.883 492.899 153.771 493.788 153.771 494.883 cv
153.771 495.979 152.883 496.868 151.787 496.868 cv
150.691 496.868 149.803 495.979 149.803 494.883 cv
149.803 493.788 150.691 492.899 151.787 492.899 cv
.895659 .848112 .507591 .675471 cmyk
f
151.787 493.561 mo
152.517 493.561 153.11 494.153 153.11 494.884 cv
153.11 495.614 152.517 496.207 151.787 496.207 cv
151.057 496.207 150.464 495.614 150.464 494.884 cv
150.464 494.153 151.057 493.561 151.787 493.561 cv
0 0 0 0 cmyk
f
137.746 481.495 mo
138.842 481.495 139.73 482.383 139.73 483.479 cv
139.73 484.575 138.842 485.463 137.746 485.463 cv
136.65 485.463 135.762 484.575 135.762 483.479 cv
135.762 482.383 136.65 481.495 137.746 481.495 cv
.895659 .848112 .507591 .675471 cmyk
f
137.746 482.157 mo
138.476 482.157 139.069 482.749 139.069 483.48 cv
139.069 484.211 138.476 484.803 137.746 484.803 cv
137.016 484.803 136.423 484.211 136.423 483.48 cv
136.423 482.749 137.016 482.157 137.746 482.157 cv
0 0 0 0 cmyk
f
345.352 489.496 mo
346.448 489.496 347.336 490.384 347.336 491.48 cv
347.336 492.576 346.448 493.464 345.352 493.464 cv
344.256 493.464 343.368 492.576 343.368 491.48 cv
343.368 490.384 344.256 489.496 345.352 489.496 cv
.895659 .848112 .507591 .675471 cmyk
f
345.352 490.157 mo
346.083 490.157 346.675 490.749 346.675 491.48 cv
346.675 492.21 346.083 492.803 345.352 492.803 cv
344.622 492.803 344.029 492.21 344.029 491.48 cv
344.029 490.749 344.622 490.157 345.352 490.157 cv
0 0 0 0 cmyk
f
138.823 530.08 mo
139.919 530.08 140.807 530.969 140.807 532.064 cv
140.807 533.16 139.919 534.049 138.823 534.049 cv
137.727 534.049 136.839 533.16 136.839 532.064 cv
136.839 530.969 137.727 530.08 138.823 530.08 cv
.895659 .848112 .507591 .675471 cmyk
f
138.823 530.741 mo
139.553 530.741 140.146 531.333 140.146 532.064 cv
140.146 532.794 139.553 533.387 138.823 533.387 cv
138.092 533.387 137.5 532.794 137.5 532.064 cv
137.5 531.333 138.092 530.741 138.823 530.741 cv
0 0 0 0 cmyk
f
147.387 485.505 mo
148.483 485.505 149.371 486.394 149.371 487.489 cv
149.371 488.585 148.483 489.474 147.387 489.474 cv
146.291 489.474 145.403 488.585 145.403 487.489 cv
145.403 486.394 146.291 485.505 147.387 485.505 cv
.895659 .848112 .507591 .675471 cmyk
f
147.387 486.167 mo
148.117 486.167 148.71 486.759 148.71 487.49 cv
148.71 488.22 148.117 488.813 147.387 488.813 cv
146.656 488.813 146.064 488.22 146.064 487.49 cv
146.064 486.759 146.656 486.167 147.387 486.167 cv
0 0 0 0 cmyk
f
129.871 494.144 mo
130.967 494.144 131.855 495.033 131.855 496.128 cv
131.855 497.225 130.967 498.113 129.871 498.113 cv
128.775 498.113 127.887 497.225 127.887 496.128 cv
127.887 495.033 128.775 494.144 129.871 494.144 cv
.895659 .848112 .507591 .675471 cmyk
f
129.871 494.805 mo
130.602 494.805 131.194 495.397 131.194 496.128 cv
131.194 496.858 130.602 497.451 129.871 497.451 cv
129.141 497.451 128.548 496.858 128.548 496.128 cv
128.548 495.397 129.141 494.805 129.871 494.805 cv
0 0 0 0 cmyk
f
153.583 475.488 mo
154.679 475.488 155.567 476.377 155.567 477.472 cv
155.567 478.568 154.679 479.457 153.583 479.457 cv
152.487 479.457 151.599 478.568 151.599 477.472 cv
151.599 476.377 152.487 475.488 153.583 475.488 cv
.895659 .848112 .507591 .675471 cmyk
f
153.583 476.15 mo
154.314 476.15 154.906 476.742 154.906 477.473 cv
154.906 478.203 154.314 478.796 153.583 478.796 cv
152.853 478.796 152.26 478.203 152.26 477.473 cv
152.26 476.742 152.853 476.15 153.583 476.15 cv
0 0 0 0 cmyk
f
1.6 lw
110.452 480.265 mo
138.175 482.719 li
156.037 484.193 li
171.14 485.439 li
179.343 486.116 li
187.545 486.793 li
195.108 487.417 li
202.67 488.041 li
218.884 489.38 li
237.671 490.931 li
246.019 491.619 li
254.367 492.308 li
261.686 492.913 li
269.007 493.516 li
284.968 494.834 li
301.025 496.16 li
309.902 496.892 li
318.778 497.625 li
327.223 498.322 li
335.669 499.019 li
353.232 500.469 li
368.016 501.688 li
377.041 502.434 li
386.066 503.179 li
394.55 503.879 li
403.033 504.579 li
416.625 505.701 li
430.217 506.822 li
432.308 506.995 li
.895659 .848112 .507591 .675471 cmyk
@
[1 2 ] 0 dsh
111.089 491.578 mo
133.088 492.673 li
151.716 493.33 li
167.466 493.887 li
176.021 494.189 li
184.576 494.49 li
192.463 494.769 li
200.349 495.047 li
217.26 495.644 li
236.853 496.336 li
245.559 496.643 li
254.264 496.951 li
261.899 497.221 li
269.533 497.49 li
286.18 498.078 li
302.925 498.669 li
312.182 498.996 li
321.44 499.323 li
330.248 499.633 li
339.056 499.944 li
357.372 500.591 li
372.791 501.136 li
382.203 501.468 li
391.616 501.8 li
400.464 502.112 li
409.311 502.425 li
423.486 502.925 li
437.661 503.426 li
439.842 503.503 li
@
417.643 354.506 mo
420.2 354.506 422.273 356.579 422.273 359.136 cv
422.273 361.693 420.2 363.766 417.643 363.766 cv
415.086 363.766 413.013 361.693 413.013 359.136 cv
413.013 356.579 415.086 354.506 417.643 354.506 cv
f
417.643 354.506 mo
420.2 354.506 422.273 356.579 422.273 359.136 cv
422.273 361.693 420.2 363.766 417.643 363.766 cv
415.086 363.766 413.013 361.693 413.013 359.136 cv
413.013 356.579 415.086 354.506 417.643 354.506 cv
f
1 /0 /CSD get_res sepcs
1 sep
UUMMJU+ArialMT*1 [10 0 0 -10 0 0 ]msf428.226 361.803 mo(Bio)[6.67007 2.22 0 ]xsh417.643 367.487 mo
420.2 367.487 422.273 369.56 422.273 372.117 cv
422.273 374.674 420.2 376.747 417.643 376.747 cv
415.086 376.747 413.013 374.674 413.013 372.117 cv
413.013 369.56 415.086 367.487 417.643 367.487 cv
.895659 .848112 .507591 .675471 cmyk
f
417.643 367.487 mo
420.2 367.487 422.273 369.56 422.273 372.117 cv
422.273 374.674 420.2 376.747 417.643 376.747 cv
415.086 376.747 413.013 374.674 413.013 372.117 cv
413.013 369.56 415.086 367.487 417.643 367.487 cv
0 0 0 0 cmyk
f
1 lw
[] 0 dsh
417.643 367.487 mo
420.2 367.487 422.273 369.56 422.273 372.117 cv
422.273 374.674 420.2 376.747 417.643 376.747 cv
415.086 376.747 413.013 374.674 413.013 372.117 cv
413.013 369.56 415.086 367.487 417.643 367.487 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
UUMMJU+ArialMT*1 [10 0 0 -10 0 0 ]msf428.226 374.784 mo(Comp)[7.22 5.56 8.32993 0 ]xsh1.6 lw
410.333 359.136 mo
425.545 359.136 li
.895659 .848112 .507591 .675471 cmyk
@
[1 2 ] 0 dsh
410.333 372.117 mo
425.545 372.117 li
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/UUMMJM+SFBX1000*1 uf/UUMMJM+SFBX1000 uf/XHAAAA+SFBX1000 uf/UUMMJQ+CMR10*1 uf/UUMMJQ+CMR10 uf/XCAAAA+CMR10 uf/UUMMJN+MinionPro-Regular-Identity-H uf/UUMMJN+MinionPro-Regular /CIDFont ur/UUMMJR+CMSY10*1 uf/UUMMJR+CMSY10 uf/WCAAAA+CMSY10 uf/UUMMJO+SFRM1000*1 uf/UUMMJO+SFRM1000 uf/AIAAAA+SFRM1000 uf/UUMMJT+CMSY7*1 uf/UUMMJT+CMSY7 uf/CDAAAA+CMSY7 uf/UUMMJS+CMMI7*1 uf/UUMMJS+CMMI7 uf/GIAAAA+CMMI7 uf/UUMMJP+CMMI10*1 uf/UUMMJP+CMMI10 uf/DIAAAA+CMMI10 uf/UUMMJV+Arial-BoldMT*1 uf/UUMMJV+Arial-BoldMT uf/KIAAAA+Arial-BoldMT uf/UUMMJU+ArialMT*1 uf/UUMMJU+ArialMT uf/IIAAAA+ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
